
option java_package	= "com.hawk.game.protocol";
import "Reward.proto";
import "Common.proto";
import "YQZZWar.proto";

// 配置文件校验码
message	ConfigCheckCodePB
{
	required string configName =	1; // 配置名称
	required int32 checkCode 	=	2; // 校验码
}

// 配置文件校验码列表
message	ConfigCheckCodeList
{
	repeated ConfigCheckCodePB checkCodes =	1; // 配置文件校验码列表
}

// 请求拉取的配置文件列表
message	ConfigNameListReq
{
	repeated string configName =	1; // 配置名称列表
}


// 单个活动配置文件
message	ActivityConfigTablePB
{
	required string configName 	= 1; // 配置名称
	required int32 checkCode 	= 2; // 校验码
	required string cfgData		= 3; // 配置数据
}

// 活动配置文件列表
message	ActivityConfigsResp
{
	repeated ActivityConfigTablePB tables =	1;  // 活动配置文件列表
}

// 活动状态
enum ActivityState
{
	SHOW			= 1;	// 显示阶段，未开始
	OPEN			= 2;	// 活动已开始
	END				= 3;	// 活动已结束，此阶段可进行结算展示
	HIDDEN			= 4;	// 隐藏，活动正式完结（处于该状态的活动不会下发到客户端）
}

message	ActivityPB
{
	required int32 activityId		= 1;//活动ID
	required int32 stage			= 2;//活动进行次数
	required ActivityState state	= 3;//活动当前状态
	required int32 timeType			= 4;//时间类型
	required int64 showTime			= 5;//活动显示时间(ms)
	required int64 startTime		= 6;//活动开始时间(ms)
	optional int64 endTime			= 7;//活动结束时间(ms)
	optional int64 hiddenTime		= 8;//活动隐藏时间(ms)
	optional int64 remainTime		= 9;//当前时间到活动结束时间的剩余时间毫秒数(ms)
	optional int32 entranceType		= 10;//活动入口类型
	optional int64 newlyTime		= 11;//活动展示'新'标识的截止时间(ms)
}

message ActivityInfoSync
{
	repeated ActivityPB activityInfos = 1;// 活动列表
}

// 活动类型
enum ActivityType
{
	EMPTY_MODEL			= 1;	// 空白活动模版
	EMPTY_MODEL_TWO		= 2;	// 空白活动模版2
	EMPTY_MODEL_THREE	= 3;	// 空白活动模版3
	EMPTY_MODEL_FOUR	= 4;	// 空白活动模版4
	
	BUILD_LEVEL			= 6;	// 建筑等级活动
	LOGIN_DAY 			= 7;	// 累计登录活动 (按注册时间开启)
	LOGIN_SIGN 			= 8;	// 登录签到活动
	
	FESTIVAL			= 10;	// 八日盛典活动
	GROW_FUND			= 11;	// 成长基金活动
	
	MONSTER_2			= 13;	// 使命战争
	
	STRONEST_LEADER		= 15;	// 最强指挥官
	BROKEN_EXCHANGE     = 16;   // 战略储备	(按日期配置开启)
	YURI_REVENGE		= 17;	// 尤里复仇活动
	MONSTER_2_SHOW		= 18;	// 辐射危机(使命战争展示活动,按开服时间开启)
	POWER_UP			= 19;	// 战力提升活动
	LOGIN_FUND			= 20;	// 登录基金活动
	MONTHCARD     		= 21;	// 月卡周卡活动
	FIRST_RECHARGE		= 22;	// 首冲活动
	BUFF				= 23;   // 全服buff活动
	STRONG_POINT		= 24;	// 据点活动
	HELL_FIRE			= 25;   // 地狱火
	HELL_FIRE_TWO		= 26;   // 地狱火第二个
	HELL_FIRE_THREE		= 27;   // 地狱火第三个
	EQUIP_ACHIEVE		= 28;	// 精工锻造
	HERO_ACHIEVE		= 29;	// 英雄军团
	GROUP_PURCHASE		= 30;	// 跨服团购活动
	ACCUMULATE_RECHARGE	= 31;	// 累积充值
	ACCUMULATE_CONSUME	= 32;	// 累积消耗
	BOSS_INVADE			= 33;	// 首领入侵
	DOUBLE_RECHARGE		= 34;	// 充值翻倍
	DAILY_PREFERENCE	= 35;	// 每日特惠
	RECHARGE_GIFT       = 36;   // 充值豪礼
	LOTTERY_DRAW		= 37;	// 十连抽活动
	SUPER_WEAPON       	= 38;   // 超级武器
	WARZONE_WEAL		= 39;	// 战地福利
	BLOOD_CORPS			= 40;	// 铁血军团
	CONTINUOUS_RECHARGE = 41;	// 累积充值
	SUPER_GOLD          = 42;   // 超级金矿
	COPY_CENTER			= 43;  	// 复制中心
	TREASURY			= 44;   // 金币宝库
	
	GRATITUDE_GIFT 		= 50; 	// 感恩活动
	EMPTY_MODEL_FIVE	= 51;	// 空白活动模版5
	EMPTY_MODEL_SIX		= 52;	// 空白活动模版6
	EMPTY_MODEL_SEVEN	= 53;	// 空白活动模版7
	
	PANDORA_BOX			= 56;   // 潘多拉宝盒
	REWARD_ORDER        = 57;   // 悬赏令
	EMPTY_MODEL_EIGHT	= 58;	// 空白活动模版8 - 首充双倍
	EMPTY_MODEL_NINE	= 59;	// 空白活动模版9 - 突破枷锁
	EMPTY_MODEL_TEN	    = 60;	// 空白活动模版10 - 备用
	BROKEN_EXCHANGE_TWO	= 61;   // 战略储备2(按开服时间开启)
	LOGIN_DAY_TWO 		= 62;	// 累计登录2(按日期配置开启)
	YURI_ACHIEVE_TWO    = 63;   // 使命战争2(按日期配置开启)
	YURI_ACHIEVE_SHOW_TWO    = 64;  // 辐射危机2(使命战争2展示活动,按日期配置开启)
	BROKEN_EXCHANGE_THREE 	 = 65;  // 残卷兑换三
	FESTIVAL_TWO			 = 66;	// 八日盛典活动2(按日期配置开启)
	
	URL_MODEL_EIGHT			 = 70;  //URL模版活动8
	URL_MODEL_ONE			 = 71;	//URL模版活动1
	URL_MODEL_TWO			 = 72;	//URL模版活动2
	URL_MODEL_THREE			 = 73;	//URL模版活动3
	URL_MODEL_FOUR			 = 74;	//URL模版活动4
	LUCKY_START        	 	 = 75;  //幸运星活动
	TIME_LIMIT_DROP			 = 76;  //限时掉落
	PREFERENTIAL_SURPRISE	 = 77;	//特惠惊喜(累冲+积分宝箱)
	ALLY_BEAT_BACK			 = 78;  //盟军反击
	PRESENT_REBATE			 = 79;	//礼包返利(直购成就)
	GREAT_GIFT         		 = 80;  //超值好礼
	URL_MODEL_FIVE			 = 81;	//URL模版活动5
	URL_MODEL_SIX			 = 82;	//URL模版活动6
	URL_MODEL_SEVEN			 = 83;	//URL模版活动7
	DOME_EXCHANGE      	 	 = 84;  //穹顶兑换
	HERO_THEME			     = 85;  //英雄主题活动(最强步兵)
	MACHINE_AWAKE			 = 86;  //机甲觉醒
	SUPPLY_STATION      	 = 87;  //盟军补给站
	ONE_RMB_PURCHASE   		 = 88;  //一元购活动
	STRONGEST_GUILD    		 = 89;  //王者联盟
	CROSS_SERVER			 = 90;	//时空远征
	HERO_BACK_EXCHANGE  	 = 91;  //英雄返场 英雄回归
	HERO_BACK				 = 92;  //英雄返场 最强步兵
	SUPER_POWER_LAB     	 = 93;  //超能实验室
	
	GIFT_SEND           	 = 95;  //战地福利拷贝活动
	SHOP_SKIP           	 = 96;  //商城跳转
	RED_ENVELOPE        	 = 97;  //系统红包
	RED_ENVELOPE_PLAYER 	 = 98;  //玩家红包
	SUPPLY_STATION_COPY 	 = 99;  //欢购豪礼（手Q活动，欢购豪礼，补给站拷贝活动）
	SUPPLY_STATION_TWO		 = 100; //时空恋人. 复制联盟补给站.
	DOME_EXCHANGE_TWO		 = 101; //玫瑰之约. 复制穹顶兑换
	NEWYEAR_TREASURE		 = 102;	//新年寻宝
	MACHINE_AWAKE_TWO		 = 103; //机甲觉醒2(年兽)
	SEND_FLOWER_HUA			 = 104; //送花又收花
	RECALL_FRIEND			 = 105; //好友召回.
	COME_BACK_PLAYER_ACHIEVE 		 = 106; //回归发展冲刺活动
	COME_BACK_PLAYER_EXCHANGE		 = 107; //回归发展军资活动
	COME_BACK_PLAYER_DISCOUNT_BUY 	 = 108; //回归低折回馈
	COME_BACK_PLAYER_VERSION 		 = 109; //回归新版本爆料
	COME_BACK_PLAYER_GREAT_GIFT 	 = 110; //回归大礼
	INHERIT 						 = 111; //军魂承接
	QUESTION_SHARE 					 = 112; //情报分享 答题活动
	GUILD_BANNER    				 = 113; //占地为王（插旗）
	COMMON_EXCHANGE 				 = 114; //通用兑换
	TREASURE_CAVALRY    = 115; //夺宝骑兵
	BANNER_KILL_ENEMY   = 116; //战神降临
	MACHINE_SELL		= 117; //机甲破世
	CUSTOM_MADE_GIFT    = 118; //定制礼包
	GIFT_ZERO           = 119; //0元礼包
	ORDER_ACTIVITY		= 120; //红警战令
	BOUNTER_HUNTER_ACT  = 121; //推金币 
	DAILY_SIGN 			= 122; //月签	
	PLAN                = 123; //源计划
	SPREAD              = 124; //推广员	
	INVEST_ACTIVITY     = 125; //投资理财活动 
	LUCKY_DISCOUNT      = 126; //幸运折扣
	LUCKY_WELFARE       = 127; //幸运福利
	HERO_TRIAL			= 128; //英雄试炼
	CHAMPIONSHIP		= 129; //锦标赛
	COMMON_EXCHANGE_TWO = 130; //通用兑换
	BLACK_TECH			= 131; //黑科技
	FULLY_ARMED			= 132; //全副武装
	FIGHTER_PUZZLE		= 133; //武者拼图
	PIONEER_GIFTS       = 134; //先锋豪礼
	ROULETTE			= 135; //时空轮盘
	URL_MODEL_NINE  	= 136; //URL模版活动9
	URL_MODEL_TEN		= 137; //URL模版活动10
	SKIN_PLAN			= 138; //金字塔活动
	POWER_FUND			= 139; //战力基金
	ACCUMULATE_RECHARGE_TWO	= 140;	//累积充值2
	DAILY_RECHARGE_ACC	= 141; //今日累充
	MILITARY_PREPARE    = 142; //军事备战
	ALLIANCE_CARNIVAL	= 143; //联盟总动员
	MID_AUTUMN			= 144; //中秋庆典
	SIMULATE_WAR		= 145; //攻防模拟战.
	REDKOI_ACTIVITY     = 146; //红警锦鲤
	BREAK_SHACKLES_ACTIVITY = 147; //冲破枷锁
	TIME_LIMIT_LOGIN	= 148; //限时登录活动
	TRAVEL_SHOP_ASSIST  = 149; //特惠商人助力庆典
	DIVIDE_GOLD   		= 150; //瓜分金币活动
	MEDAL_ACTION 		= 151; //勋章行动
	FLIGHT_PLAN 		= 152; //威龙庆典-飞行计划活动
	EQUIP_TECH 			= 153; //装备科技活动
	SCENE_SHARE         = 154; //场景分享活动
	HERO_SKIN			= 155; //英雄皮肤
	HERO_EVOLUTION      = 156; //英雄进化之路
	DAILY_RECHARGE_NEW	= 157; //今日累充新版
	CROSS_CHARGE		= 158; //远征充能
	TBLY_GUESS			= 159; //泰伯利亚竞猜
	SAMURAI_BLACKENED	= 160; //黑武士.
	BASE_BUILD			= 161; //基地飞升
	COMMAND_COLLEGE     = 162; //指挥官学院
	CHRISTMAS_WAR		= 163; //圣诞大战.
	SNOWBALL			= 164; //雪球大战
	EQUIP_BLACK_MARKET	= 165; //装备黑市
	DESTINY_REVOLVER	= 166; //命运左轮
	RESOURCE_DEFENSE	= 167; //资源保卫战
	HERO_LOVE		    = 168; //英雄委任.
	CHRONO_GIFT         = 169; //时空豪礼
	RECHARGE_FUND		= 170; //充值基金
	BACK_GIFT           = 171; //回归有礼
	NEWLY_EXPERIENCE    = 172; //版本尝鲜
	DEVELOP_SPURT       = 173; //发展冲刺
	POWER_SEND          = 174; //体力赠送
	
	CHEMISTRY           = 176; //再续前缘
	
	RETURN_ARMY_EXCHANGE	= 178; //回归发展军资活动(新)
	RETURN_GIFT	 			= 179; //回归低折回馈(新)
	INHERIT_NEW 			= 180; //军魂承接(新)

	RADIATION_WAR			= 184; //新版辐射战争
	RADIATION_WAR_TWO		= 185; //新版辐射战争2
	
	JOY_BUY                 = 188; //欢乐购
	EXCHANGE_DECORATE       = 189; //兑换装扮
	GHOST_SECRET	    	= 190; //幽灵秘宝
	ENERGIES		    	= 191; //能源滚滚
	DRAGON_BOAT_CELEBRATION = 192; //端午节活动,联盟庆典
	DRAGON_BOAT_EXCHANGE    = 193; //端午节活动,道具兑换
	DRAGON_BOAT_GIFT        = 194; //端午节活动,龙船送礼
	DRAGON_BOAT_BENEFIT     = 195; //端午节活动,商店特惠
	DRAGON_BOAT_LUCKY_BAG   = 196; //端午节活动,节日福袋
	DRAGON_BOAT_RECHARGE    = 197; //端午节活动,节日充值
	VIRTUAL_LABORATORY      = 198; //虚拟实验室活动（武装技术翻牌）
	
	MEDAL_FUND 		    = 201; //勋章基金
	
	STAR_WAR		    = 203; //统帅之战(活动展示界面)
	RECHARGE_WELFARE 	= 204; //充值福利
	ARMIES_MASS         = 205; //沙场点兵
	OVERLORD_BLESS		= 206; //霸主赐福活动
	ENERGY_INVEST       = 207; //能量源投资
	SUPERSOLDIER_INVEST = 208; //机甲投资
	AIRDROP_SUPPLY		= 209; //空投补给
	SUPER_GOLD_TWO      = 210; //超级金矿2
	NEW_ORDER           = 211; //新服战令
	
	WAR_FLAG_TWO        = 215;  //鹊桥插旗
	RED_PACKAGE         = 216;  //红包活动
	
	GREETINGS           = 219;  //周年庆祝福语
	GROUP_BUY 			= 220;  //限时团购
	
	RECHARGE_QIXI       = 225;  //七夕充值
	DOUBLE_GIFT			= 227;	//双享豪礼

	ORDNANCE_FORTRESS   = 230;  //军械要塞
	
	ORDER_TWO			  = 236; //新版战令活动,替代ORDER_ACTIVITY
	SATELLITE_PLAN        = 237; //卫星计划
	CELEBRATION_FOOD	  = 238; //庆典美食
	FIRE_WORKS		      = 239; //烟花盛典
	CELEBRATION_COURSE    = 240; //周年历程
	CAKE_SHARE			  = 241; //分享蛋糕	
	CELEBRATION_SHOP      = 242; //周年商城
	EQUIP_CRAFTSMAN	      = 243; //装备工匠(装备词条投放活动)
	HONOR_REPAY		      = 244; //荣耀返利
	BATTLE_FIELD_TREASURE = 245; //战场寻宝
	
	XZQ_ACTIVITY          = 253; //小站区
		
	ARMAMENT_EXCHANGE     = 260; //军备升级兑换
	ORDER_EQUIP			  = 261; //装备战令活动
	GIFT_ZERO_NEW         = 262; //新0元礼包活动
	GROW_FUND_NEW         = 263; //新成长基金活动
	GLOBAL_SIGN           = 264; //全服签到
	JIGSAW_CONNECT        = 265; //拼图活动
	ALLIANCE_CELEBRATE    = 266; //联盟欢庆
	SUPER_DISCOUNT        = 267; //超级折扣
	
	RETURN_PUZZLE		= 268; //回流拼图
    PLANT_FORTRESS		= 269; //泰能宝库
	DRAWING_SEARCH  	= 270; //装扮投放系列活动一:搜寻图纸
	ENERGE_GATHER  		= 271; //装扮投放系列活动一:能量聚集
	FIRE_REIGNITE  		= 272; //装扮投放系列活动一:战火重燃
	GUNPOWDER_RISE  	= 273; //装扮投放系列活动一:硝烟再起
	TIME_LIMIT_BUY		= 274; //限时抢购
	PEAK_HONOUR			= 275; //巅峰荣耀
	ENERGE_GATHER_TWO  	= 276; //圣诞节系列活动一:冰雪计划活动
	FIRE_REIGNITE_TWO  	= 277; //圣诞节系列活动二:冬日装扮活动
	GUNPOWDER_RISE_TWO  = 278; //圣诞节系列活动三:冰雪商城活动
	CHRISTMAS_RECHARGE  = 279; //圣诞节系列活动:累计充值
	PLAYER_TEAM_BACK    = 280; //玩家回流活动

	BACK_PRIVILEGE             = 281; //回归特权
	FIGHTER_PUZZLE_SERVEROPEN  = 282; //武者拼图_开服启动
	COREPLATE_ACTIVITY         = 283; //雄芯壮志
	LOGIN_FUND_TWO			   = 285; //登录基金活动2 
	COMMAND_COLLEGE_SIMPLIFY   = 284; //指挥官学院简化
	HONG_FU_GIFT			   = 286; //洪福礼包
	RED_BLUE_TICKET            = 287; //翻牌活动
	MEDAL_FUND_TWO             = 288; //新版勋章投资活动
	DRESS_TREASURE             = 289; //精装夺宝
	PRESTRESSING_LOSS          = 290; //预流失(干预)活动
	LUCK_BOX                   = 292; //幸运转盘
	IMMGRATION                 = 293; //移民
	PLANT_SECRET               = 294; //泰能机密
	BEAUTY_CONTEST             = 295; //选美初赛
	BEAUTY_CONTEST_FINAL       = 296; //选美决赛
	RED_RECHARGE               = 297; //红包充值（新的欢乐限购）
	ALLIANCE_WISH              = 298; //联盟祝福
	
	SEA_TREASURE         	= 299; //秘海珍寻
	HIDDEN_TREASURE         = 300; //hidden_treasure 土拨鼠 
	LOVER_MEET              = 301; //7夕相遇
	HEAVEN_BLESSING	   	    = 302; //天降洪福
	GRATEFUL_BENEFITS	    = 303; //感恩福利
	HERO_WISH               = 304; //英雄祈福
	HEAL_EXCHANGE           = 305; //加速兑换
	ANNIVERSARY_CELEBRATE   = 306; //周年庆活动入口
	SHARE_GLORY             = 308; //荣耀共享
	EXCLUSIVE_MEMORY        = 307; //独家记忆
	HONOUR_HERO_RETURN      = 309; //荣耀英雄回归
	HONOUR_HERO_BEFELL      = 310; //荣耀英雄降临
	RECOVERY_EXCHANGE       = 311; //道具回收
	NEW_FIRST_RECHARGE      = 312; //新首充
	LOGIN_GIFT              = 313; //新版新手登录活动	
	DYZZ_ACHIEVE	        = 314; //陨晶战场成就活动
	NEW_YEAR_LOTTERY        = 315; //双旦活动
	SPACE_MACHINE_GUARD     = 316; //机甲玩法活动
	
	MACHINE_LAB             = 317; //机甲研究所活动
	MERGE_ANNOUNCE          = 318; //可拆分和服通告
	ROSE_GIFT	        	= 319; //玫瑰赠礼
	SEASON_ACTIVITY		    = 320; //赛季活动
	WORLD_HONOR_ACTIVITY    = 321; //世界勋章活动
	DIFF_INFO_SAVE          = 322; //情报储蓄
	DIFF_NEW_SERVER_TECH    = 323; //全军出击
	PDD_ACTIVITY            = 324; //拼多多活动
	CHANGE_SVR_ACTIVITY     = 325; //拆服转服功能
	JIGSAW_CONNECT_NEW      = 326; //拼图活动
	LUCK_GET_GOLD           = 327; //鸿运夺金
	SOLDIER_EXCHANGE        = 328; //兵种转换
	DRESS_COLLECTION        = 329; //周年庆称号（集齐所有周年装扮，激活永久5周年称号）
	CELEBRATION_FUND        = 330; //周年庆庆典基金
	APPOINT_GET				= 331; //【1026版本】3S委任英雄投放新活动-331
	GOLD_BABY_NEW           = 332; //金币觅宝（新服）
	GOLD_BABY               = 333; //金币觅宝
	NOVICE_TRAINING         = 334; //新兵作训
	DEVELOP_FAST      		= 335; //实力飞升
	DEVELOP_FAST_OLD      	= 336; //实力飞升(老服)
	DIRECT_GIFT             = 337; //新直购礼包活动
	CNY_EXAM 				= 338; //新春试炼
	BACK_TO_NEW_FLY 		= 339; //回流新服飞升
	BACK_TO_NEW_FLY_OLD		= 340; //回流新服飞升(老服用)
	INVITE_MERGE		    = 341; //合服邀请
	
	URL_MODEL_342           = 342;
	URL_MODEL_343           = 343;
	URL_MODEL_344           = 344;
	POINT_SPRINT_345        = 345;
	RETURN_UPGRADE_346      = 346;
	PLANET_EXPLORE_347      = 347; //星能探索
	SUPPLY_CRATE            = 348; //幸运补给箱
	GROW_UP_BOOST           = 349; //中部养成计划
	JIJIA_SKIN              = 350; //机甲皮肤
	SHOOTING_PRACTICE       = 351; //打靶活动
	DAILY_BUY_GIFT          = 352; //每日必买任务专用
	LOTTERY_TICKET          = 353; //呱呱乐
	ANNIVERSARY_GIFT        = 354; //周年好礼
	PLANT_WEAPON_355        = 355; //泰能超武投放活动
	BACK_SOLDIER_EXCHANGE   = 356; //回流转兵
	BACK_IMMGRATION         = 357; //回流移民
	STAR_INVEST             = 358; //星海投资
	GUILD_BACK              = 359; //联盟回流
	PLANT_WEAPON_BACK_360   = 360; //泰能超武返场活动
	BEST_PRIZE_361          = 361; //新春头奖专柜活动
	PLANT_SOLDIER_FACTORY   = 362; //泰能辉金投放活动
	QUEST_TREASURE          = 363; //秘境寻宝
	SUBMARINE_FIGHT         = 364; //潜艇大战
	FIRST_RECHARGE_THREE    = 365; //首冲活动复刻3
	HONOR_MOBILIZE          = 366; //荣耀动员
	NEW_START                = 367; //破晓启程
	SERVER_MERGE_COMPETITION = 368; //新服合服比拼
	MECHA_CORE_EXPLORE       = 369; //机甲核心勘探
	DRESS_COLLECTION_TWO     = 370; //复制周年庆称号（集齐所有周年装扮，激活永久5周年称号）
	AFTER_COMPETITION_PARTY  = 371; //赛后庆典
	SCENE_IMPORT             = 372; //场景化的整体入口
	SEASON_PUZZLE            = 373; //赛季拼图
	GUILD_DRAGON_ATTACK      = 374; //巨龙来袭
	MATERIAL_TRANSPORT		 = 375; //押镖
	SHARE_PROSPERITY         = 376; //有福同享活动
	DEEP_TREASURE            = 377; //深海秘藏
	HOT_BLOOD_WAR            = 378; //热血畅战
	URL_MODEL_379			 = 379; //URL模版活动2
	URL_MODEL_380			 = 380;	//URL模版活动2
	URL_MODEL_381			 = 381;	//URL模版活动2
	HOME_LAND_PUZZLE	     = 382;	//心愿庄园拼图活动
	HOME_LAND_ROUND	     	 = 383;	//命运轮盘机
	

	YQZZ_ACTIVITY       = 998; //月球之战
	
	CFG_GIFT			= 10001; //走活动更新超值礼包的配置
	CFG_TRAVEL_SHOP 	= 10002; //特惠商人.
	CFG_SHOP            = 10003; //商城

}

//残卷兑换的操作类型
enum BrokenExchangeOper{
	RESOURCE_COLLECT = 100; 	//城内资源采集
	WORLD_COLLECT = 200;    	// 世界资源采集
	BEAT_YURI = 300;        	// 击败尤里
	WISH = 400;             	// 许愿
	PACKAGE_BUY = 500;          //礼包购买
	GUILD_DONATE = 600;           //联盟捐献
}
// 活动玩家数据key
enum PlayerKey
{
	PLAYER_ID 					= 1; // 玩家id
	ACTIVITY_STATE 				= 2; // 玩家自身的活动状态
	ACTIVITY_ENTITY 			= 3; // 玩家的活动数据
	ACHIEVE_ENTITY				= 4; // 玩家成就数据
}

// ----------活动TASK消息id---------
enum ActivityMsgType
{
	CALL_BACK										= 1000; // 回调消息
	PLAYER_ACREOSS_DAY_LOGIN						= 1001; // 玩家跨天登录
	PLAYER_SEND_MAIL								= 1002; // 给玩家发送邮件
	PLAYER_PUSH_MSG									= 1003; // 玩家推送消息
	PLAYER_ADD_REWARD_FROM_ACTIVITY					= 1004; // 给玩家添加奖励
	PLAYER_ADD_REWARD_BY_REWARD_ID_FROM_ACTIVITY	= 1005; // 通过奖励id给玩家添加奖励
	ASYNC_POST_ACTIVITY_EVENT						= 1006; // 异步抛出活动事件
}


//-----------活动周历-----------------
message ActivityWeekCalendar{
	repeated ActivityWeekCalendarElement elements = 1;
}


//周历活动简述
message ActivityWeekCalendarElement{
	required int32 activityId    = 1;   //活动ID
	required int64 startTime     = 2;   //开启时间
	required int64 endTime       = 3;	//结束时间
	optional string extParams    = 4;   //额外参数   103机甲觉醒活动  
}

//请求周历内容
message ActivityWeekCalendarInfoReq{}


//返回周历内容
message ActivityWeekCalendarInfoResp{
	required ActivityWeekCalendar weekCalendar = 1;
}


// ---------建筑等级活动------------
// 活动项状态
enum AchieveState
{
	NOT_ACHIEVE			= 1;	// 未达成
	NOT_REWARD			= 2;	// 已达成未领取
	TOOK				= 3;	// 已领取
}
// 建筑等级活动单项数据
message BuildLevelItemPB
{
	required int32 itemId				= 1; // 配置id
	required int32 level 				= 2; // 等级
	required int32 state 		= 3; // 状态
}
// 建筑等级活动项列表
message BuildLevelInfoSync
{
	repeated BuildLevelItemPB item		= 1; // 活动项列表
}

// 领取建筑等级活动奖励
message	TakeBuildActivityRewardReq
{
	required int32 itemId				=	1;  // 配置项id
}
// ------------------------------


// ---------登录签到活动---------
// 登录签到活动数据同步
message LoginSignInfoSync
{
	required int32 curDay			= 1; // 当前领取天数
	required int32 itemId			= 2; // 已领取奖励的配置id，没有领取则为0
}
// ------------------------------


// ---------成就---------
// 成就项数据
message AchieveItemPB
{
	required int32 achieveId				= 1; // 配置id
	required int32 state 					= 2; // 状态
	required int32 value 					= 3; // 成就当前数值
}
// 成就项列表
message AchieveItemsInfoSync
{
	repeated AchieveItemPB item		= 1; // 成就项列表
}
// 领取成就奖励
message	TakeAchieveRewardReq
{
	required int32 achieveId		=	1;  // 成就id
	optional int32 orgin		=	2;  // 奖励表现类型,如果有值,放在HPPlayerReward的origin字段中
}

// 一键领取多个成就项的奖励
message	TakeAchieveRewardMultiReq
{
	repeated int32 achieveId	=	1;  // 成就id
	optional int32 orgin		=	2;  // 奖励表现类型,如果有值,放在HPPlayerReward的origin字段中
}


// ---------八日庆典活动---------
message FestivalInfoSync
{
	required int32 curDays			= 1; // 当前天数
	optional int64 rewardTime		= 2; // 积分宝箱奖励可领取时间
	repeated ScoreRewardTimeLimit limit	= 3; // 八日庆典活动宝箱领取时间限制
}

message ScoreRewardTimeLimit
{
	required int32 achieveId			= 1;
	required int64 timeLimit	= 2;
}
// ------------------------------


// ---------等级基金活动---------
message GrowfundInfoSync
{
	required bool isBuy			= 1; // 是否已购买等级基金
}

// 新成长基金活动数据同步
message GrowfundNewInfoSync
{
	required bool isBuy			= 1; // 是否已购买等级基金
}

// ------------------------------


// ---------登录基金活动---------
message LoginFundInfoSync
{
	required bool isBuy			= 1; // 是否已购买等级基金
	optional bool isNew			= 2; // 是否进入过该活动页签
	required int32 loginDay 	= 3; // 累计登录天数
}
// ------------------------------
// ---------战力基金活动---------
message PowerFundInfoSync
{
	required bool isBuy			= 1; // 是否已购买战力基金
}

// ---------推送礼包活动---------
// 单个礼包信息
message PushGiftPB
{
	required int32 levelId				= 1; // 礼包等级id
	required string reward				= 2; // 礼包奖励通用串
	required int32 order				= 3; // 排序顺序
	required int64 endTime				= 4; // 到期时间（毫秒）
	required string showPrice			= 5; //
	required string giveReward			= 6; // 赠送奖励
}
// 礼包列表
message PushGiftInfoSync
{
	repeated PushGiftPB gifts			= 1; // 可购买的礼包列表
}
// 购买礼包
message	PushGiftBuyReq
{
	required int32 levelId 				=	1;  // 礼包等级id
}
// ------------------------------


// ---------最强指挥官活动---------
// 任务目标
message LearderTargetPB
{
	required int32 targetId				= 1;// 目标id
	required int32 targetScore			= 2;// 目标累计积分
	required bool isAchieve				= 3;// 是否达成
}
// 我的积分
message MyScorePB
{
	required int64 score				= 1;// 我的积分
}
// 当前阶段信息
message LeaderStageInfo
{
	required int32 stageId				= 1;// 阶段id
	required MyScorePB score			= 2;// 我的积分
	repeated LearderTargetPB target		= 3;// 当前阶段目标列表
	required int64 stageStartTime		= 4;// 当前阶段开始时间（毫秒）
	required int64 stageEndTime			= 5;// 当前阶段结束时间（毫秒）
}
// 排行信息
message RankPB
{
	required int32 rank					= 1;// 名次
	optional string guildName			= 2;// 联盟名称
	required string playerName			= 3;// 玩家名称
	optional int64 score				= 4;// 积分
    optional string playerId            = 5; // 玩家ID
    repeated int32 personalProtectSwitch = 6; // 个保法开关
}
// 我的阶段排名
message StageMyRankPB
{
	required int32 stageId				= 1;// 阶段id
	required int32 rank					= 2;// 名次
}
// 单个阶段排行列表
message StageRankInfo
{
	required int32 stageId				= 1;// 阶段id
	repeated RankPB rankList			= 2;// 排行列表
}
// 所有阶段排行列表
message StageRankList
{
	repeated StageRankInfo allStageList	= 1;// 所有阶段排名列表
	repeated StageMyRankPB myStageRank	= 2;// 我的所有阶段名次列表
}

// 总排行列表
message TotalRankList
{
	repeated RankPB rankList			= 1;// 排行列表
	optional RankPB myRank				= 2;// 我的名次
}

message LeaderAllInfo
{
	required LeaderStageInfo stageInfo	= 1;// 阶段目标信息
	required StageRankList stageRankList = 2;
	required TotalRankList totalRankList = 3;
}

// 历史最强指挥官阶段信息
message HistoryStageRankPB
{
	required int32 stageIndex			= 1;// 期数
	required string time				= 2;// 时间
	repeated RankPB rankList			= 3;// 排名列表
}

// 历史最强指挥官每期信息
message HistoryRankList
{
	repeated HistoryStageRankPB stageList		= 1;// 期数列表
}
// ------------------------------

//---------------王者联盟----------------
//联盟榜单
message StrongestGuildRankInfo{
    required int32 rank					= 1; // 名次
	optional string guildName			= 2; // 联盟名称
	optional int64 score				= 3; // 积分
	optional int32 guildFlag            = 4; // 联盟旗帜
	optional string guildTag            = 5; // 联盟简称
}

message StrongestGuildTarget{
    required int32  targetId       = 1;  //阶段目标
	optional bool finish           = 2;  //是否达成
	optional bool recieveReward    = 3;  //是否领奖
	optional int64 targetScore     = 4;  //目标的积分
}

//界面信息
message StrongestGuildInfo{
    required int32 stageId       = 1; //阶段id
	required int64 curScore      = 2; //当前阶段我获得的积分
	repeated int32 receiveTarget = 3; //已经领取过的目标奖励
	required int64 startTime     = 4; //当前阶段开始时间
	required int64 endTime       = 5; //当前阶段结束时间
	optional int64 guildScore           = 6; //我的联盟积分
	repeated StrongestGuildTarget target = 7; //阶段目标
	optional int64 prepareTime   = 8; //准备时间
}

//个人榜数据
message StrongestGuildPersonRank{
    repeated RankPB stageRank     = 1; //当前阶段个人榜
	optional RankPB myStageRank	  = 2;// 我的名次
	repeated RankPB totalRank     = 3; //个人总榜
	optional RankPB myTotalRank   = 4; //个人总榜我的名次
	repeated OtherStagePersonRank otherStageRank = 5; //其它阶段个人榜
}

message OtherStagePersonRank{
    optional int32 stageId        = 1; //阶段id
	optional RankPB rank          = 2; //阶段排行
}

message StrongestGuildGuildRank{
    repeated StrongestGuildRankInfo stageRank = 1;   //联盟阶段榜
	optional StrongestGuildRankInfo myStageRank = 2; //本盟阶段榜
	repeated StrongestGuildRankInfo totalRank = 3;   //联盟总榜
	optional StrongestGuildRankInfo myTotalRank = 4; //本盟总榜
	repeated OtherStageGuildRank otherStageRank = 5; //其它阶段联盟榜
}

message OtherStageGuildRank{
    optional int32         stageId       = 1; //阶段id
	repeated StrongestGuildRankInfo rank = 2; //联盟排行
}

//历史榜单
message StrongestGuildHistory{
    repeated StrongestGuildHistoryInfo infos = 1;
}

//一期活动的历史
message StrongestGuildHistoryInfo{
    optional int32 termId = 1;
	optional int64 startTime = 2;
	optional int64 endTime = 3;
	repeated RankPB personRank  = 4;
	repeated StrongestGuildRankInfo guildRank = 5;
}

//玩家请求奖励
message StrongestGuildRewardReq{
    required int32 targetId = 1; //目标id
}

//王者联盟玩家状态变化(积分改变)
message StrongestGuildStateChange{
	required int64 score = 1; //当前阶段积分
}

//---------------王者联盟----------------


//--------------------残卷兑换---------------------
//上线推送一次兑换活动的信息
message BrokenExchangeInfoSyn{
	repeated BrokenExchangeMsg exchangeInfo = 1 ;//兑换信息
}


message BrokenExchangeMsg{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}

//兑换 客户端自己维护一下 已兑换的信息
message BrokenExchangeReq{
	required int32 exchangeId = 1; //兑换ID
	required int32 num  =2; //兑换的个数
}

message BrokenExchangeResp{
	required int32 exchangeId = 1; //兑换ID
	required int32 num = 2; //兑换的次数
}
// ------------------------------

//-----------------地狱火-------------------

message HellFireInfoC {

}

//玩家上线会推送一次, 第一次的数据由服务器主动推送，后续的数据由客户端打开界面请求
//阶段开始的时候会推送一次, 玩家第一次解锁的时候也会.
message HellFireInfoS {
	required HellFireInfoMsg infoMsg = 1; //地狱火活动的玩家信息
}

message HellFireInfoMsg
{
	required int32 cycleId = 1; //周期ID
	repeated KeyValuePairInt targetCfgIdStatus = 2; //targetId{targetId, status}  status 0 未完成， 1完成已领取, 2已领取.
	required int32 score = 3; //积分 通过积分可以算出哪些target是完成的.
	required int64 endTime = 4; //当前这个阶段的结束时间.
}

message HellFireRankResp{
	required int64 myScore = 1;//我的积分
	required int32 myRank = 2; //我的排名
	repeated HellFireRankMsg rankList = 3; //排行榜的列表信息.

}

//地狱火第二个活动
message HellFireTwoInfoS{
	required HellFireInfoMsg infoMsg = 1; //地狱火第二个活动
}

message HellFireTwoRankResp{
	required int64 myScore = 1;//我的积分
	required int32 myRank = 2; //我的排名
	repeated HellFireRankMsg rankList = 3; //排行榜的列表信息.

}

//地狱火第三个活动
message HellFireThreeInfoS {
	required HellFireInfoMsg infoMsg = 1; //地狱火第三个活动
}

//领奖,通用返回
message HellFireOneReceiveReq{
	required int32 targetId = 1; //领取哪个目标奖励.
}
//领奖,通用返回
message HellFireTwoReceiveReq{
	required int32 targetId = 1; //领取哪个目标奖励.
}
//领奖,通用返回
message HellFireThreeReceiveReq{
	required int32 targetId = 1; //领取哪个目标奖励.
}

message HellFireRankMsg{
	required int32 rank					= 1;// 名次
	optional string guildName			= 2;// 联盟名称
	required string playerName			= 3;// 玩家名称
	required int64 score				= 4;// 积分
    optional string playerId            = 5; // 玩家ID
    repeated int32 personalProtectSwitch = 6; // playerId那个player对应的个保法开关
}


///////////////////// 战神降临活动 //////////////////////

message BannerKillActInfoPB {
	required int64 score = 1;   // 积分
	repeated KeyValuePairInt targetIdStatus = 2; //targetId{targetId, status}  status 0 未完成， 1完成已领取, 2已领取.
}

// 战神降临活动排行信息
message BannerKillRankResp {
	required int64 myScore = 1;//我的积分
	required int32 myRank = 2; //我的排名
	repeated BannerKillRankMsg rankInfo = 3; //排行榜的列表信息.

}

// 排行信息
message BannerKillRankMsg {
	required int32 rank					= 1;// 名次
	optional string guildName			= 2;// 联盟名称
	required string playerName			= 3;// 玩家名称
	required int64 score				= 4;// 积分
}

// 领取战神降临目标积分奖励请求
message BannerKillRewardGetReq {
	required int32 targetId = 1; //领取哪个目标奖励.
}

/////////////////// 插旗（联盟）活动 ////////////////////////////

// 插旗活动页面信息
message GuildBannerPageInfoResp {
	repeated int32 createBannerPoint          = 1; // 联盟建造的可交战旗帜（已建完未被夺走）的坐标（int数值，前三位为x坐标, 后四位为y坐标，以下也是按此规则解析）
	repeated int32 occupyBannerPoint          = 2; // 联盟占领（抢夺）可交战旗帜的坐标
	repeated int32 loseBannerPoint            = 3; // 联盟丢失（被抢夺）可交战旗帜的坐标
	required int32 createBannerCount          = 4; // 联盟建造旗帜数量
	required int32 occupyBannerCount          = 5; // 联盟占领旗帜数量
	required int32 loseBannerCount            = 6; // 联盟丢失旗帜数量
	optional int32 maxCreateBanner            = 7; // 最大可造旗帜数量
	
	repeated int32 centerBannerPoint          = 8; // 可交战母旗坐标
	repeated int32 centerOccBannerPoint       = 9; // 抢夺中的，可交战母旗坐标
	repeated int32 centerBeOccBannerPoint     = 10; // 被抢夺中的，可交战母旗坐标
	optional int32 centerMaxCount			  = 11; // 母旗最大数量
	optional int32 centerCurrCount			  = 12; // 母旗当前数量
}

// 插旗活动排行信息
message GuildBannerRankResp {
	required int64 myGuildScore          = 1; //所在联盟的积分（旗帜数）
	required int32 myGuildRank           = 2; //所在联盟的排名
	required string myGuildName          = 3; //所在联盟的名称
	required int32 myGuildFlag           = 4; //所在联盟的标志
	required string myGuildLeader        = 5; //所在联盟的盟主
	required string guildTag             = 6; //所在联盟的简称
	repeated GuildBannerRankMsg rankInfo = 7; //排行榜的列表信息.

}

// 排行信息
message GuildBannerRankMsg {
	required int32 rank				  = 1;// 名次
	required int64 score			  = 2;// 积分（旗帜数）
	required string guildName         = 3;  //联盟名称
	required int32 guildFlag          = 4;  //联盟标志
	required string guildLeader       = 5;  //联盟盟主
	required string guildTag          = 6;  //联盟简称
}


//-----------------十连抽活动-------------------
// 十连抽界面信息
message LotteryDrawPageInfo{
	required int32 cellId 			= 1; //当前格子id
	required bool  canFree			= 2; //当前是否可进行
	required int64 nextFreeTime		= 3; //下次免费抽奖时间
	required int32 nextEnsureTimes	= 4; //下次必得保底奖励剩余抽奖次数
	required int32 multiPer			= 5; //多倍奖励概率
	required int32 multiStage		= 6; //当前阶段进度
	required int32 totalStage		= 7; //总阶段数
	required bool  isMulti			= 8; //下次翻倍倍率
	optional int32 totalCnt			= 9; //累计抽取次数
}

// 中奖结果
message DrawResult{
	required int32 cellId	= 1;
	required int32 multi	= 2;
}

// 抽奖
message DoLotteryDrawReq{
	required bool tenTimes	=	1;// 是否十连抽
}

message DoLotteryDrawResp{
	repeated DrawResult result = 1; //兑换ID
	required LotteryDrawPageInfo pageInfo = 2; //界面信息
}
//-----------------十连抽活动-------------------

message SuperGoldResult{
    repeated RewardItem result = 1; //获得的奖励数量
	required SuperGoldInfo info = 2;//刷新页面
}

message SuperGoldInfo{
    required int32 achieveId = 1; //当前未挖矿成就id
	required float maxRate   = 2; //最大倍率
}
// 复制中心
message PBCopyCenterReq{
	optional int32 heroId = 1; // heroid
}


//-----------------连续充值活动-------------------

// 连续充值界面信息
message ContinuousRechargePage
{
	repeated ContinuousRechargeInfo rechargeInfo = 1;
}

// 连续充值信息
message ContinuousRechargeInfo
{
	required int32 day = 1;
	required int32 count = 2;
	repeated int32 rewardedGrade = 3;  // 已领取过奖励的充值档次，对应配置表中的count字段值
}

// 连续充值奖励领取
message ContinuousRechargeRewardReq
{
	required int32 day = 1;    // 第n天奖励
	required int32 grade = 2;  // 充值档次，对应配置表中的count字段值
}


//-----------------铁血军团活动-------------------
// 铁血军团排行信息
message BloodRankInfo{
	required int32 rank		= 1;
	required string name	= 2; //玩家名称
	required int64 score	= 3; //积分
    optional string playerId = 4; // 玩家ID
    repeated int32 personalProtectSwitch = 5; // playerId那个player对应的个保法开关
}

// 铁血军团信息
message BloodRankListResp{
	repeated BloodRankInfo rankInfo = 1; // 排行列表
	optional BloodRankInfo selfRank = 2; // 个人排行
	required BloodScoreInfo scoreInfo = 3; //个人积分信息

}

// 玩家积分信息
message BloodScoreInfo
{
	required int32 totalScore	= 1;
	required int32 buildScore	= 2;
	required int32 techScore 	= 3;
	required int32 armyScore 	= 4;
}
//-----------------铁血军团活动-------------------

//-------------------金币宝库开始--------------------
//金币宝库的信息
message TreasuryInfo {
	repeated TreasuryMsg treasuries = 1 ;//宝藏列表
}

//领取
message TreasuryReceiveReq {
	optional int32 treasuryId = 1; //宝藏表的ID
}
message TreasuryReceiveResp {
	required int32  treasuryId = 1;
	required int32  result = 2; //0为成功，其它为错误码.收到之前重置一下状态
}

message TreasuryMsg {
	required int32 treasuryId = 1; //宝藏ID
	required int32 storageNum = 2; //放进去的数量
	required int32 receivedFlag = 3 ;//是否已经领取 1已经领取
	required int32 costNum = 4;   //消耗的数量
}

//------------------金币宝库结束---------------------


// 感恩
message PBGratitudeGiftRewarResp{
	optional string rewards = 1;
}

message PBGratitudeGiftSync{
	optional int32 hasReward = 1; //是否可领取 1是 0 否 2不可领取
}

// 感恩哈哈

//------------潘朵拉宝盒--------------
message PandoraLotteryReq{
     required int32 count      = 1; //抽奖次数
}

message PandoraLotteryInfoResp{
     required int32 score = 1; //积分.
	 required int32 freeCount = 2; //使用免费次数.
	 optional int32 lotteryCount = 3; //总共的抽奖次数
	 repeated RewardItem rewards = 4; //之前抽奖和请求信息一起了所以只能放在这个协议里面 如果有该信息说明是抽奖返回,否则只是普通的同步请求信息.

}

//商城信息
message PandoraStoreInfoResp{
     repeated PandoraGoodsMsg goods = 1; //商品
}

//商品
message PandoraGoodsMsg{
     required int32 id         = 1; //id
	 optional int32 buyNum 	   = 2; //如果没有购买过则不传.
}

//兑换
message PandoraExchangeReq{
     required int32 cfgId      = 1; //商城配置id
	 required int32 count      = 2; //数量
}

message PandoraStoreInfoUpdate{
	required PandoraGoodsMsg goodsMsg = 1; //更新的商品信息.
}
//------------潘朵拉宝盒--------------

//------------盟军悬赏令--------------
message rewardOrderInfo{
    repeated rewardOrder orders     = 1; //悬赏令列表
	optional int32 freshCnt         = 2; //当前刷新次数
	optional int64 nextFreshTime    = 3; //下一次免费刷新的时间
	optional int32 finishCnt        = 4; //今日完成次数
}

//单个悬赏令
message rewardOrder{
    required int32 orderId          = 1; //悬赏令id
	required orderState state       = 2; //悬赏令状态
	optional int64 endTime          = 3; //悬赏令结束时间
}

enum orderState{
    NOT_RECEIVED                    = 1; //还未领取
    RECEIVED                        = 2; //已经领取
	FINISH                          = 3; //已经完成
	FAIL                            = 4; //失败
}

message rewardOrderResult{
    required int32 orderId          = 1; //悬赏令id
	required int32 result           = 2; //结果 0为失败，1为成功
}

//领取悬赏令
message recieveOrder{
    required int32 orderId           = 1;
}

//------------盟军悬赏令--------------


// 复制中心次数同步
message PBCopyCenterSync{
	optional int32 frequencyS = 1; // s级已用次数
	optional int32 frequencySS = 2; // ss级已用次数
}

//---------幸运星--------------
message luckyStarInfo{
    repeated luckyStarGiftInfo giftLeftBuyCnt = 1; //礼包剩余购买信息
	required int32 sumLotCnt = 2; //总的抽奖次数
	optional string lastGiftId = 3; //最后一次购买的礼包id
	optional string recieveBagId = 4; //是否有免费宝箱可以领取
}

message luckyStarGiftInfo{
    required string giftId = 1; //礼包ID
	required int32 leftBuyCnt = 2; //剩余购买次数 -1表示无限制
}

message luckyStarLottery{
    required int32 lotCnt = 1; //抽奖次数
}

//领取幸运星免费宝箱结构
message luckyStarRecieveFreeBag{
    required string bagId = 1; //免费宝箱的id
}

//抽奖返回
message luckyStarLotResponse{
    optional int32 lotId = 1; //单抽中奖的配置id
    repeated RewardItem reward = 2;
}

//---------幸运星--------------

//---------超值好礼------------
message greatGiftInfo{
    repeated string bags = 1; //已经购买的礼包id
	optional int32 canBuyGrade = 2;
	repeated int32 chests = 3; //已经领取的宝箱奖励
	optional int64 nextFreshTime = 4; //下一次刷新的时间
}

//超值好礼玩家领取宝箱奖励
message greatGiftOperate{
    required int32 id = 1; //宝箱ID
}

//---------超值好礼------------||||||| .r159883

//---------限时掉落---------------
message TimeLimitDropRankMsg {
	required int32 rank					= 1;// 名次
	optional string guildName			= 2;// 联盟名称
	required string playerName			= 3;// 玩家名称
	required int64 score				= 4;// 积分
	optional string playerId             = 5; // 玩家ID
    repeated int32 personalProtectSwitch = 6; // playerId那个player对应的个保法开关
}

message TimeLimitDropRankReq {
}

message TimeLimitDropRankResp {
	required int64 myScore = 1;//我的积分
	required int32 myRank = 2; //我的排名
	repeated TimeLimitDropRankMsg rankList = 3; //排行榜的列表信息.
}
//---------限时掉落---------------
//----------盟军反击-----------
//请求盟军反击信息,
message AllyBeatBackInfoReq {

}

//返回盟军反击信息
message AllyBeatBackInfoResp {
	required int32 receivedTime = 1;// 客户端根据和当前的时间比较,然后再判断成就是否完成来判定是否可领奖 注意跨天.
	repeated KeyValuePairInt exchangeTimes = 2; //兑换次数.
}

//领奖
message AllyBeatBackReceiveReq {
}

message AllyBeatBackExchangeReq {
	required int32 exchangeId = 1; //
	required int32 num		  = 2; //兑换个数
}


//----------盟军反击-----------

//----------穹顶兑换-----------
message domeExchangeTips{
    required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

message domeExchangeSyncInfoSyn{
	repeated DomeExchangeMsg exchangeInfo = 1 ;//兑换信息
	repeated int32 tips = 2; //兑换提示
	repeated GeneralExchangeTip newTips = 3;//新兑换
}

message DomeExchangeMsg{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}
//----------穹顶兑换-----------


//----------机甲觉醒-----------
enum MachineAwakeState{
	SLEEP	=	1; //即将刷新
	AWAKED	=	2; //已觉醒
	FINISHED	=	3; //本期活动已全部结束
}

enum MachineAwakeTwoType
{
	NIAN = 1; //机甲
	GHOST = 2; // 幽灵
}
// 机甲类型同步
message MachineAwakeTwoSync
{
	required MachineAwakeTwoType type = 1; // 机甲类型
}

message GetMachineAwakePageInfoResp{
	required MachineAwakeState state 	= 1;
	required int64 nextFreshTime		= 2;
	required int32 totalDamage			= 3;//今日/累计伤害
}

// 获取机甲觉醒伤害排行榜信息
message GetDamageRankInfo{
	required DamageRankType rankType = 1;
}

message GetDamageRankInfoResp{
	repeated DamageRankInfo rankInfo = 1; //排行信息
	optional DamageRankInfo selfRank = 2; //己方个人/联盟排行
	required DamageRankType rankType = 3;

}

// 伤害排行类型
enum DamageRankType{
	SELF_DAMAGE_RANK	= 1;
	GUILD_DAMAGE_RANK	= 2;
}

// 机甲觉醒伤害排行信息
message DamageRankInfo{
	required int32 rank		= 1;
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
	optional string playerId = 5; //玩家ID
    repeated int32 personalProtectSwitch = 6; // playerId那个player对应的个保法开关
}
//----------机甲觉醒-----------


//----------送花-----------

// 基础信息
message PBSendFlowerResp{
	required int32 sendNum = 1; // 送花量
	required int32 shouNum = 2; //
	required int64 laPiaoShiJian = 3; // 上次拉票时间
}

// 排行/ 记录类型
enum PBSendFlowerType{
	SONG_HUA_TYPE = 1; // 送花
	SHOU_HUA_TYPE = 2; // 收花
}

message PBSendFlowerRankInfoResp{
	repeated PBSendFlowerRankInfo rankInfo = 1; //排行信息
	optional PBSendFlowerRankInfo selfRank = 2; //己方个人/联盟排行
	required PBSendFlowerType rankType = 3; // 送花/收花

}

// 送花排行信息
message PBSendFlowerRankInfo{
	required int32 rank		= 1;
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
}

message PBSendFlowerRecordResp{
	repeated PBSendFlowerRecordInfo recordInfo =1; // 送收记录
	required PBSendFlowerType rankType = 2;
}

message PBSendFlowerRecordInfo{
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
	required int64 time 	= 5; //时间
}

// 送花
message PBSendFlowerSendReq{
	optional string toPlayerId = 1; // 送谁
	optional int32 count = 2;
}

// 买花
message PBSendFlowerBuyReq{
	optional int32 cfgId = 1; //send_flower_count
}

//----------送花-----------

//----------补给站-------------
message SupplyStationBuyReq{
     required int32 id     = 1; //宝箱id
	 required int32 count  = 2; //购买数量
}
message SupplyStationInfo{
     repeated SupplyStationItem items = 1;
}
message SupplyStationItem{
     optional int32 id = 1; //配置id
	 optional int32 buyCnt = 2; //可购买数量
}
//-----------补给站------------

// 一元购活动信息
message OneRMBPurchaseInfo
{
	required int32 day       = 1; // 第几天
}


// -------- 【先锋豪礼】 -------------

// 活动信息推送
message PioneerGiftActivityInfo
{
	required int32 day                = 1; // 活动第几天
    repeated PioneerGiftInfo giftInfo = 2; // 礼包信息
    required bool freeGiftTaken       = 3; // 免费礼包（当日）是否已领取
    required int32 accDay             = 4; // 累计购买天数	
}

// 礼包信息
message PioneerGiftInfo
{
	required int32 type      = 1; // 档次类型
	required int32 giftId    = 2; // 礼包ID
	required bool  purchased = 3; // 是否已购买
}

// 选择档次礼包请求
message PioneerGiftSelectReq
{
	required int32 type       = 1;  // 档次类型
    required int32 giftId     = 2;  // 礼包ID
}

// -------- 【先锋豪礼】 -------------


//----------英雄返场 最强步兵-------------
message HeroBackBuyReq{
     required int32 id     = 1; //宝箱id
	 required int32 count  = 2; //购买数量
}
message HeroBackInfo{
     repeated HeroBackItem items = 1;
}
message HeroBackItem{
     optional int32 id = 1; //配置id
	 optional int32 buyCnt = 2; //可购买数量
}
//-----------英雄返场 最强步兵------------

//----------英雄返场 英雄回归-----------
message HeroBackExchangeTips{
    required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

message HeroBackExchangeSyncInfoSyn{
	repeated HeroBackExchangeMsg exchangeInfo = 1 ;//兑换信息
	repeated int32 tips = 2; //兑换提示
}

message HeroBackExchangeMsg{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}
//----------英雄返场 英雄回归-----------

//------------能量收集------------------
message PowerCollectInfo{
   optional PowerCollectPersonRank myRank = 1;
   repeated PowerCollectPersonRank personRank = 2;
   optional PowerCollectGuildRank myGuildRank = 3;
   repeated PowerCollectGuildRank guildRank = 4;
   optional int32 collectCnt = 5; //能量收集的个数
}

message PowerCollectPersonRank{
    optional int32 rank = 1;
	optional int64 score = 2;
	optional string guildName = 3;
	optional string playerName = 4;
	optional string guildTag = 5;
	optional string playerId             = 6; // 玩家ID
    repeated int32 personalProtectSwitch = 7; // playerId那个player对应的个保法开关
}

message PowerCollectGuildRank{
    optional int32 rank = 1;
	optional int64 score = 2;
	optional string guildName = 3;
	optional string guildTag = 4;
	optional int32 guildFlag = 5; //联盟旗帜
}
//------------能量收集------------------

//------------新春红包------------------
enum RedEnvelopeState{ //红包状态
    CAN_RECIEVE         = 1; //可领取
	ALREADY_RECIEVED    = 2; //已领取
	DELIVE_OVER         = 3; //已派完
	ONT_START           = 4; //未开始
	ALREADY_OVER        = 5; //已经结束
}

message RedEnvelopeRecieve{
    optional int32 id = 1; //领取的红包id
}

message RedEnvelopeActivityInfo{
    repeated RedEnvelopeInfo redEnvelope = 1; //红包
}

message RedEnvelopeInfo{
    optional int32 id = 1; //红包id
	optional int64 showTime = 2; //展示时间
	optional int64 startTime = 3; //开始时间
	optional int64 endTime = 4; //结束时间
	optional RedEnvelopeState state = 5; //红包状态
}

message RedEnvelopeHistoryInfo{
    repeated RedEnvelopeHistory history = 1;
}

message RedEnvelopeHistory{
    optional int64 time = 1; //领取的时间
	repeated string rewards = 2; //领取到的奖励
	optional int32 stageId = 3; //阶段ID
}

message RedEnvelopeRecieveDetail{
     repeated string reward = 1;
	 optional RedEnvelopePersonState state = 2;
}

message RedEnvelopeDetail{
     repeated string reward = 1;
}

//领取个人玩家红包，红包的id
message RedEnvelopePlayerRecieve{
     optional string id = 1; //红包id
}

//个人红包领取详情
message RedEnvelopePlayerRecieveDetails{
     repeated RedEnvelopeOnceDetail detail = 1;
	 optional int32 id = 2; //红包的配置id
	 optional RedEnvelopeSenderInfo sender = 3; //发送的信息
}

message RedEnvelopeSenderInfo{
     optional string pfIcon = 1;
	 optional string name = 2;
	 optional string msg = 3; //发送的消息
	 optional int32 icon = 4;
}

message RedEnvelopeOnceDetail{
    optional string pfIcon = 1;
	optional string playerName = 2;
	optional int32 reward = 3;
	optional int32 icon = 4;
	optional string playerId = 5; //玩家id
	optional string rewardItem = 6;
}

//个人红包状态
message RedEnvelopePersonalState{
    optional string id = 1; //红包id
    optional RedEnvelopePersonState state = 2; //红包状态
}

enum RedEnvelopePersonState{
    PERSON_RECEIVED = 1; //已领取
	PERSON_RECEIVED_END = 2; //已经抢光
}


message HPRedEnvelope{
    required string	chatMsg			= 1; //聊天内容
	//0:普通聊天,1:公会聊天
	required int32 chatType			= 2; //聊天类型
	optional int32 id                 = 3; //红包id
}

//------------新春红包-----------------

//召回
message RecallFriendReq {
	required string openId = 1; //针对哪个账号做了召回.
}

//召回成功 客户端修改一下对应的openId状态.
message RecallFriendResp {
	required RecallFriendPlayerMsg playerMsg = 1;
	repeated string selfRecalledOpenId = 2; //自己召回的好友openid列表
}

//请求可召回好友列表
message RecallFriendInfoReq {

}

//返回可召回好友列表
message RecallFriendInfoResp {
	repeated RecallFriendPlayerMsg msg = 1; //召回好友信息
	required int32 recalledNum         = 2; //使用的召回个数.
    repeated string selfRecalledOpenId = 3; //自己召回的好友openid列表
}

message RecallFriendPlayerMsg {
	optional string playerId 		= 1; 	// 玩家ID
	required string openid      	= 2;  	// 玩家 openId
	required string playerName  	= 3;  	// 玩家的名字
	required string nickName    	= 4;  	// 昵称
	optional int32 icon 			= 5;  	// 头像
	required string pfIcon      	= 6;  	// 平台头像
	required RecallFriendState  recalled = 7;    //是否已经召回.
	required string serverId		= 8; //注册服.
}


enum RecallFriendState {
	RECALL_FRIEND_NONE = 0; //无操作
	RECALL_FRIEND_RECALLING = 1; //召回中
	RECALL_FRIEND_RECALLED = 2; //已经召回
	RECALL_FRIEND_MISS	   = 3; //玩家已经召回,但是此玩家不触发.
}
//-----------好友召回------------------

//-----------联盟召回------------------
//召回联盟req
message RecallGuildBackFlowReq {
	required string playerId = 1; //玩家Id
}



//请求可召回联盟回流玩家列表
message RecallGuildBackFlowInfoReq {

}

//返回可召回联盟回流玩家列表
message RecallGuildBackFlowInfoResp {
	repeated RecallGuildBackFlowMsg canRecallMsg = 1; //可召回好友信息
	repeated RecallGuildBackFlowMsg hasRecallMsg = 2; //已经召回好友信息
	repeated RecallGuildAchieveInfo guildAchieve = 3; //联盟任务完成数量数据
}


message RecallGuildBackFlowMsg {
	optional string playerId 			= 1; 	// 玩家ID
	optional string nickName    		= 2;  	// 昵称
	optional int32 icon 				= 3;  	// 头像
	optional string pfIcon 				= 4;  	// 头像
	optional int32 facLv				= 5;  	// 基地等级
	optional bool isOnline 				= 6;  	// 是否在线
	optional RecallState recallState 	= 7;  	// 召回状态

}

message RecallGuildAchieveInfo {
	optional int32 type 				= 1; 	// 联盟召回任务类型
	optional int32 num    				= 2;  	// 数量
}
//联盟中召回的状态
enum RecallState {
	RECALL_NONE 		= 0; //无操作
	RECALL_COMPLETE 	= 1; //已经召回过
}
//-----------联盟召回------------------



//-----------老玩家回归----------------
message ComeBackPlayerRecieveGreatReward{
    optional int32 rewardId = 1;
}
message ComeBackPlayerExchangeMsg{
    optional int32 exchangeId =  1;
	optional int32 num = 2;
}
message ComeBackPlayerBuyMsg{
    optional int32 buyId = 1;
	optional int32 num = 2;
}

message ComeBackPlayerRewardInfo{
    repeated int32 recieveIds = 1; //领取过的回归大礼
	optional int32 lostDay = 2; //流失的天数
}
message ComeBackPlayerExchangeInfos{ //已经兑换过的信息
    repeated ComeBackPlayerExchangeMsg exchangeInfo = 1;
	optional int32 playerType = 2;
}
message ComeBackPlayerBuyInfo{ //已经购买过的信息
     repeated ComeBackPlayerBuyMsg items = 1;
	 optional int32 playerType = 2;
}
//-----------老玩家回归----------------
//------------情报分享系统 答题系统-----

//回答问题
message QuestionShareAnswerReq{
	optional int32 answerIndex = 1;
}

//今日答题信息同步
message QuestionShareInfoResp{
	repeated uint32 question = 1; 		//今日题
	repeated uint32 answer = 2; 		//今日答 0 未回答 1,2,3,4
	repeated uint32 result = 3;			//今日答题结果 0 忽略 1 正确 2错误
	repeated uint32 share = 4;			//今日分享 0 未分享 1 已分享
	optional uint32 sharedAmount = 5; 	//累计分享次数
	optional uint32 dailyAwarded = 6; 	//每日奖励领取 0 未领取 1 已领取
}
//------------情报分享系统 答题系统-----

//-------------军魂承接----------------
enum InheritStatus{
	OLD_SERVER		= 1; //老服
	NEED_ACTIVE		= 2; //新服-待激活
	ACTIVED			= 3; //已激活
}

// 传承活动界面信息
message InheritPageInfo{
	required InheritStatus status 	 = 1; //界面状态
	optional PlayerRoleInfo	roleInfo = 2; //继承对象信息
	repeated RewardItem rewards 	 = 3; //继承奖励-金币,vip经验
	required bool isProprietary		 = 4; //是否是专服
	repeated PlayerRoleInfo inheritedRole    = 5; // 已被传承过的角色信息
	repeated PlayerRoleInfo notInheritedRole = 6; // 还未被传承过的角色信息
}

message PlayerRoleInfo {
	optional string playerId 		= 1; // 玩家ID
	required string openid      	= 2; // 玩家 openId
	required string playerName  	= 3; // 玩家的名字
	optional int32 icon 			= 4; // 头像
	required string pfIcon      	= 5; // 平台头像
	required string serverId		= 6; // 注册服
	optional int32 vipLevel     	= 7; // vip等级
	optional int32 rechargeDiamonds = 8; // 充值金条数
	optional int32 rebetExp         = 9; // 可传承的vip经验
	optional int32 rebetDiamonds    = 10; // 可传承的金条数
	optional int32 currentInherited = 11; // 是否是当前被传承的那个角色，1是0否
}

//-------------军魂承接----------------

//-------------夺宝骑兵------------
message PBTreasuryInfo{
	optional int32 pool = 1; // 将池, 预览
	optional int64 freeTime = 2; // 免费刷新时间
	repeated int32 rewardId = 3; // 9个牌子id. 没抽的是0
	optional int32 refreshTimes = 4; // 已刷新次数, 
	optional int32 maxRefresh = 5; // 最大刷新数
	optional int32 multiple = 6; // 下次必翻倍
	optional string refreshCost = 7; // 刷新消耗
	optional string openCost = 8; // 翻牌消耗
}

message PBTreasuryOpen{
	optional int32 index = 1; // 0 , 1,2, 3,4 ....
}

/**刷新回复, 展示动画用*/
message PBTreasuryRefreshResp{
	optional int32 pool =1; // 将池
}

//-------------机甲破世-----------------

message HPMachineSellLotteryReq{
	optional int32 lotteryType = 1; // 1:抽一次 2:抽五次
}

message HPMachineSellLotteryInfoNtf{
	optional int32 times = 1; //总抽奖次数
	optional int32 singleTimes = 2; //今日单次抽奖次数
}

message HPMachineSellLotteryResp{
	optional int32 lotteryType = 1; // 1:抽一次 2:抽五次
	repeated int32 lotteryIds = 2;//抽到的奖励
}
//-------------机甲破世-----------------

//-------------定制礼包-----------------
// 定制奖励请求
message CustomRewardSelectReq
{
	required int32 giftId = 1;    // 定制礼包的礼包ID
	repeated int32 rewardId = 2;  // 定制礼包下所选择的奖励ID
}

// 免费领取定制奖励请求
message CustomRewardGetReq
{
	required int32 giftId = 1;    // 定制礼包的礼包ID
}

message CustomGiftInfoList
{
	repeated CustomGiftInfoPB customGift = 1;
	required int32 count = 2;  // 免费次数
}

// 定制礼包信息
message CustomGiftInfoPB
{
	required int32 giftId       = 1;  // 礼包ID
	optional int64 purchaseTime = 2;  // 购买时间，为0表示当日未购买
	repeated int32 rewardId     = 3;  // 定制礼包下所选择的奖励ID
	optional bool isFreeGet		= 4;  // 是否免费获取过
}

//-------------定制礼包-----------------

//-------------0元礼包-----------------
// 礼包购买请求
message GiftZeroBuyReq
{
	required int32 giftId = 1;    // 礼包ID
}

message GiftZeroInfoList
{
	repeated GiftZeroInfoPB gift = 1;
}

// 0元礼包信息
message GiftZeroInfoPB
{
	required int32 giftId       = 1;  // 礼包ID
	optional int64 purchaseTime = 2;  // 购买时间，为0表示还未购买
}

// 礼包购买请求
message GiftZeroNewBuyReq
{
	required int32 giftId = 1;    // 礼包ID
}

message GiftZeroNewInfoList
{
	repeated GiftZeroNewInfoPB gift  = 1;
	optional bool freeRewardTaken    = 2; //当日是否已领取免费奖励
}

// 0元礼包信息
message GiftZeroNewInfoPB
{
	required int32 giftId       = 1;  // 礼包ID
	optional int64 purchaseTime = 2;  // 购买时间，为0表示还未购买
}


//-------------0元礼包-----------------


//-------------投资理财-----------------

// 请求购买理财产品
message InvestBuyReq
{
	required int32 productId  = 1;  // 理财产品ID
	required int32 amount     = 2;  // 投资额度
	required bool buyCustomer = 3;  // 是否购买理财顾问加成
}

// 请求领取投资收益（及本金）
message InvestProfitReq
{
	required int32 productId  = 1;  // 理财产品ID
}

// 取消投资
message InvestCancelReq
{
	required int32 productId  = 1;  // 理财产品ID
}

// 投资信息列表
message InvestInfoList
{
	repeated InvestInfoPB product = 1;
}

// 投资信息
message InvestInfoPB
{
	required int32 productId    = 1;  // 礼包ID
	required int32 amount       = 2;  // 投资额度
	required int64 investTime   = 3;  // 购买理财产品的时间
	required bool buyCustomer   = 4;  // 是否购买理财顾问加成
	required bool received      = 5;  // 投资收益（及本金）是否已领取
}

//-------------投资理财-----------------


//-------------红警战令-----------------
// 战令单元数据
message OrderItemPB
{
	required int32 id				= 1; // 战令id
	required int32 times 			= 2; // 完成次数
	required int64 value 			= 3; // 任务完成值
}

// 战令币商店
message OrderShopItemPB
{
	required int32 id		= 1; // 商品id
	required int32 count	= 2; // 商品数量
}

// 战令数据列表
message OrderItemsInfoSync
{
	repeated OrderItemPB item		= 1; // 成就项列表
}

// 战令活动基础数据
message OrderBaseInfo{
	required int32 currCycle	= 1;	// 当前阶段
	required int32 level		= 2;	// 战令等级
	required int64 exp			= 3;	// 经验值
	optional int32 authorityId	= 4;	// 进阶id
	repeated int32 buyExpId		= 5; 	// 已购买战令经验道具列表
	optional int32 weekNumber	= 6;	// 本周已购买次数
	repeated int32 rewardNormalLevel   = 7;  //普通奖励领取等级
	repeated int32 rewardAdvancedLevel = 8;  //进阶奖励领取等级
}

// 获取战令活动界面信息
message GetOrderPageInfoResp
{
	required OrderBaseInfo baseInfo	= 1;
	repeated OrderItemPB item		= 2; // 成就项列表
	repeated OrderShopItemPB shopItem = 3; // 已购买的商店商品列表
}

// 购买经验道具
message BuyOrderExpReq
{
	required int32 expId		= 1;	//经验道具id
}

// 获取战令活动历史任务数据
message GetHistoryOrderInfoReq
{
	required int32 cycleId		= 1;	//周数
}

message GetHistoryOrderInfoResp
{
	required int32 cycleId		= 1;	//周数
	repeated OrderItemPB item	= 2; // 成就项列表
}

// 购买战令等级
message BuyOrderLvlReq
{
	required int32 currLvl = 1;
}

// 战令商店兑换
message OrderShopBuyReq{
	required OrderShopItemPB itemInfo = 1;
}



message OrderRewardAchieveReq{
	required int32 rewardType = 1;  //领奖内容  1普通奖励  2进阶奖励
	repeated int32 rewardLevel   = 2;  //普通奖励领取等级
}


//一键领奖返回
message OrderRewardAchieveAllResp{
	repeated RewardItem normalRewards = 1; //正常奖励
	repeated RewardItem doubleRewards = 2; //双倍奖励
}


//-------------红警战令-----------------

// 同步
message PBHunterInfoSync{
	optional int32 bossState = 1; // Boss状态 1 普通boss 有血条  2 高级boss 无血条
	optional int32 lefState = 2; //0 1 2  存活 死亡 逃跑
	optional int32 bossHp = 3; // Boss血量
	optional string nextCost = 4; // 下次消耗
	optional string awardList = 5; // 奖励表
	optional int32 free = 6; //免费
	optional int32 mutil = 7; //  倍数
	optional int32 batter = 8; // 连击数
	optional bool freeGet = 9; // 免费礼物有没有领取
}

// 夸服大奖列表
message PBHunterWorldBigGiftSync{
	repeated PBHunterInfo players = 1; // 中奖人表
	optional int64 allGold = 2; 
	repeated PBHunterSelfRecord seldRec = 3;
}
// 个人奖励
message PBHunterSelfRecord{
	optional int32 type = 1;  // 1 功击雪怪 2 功击超级雪怪 3 杀雪怪 4 杀超级怪
	optional int64 time = 2;
	optional string reward = 3; 
}

// 中大奖人信息
message PBHunterInfo{
	optional string name = 1;
	optional string pficon = 2;
	optional int32 icon = 3;
	optional string serverId = 4;
	optional string guildTag = 5;
	optional int64 time = 6;
	optional string reward = 7;
	optional string playerId = 8;
	repeated int32 personalProtectSwitch = 9; // playerId那个player对应的个保法开关
}
//===================月签=========================
// 月签玩家信息
message PBDailySignPlayerInfo{
	optional int32 signDays = 1;   				//已经签到次数
	optional int32 signToday = 2;  				//今日签到次数
	optional int32 resignDays = 3; 				//补签次数
	repeated RewardItem rewards = 4; 			//玩家本轮所有的奖励
}

//月签 
message PBDailySignInfoSync{
	optional int32 curDayIndex = 1; 			 //当前第几天	
	optional int32 curTerm = 2; 			 	 //当前第几轮
	optional PBDailySignPlayerInfo info = 3;     //玩家签到信息
}

//补签
message PBDailySignResignReq{
	optional int32 resignDay = 1; 			 //当前补签第几次
}

//数据
message PBDailySignTermRewards{
	repeated RewardItem termRewards = 1; //玩家本轮所有的奖励
}
//==========================月签============================

//===========================源计划==============================

enum HPPlanLotteryType{
	PLAN_CHARGE_SENIOR = 1;
	PLAN_CHARGE_BLAST = 2;
}

message HPPlanLotteryReq{
	optional int32 lotteryType = 1; // 1:高级充能 2:磁暴充能
}

message HPPlanInfoNtf{
	optional int64 score = 1; 		//当前积分
	repeated RankPB rankTop3 = 2; 	//前三信息
}

message HPPlanResp{
	optional int32 lotteryType = 1; // 1:高级充能 2:磁暴充能
	repeated int32 lotteryIds = 2;//抽到的奖励
	optional int32 lotteryScore = 3;//抽到的积分
	optional float lotteryMulti = 4;//积分暴击倍数
}

message HPPlanRankResp{
	repeated RankPB rank = 1;
}
//===========================源计划==============================

//============================推广员===============================

//推广员活动消息
message HPSpreadInfoSync{
	repeated KeyValuePairInt exchangeInfos = 1;  //已经兑换的次数 K(商店配置表id)/V(已经兑换次数)
	required int32 dayReward = 2;			     // 0未领取,1已领取
	required int32 bindCode = 3;			     // 0未绑定,1已绑定
	repeated KeyValuePairInt canRewardTimes = 4; // 老玩家能领取的次数
	repeated KeyValuePairInt rewardedTimes = 5; //  老玩家已经领取的次数
	optional int32 friendCnt = 6; // 成功邀请数
	repeated GeneralExchangeTip tip = 7;// 通用兑换
}

//绑定推广码 <一个账号只能绑定一个>
message HPBindSpreadCodeReq{
	required string code = 1; //推广码	
}

//请求推广商店兑换
message HPSpreadStoreBuyReq{
	required int32 id = 1;      //配置表id
	
	required int32 count = 2;   //数量
}

//推广员好友结构
message PBSpreadFriendInfo{
	required string playerId = 1;
	required string playerName = 2;
	required string pfIcon = 3;
	required int32 icon = 4;  	// 头像
	required int32 viplevel = 5;
	required int32 cityLevel = 6;
	required string serverId = 7;
	repeated int32 finishOldAchieve = 8; // 因完成成就而完成邀请人成就
}

//推荐好友信息
message HPSpreadFriendInfoResp{
	repeated PBSpreadFriendInfo friends = 1;
}

//已绑定我的推广码的玩家
message PBSpreadBindRoleInfo{
	required string openId = 1;
	required string playerId = 2;
	required string serverId = 3;
}

//message PBSpreadBindRoleInfos{
//	repeated PBSpreadBindRoleInfo infos = 1;
//}

message HPSpreadRewardAchieveReq{
	required int32 cfgId = 1;
}
//============================推广员===============================

//============================幸运折扣============================

message HPLuckDiscountInfoSync{
	required int32 freeTimes = 1;  		//免费次数
	required int32 state =2;			//奖励状态、0 不可兑换/1 可兑换
	required int64 deadLine = 3;		//本次随机到的奖池关闭时间
	repeated KeyValuePairInt goods = 4; //已经兑换的次数 K(商店配置表id)/V(已经兑换次数)
	required int32 poolId = 5;			//随机到的奖池id
}

message HPLuckyDiscountBuy{
	required int32 cfgId = 1;
	required int32 count = 2;
}
//============================幸运折扣============================








//============================英雄试炼============================


// 英雄试炼活动界面信息 <HERO_TRIAL_PAGE_INFO_REQ> <HERO_TRIAL_PAGE_INFO_RESP>
message HeroTrialPageInfoResp
{
	required int32 acceptTimes 	= 1; // 当日已领取任务次数
	repeated int32 trialHeroIds = 2; // 已经在试炼中的英雄id
	repeated HeroTrialInfo info = 3; // 任务信息

}

// 英雄试炼任务信息
message HeroTrialInfo
{
	required string missionUUid = 1; // 任务唯一id
	required int32 missionCfgId = 2; // 任务配置id
	required bool hasAccept		= 3; // 是否已经接受任务
	optional bool hasAdvance	= 4; // 是否有进阶奖励
	optional int64 raminTime	= 5; // 还有多久可以领奖(ms)，小于等于0就可以领了
	repeated int32 heroId		= 6; // 试炼英雄id
	optional int64 canAwardTime = 7; // 可以领奖时间
}



// 英雄开始试炼(领取任务)  <HERO_GO_TRIAL_REQ> <HERO_TRIAL_PAGE_INFO_RESP>
message HeroGoTrialReq
{
	required string missionUUid	= 1; // 任务唯一id
	repeated int32 heroIds 		= 2; // 英雄id
}



// 试炼加速 <HERO_TRIAL_SPEED_UP> <HERO_TRIAL_PAGE_INFO_RESP>
message HeroTrialSpeedUp
{
	required string missionUUid	= 1; // 任务唯一id
}



// 领取试炼奖励 <HERO_TRIAL_GET_REWARD> <HERO_TRIAL_PAGE_INFO_RESP>
message HeroTrialGetReward
{
	required string missionUUid	= 1; // 任务唯一id
}
//================================================================


//============================腾讯url活动 空模板活动8====================================
message PBEmptyModel8Info{
	required bool isReward = 1;    //是否领取过每日奖励
	required bool isShared = 2;    //今日是否分享过
}

message PBEmptyModel9Info{
	required bool isReward = 1;    //是否领取过每日奖励
	required bool isShared = 2;    //今日是否分享过
}

message PBEmptyModel10Info{
	required bool isReward = 1;    //是否领取过每日奖励
	required bool isShared = 2;    //今日是否分享过
}

//============================腾讯url活动 空模板活动8====================================


//============黑科技活动==============
//黑科技信息同步
message HPBlackTechActivityInfoSync{
	required int32  curPoolId = 1;			//当前的池id
	required int32  activeTimes = 2;		//剩余激活次数		
	required int32  freeTimes = 3;			//免费刷新次数	
	required int32  useGoldenTimes = 4;		//使用金币刷新次数	
	required int64  deadline = 5;           //本次buff截止的时间
	repeated KeyValuePairInt goods = 6;     //已经购买的次数 K(商店配置表id)/V(已经兑换次数)
}

//购买加持包
message HPBlackTechActivityBuy{
	required int32 cfgId = 1;
	required int32 count = 2;
}

//============黑科技活动==============
//============全副武装活动=======================
message HPFullyArmedActivityInfoSync{
	required int32  curIndex = 1;			//当前已经探测过的最大id
	repeated KeyValuePairInt goods = 2;     //已经购买的次数 K(商店配置表id)/V(已经兑换次数)
}

//购买探测仪
message HPFullyArmedActivityBuy{
	required int32 cfgId = 1;
	required int32 count = 2;
}
//============全副武装活动=======================

//=============时空轮盘活动============================

enum RouletteLotteryType{
	ONE = 1;     //抽一次
	TEN = 10;    //抽十次
}

message PBRouletteActivityItemInfo{
	required int32 cfgId = 1;
	required string itemStr = 2;	
}
//消息同步
message  HPRouletteActivityInfoSync{
	repeated PBRouletteActivityItemInfo itemSet = 1;  //奖励的设置
	required int32 score = 2;				   //时空宝箱进度(分数)
	optional int32 curBoxId = 3;				//当前段的id
	optional int32 curBoxTimes = 4;				//当前段的已领取次数
	optional int32 freeTimes = 5;				//当前剩余免费次数
}

//请求抽奖
message HPRouletteActivityLotteryReq{
	required RouletteLotteryType lotteryType = 1; 
}

//请求抽奖返回
message HPRouletteActivityLotteryResp{
	required RouletteLotteryType lotteryType = 1; 		//抽奖类型
	required int32 cfgId = 2;							//抽到的奖池id
	repeated RewardItem rewards = 3; 					//奖励
}

//请求设置奖励
message HPRouletteActivityItemSetReq{
	repeated PBRouletteActivityItemInfo itemSet = 1;  //设置奖励
}

//=============时空轮盘活动============================

// ---------武者拼图活动---------
message FightPuzzlePageInfo
{
	required int32 currDay		= 1; // 第几天
	required int32 score		= 2; //	积分	
}
// ---------武者拼图活动---------


// ---------回流拼图活动---------
message ReturnPuzzlePageInfo
{
	required int64 endTime		= 1; // 结果时间 如果为0表示活动结束	
	required int32 score		= 2; //	已完成天数
	required int32 picOrder		= 3; // 对应pic order
	required int32 backType		= 4; // 回流类型
}
// ---------武者拼图活动---------

//------------皮肤计划活动扔骰子--------------//
//扔骰子返回
message SkinPlanRollDiceResp{
	required int32 score = 1; //积分
    repeated RewardItem rewards = 2; //奖励信息
	required int32 rollPoint = 3; //骰子点数
	required bool canRoll = 4;    //是否可以扔骰子
}
//界面信息返回
message SkinPlanInfoResp{
     required int32 score = 1; //积分
	 required bool canRoll = 2;    //是否可以扔骰子
}
//------------皮肤计划活动扔骰子--------------

//---------------- 每日累充活动 ----------------------------

// 每日累充活动已购买宝箱信息
message DailyRechargeAccBoughtInfo
{
	repeated int32 boxId = 1;
}

// 每日累充活动购买宝箱信息请求
message DailyRechargeAccBuyReq
{
	required int32 boxId = 1;
}

// 今日累充定制礼包信息列表
message RechargeBuyGiftList
{
	repeated RechargeBuyGiftInfoPB gift = 1;
}

// 今日累充定制礼包信息
message RechargeBuyGiftInfoPB
{
	required int32 giftId       = 1;  // 礼包ID
	repeated int32 rewardId     = 2;  // 定制礼包下所选择的奖励ID
	required bool bought        = 3;  // 是否已购买
}

// 今日累充定制奖励选择请求
message RechargeBuyGiftCustomReq
{
	required int32 giftId = 1;    // 定制礼包的礼包ID
	repeated int32 rewardId = 2;  // 定制礼包下所选择的奖励ID
}

// 今日累充活动购买礼包请求
message RechargeBuyGiftReq
{
	required int32 giftId = 1;
}

//---------------- 每日累充活动 ----------------------------

//--------------------中秋庆典兑换信息---------------------
//上线推送一次兑换活动的信息
message MidAutumnInfoSyn{
	repeated MidAutumnExchangeMsg exchangeInfo = 1 ;//兑换信息
	repeated MidAutumnGiftInfoMsg giftInfo = 2 ;	// 购买的礼包信息
	repeated int32 tips = 3; //有兑换提示的选项
}

//兑换信息
message MidAutumnExchangeMsg{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}
//礼包信息
message MidAutumnGiftInfoMsg{
	required int32 giftId = 1; //礼包ID
	repeated int32 rewardId = 2;  //奖励id, list结构直接取index就行
}

//兑换 客户端自己维护一下 已兑换的信息
message MidAutumnExchangeReq{
	required int32 exchangeId = 1; //兑换ID
	required int32 num  =2; //兑换的个数
}

message MidAutumnExchangeResp{
	required int32 exchangeId = 1; //兑换ID
	required int32 num = 2; //兑换的次数
}

// 中秋庆典购买请求
message MidAutumnGiftBuyReq
{
	required MidAutumnGiftInfoMsg buyGiftInfo = 1;
}
//中秋庆典兑换提示请求
message MidAutumnExchangeTipsReq{
    required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}
// ------------------------------



//--------------------联盟总动员---------------------


// 联盟总动员界面信息 ALLIANCE_CARNIVAL_PAGE_INFO_PUSH
message AllianceCarnivalPageInfo
{
	optional int32 level 		= 1; // 等级(联盟的)
	optional int32 exp 			= 2; // 经验(联盟的)
	optional int32 unlockCount	= 3; // 解锁人数
	optional int32 receiveTimes	= 4; // 接受任务次数
	optional string initGuildId = 5; // 初始联盟id
	optional int32 initCityLevel	= 6;  // 初始大本等级
	repeated ACMissionInfo mission  = 7;  // 任务信息
	optional string initGuildName 	= 8;  // 初始联盟名字
	optional int32 buyTimes			= 9;  // 购买次数
	optional int32 playerExp 		= 10; //玩家的积分（个人总积分）
	optional int32 exchangeTimes 	= 11; //兑换次数
	optional int32 dayBuyNumber 	= 12; //每日购买次数
    optional bool payGift           = 13; //是否购买过典藏礼包
	optional int32 allianceExp      = 14; //联盟总积分
    optional int32 pLevel           = 15; //等级（个人的）
    optional int32 pExp             = 16; //经验（个人的）    
}

// 联盟总动员任务
message ACMissionInfo
{
	optional ACMissionState state = 1;
	optional string uuid		= 2;
	optional int32 missionId	= 3;
	optional int64 endTime	= 4;

}

// 联盟总动员任务状态
enum ACMissionState
{
	AC_REFRESHING 	= 1; // 刷新中
	AC_CAN_RECEIVE = 2; // 可接受
	AC_RECEIVED	= 3; // 已接受
}

// 联盟总动员排名信息
message ACRankInfoMsg
{
	repeated ACRankMsg rankMsg = 1;
}

// 联盟总动员排名信息
message ACRankMsg
{
	required string playerId 	= 1; // 玩家id
	required string playerName 	= 2; // 玩家名字
	required int32 exp 			= 3; // 经验
	required int32 finishTimes 	= 4; // 完成次数
	required int32 cityLevel	= 5; // 大本等级
	repeated int32 personalProtectSwitch = 6; // playerId那个player对应的个保法开关
}

// 联盟总动员接受任务 ALLIANCE_CARNIVAL_RECEIVE_MISSION_REQ
message ACReceiveMission
{
	required string uuid = 1;
}

// 联盟总动员删除任务 ALLIANCE_CARNIVAL_DELETE_MISSION_REQ
message ACDeleteMission
{
	required string uuid = 1;
}

// 联盟总动员放弃任务 ALLIANCE_CARNIVAL_ABANDON_MISSION_REQ
message ACAbandonMission
{
	required string uuid = 1;
}

// 联盟总动员任务改变 未必用的上，先定义 ALLIANCE_CARNIVAL_SINGLE_MISSION_PUSH
message ACMSinglePush
{
	required ACMissionInfo mission = 1; // 有变动的任务
	required ACMChangeReason reason= 2; //任务变动原因
	
}

// 联盟总动员任务变动原因
enum ACMChangeReason
{
	ACM_ADD = 1; // 任务增加
	ACM_UPDATE = 2; // 任务更新
	ACM_DELETE = 3; // 任务删除
}

message ACExpAdd
{
	required int32 addValue = 1; //增加值
}

//聪盟总动员兑换
message ACExchange
{	
}

// ------------------------------






//------------红警锦鲤---------------



//红警锦鲤活动信息
message RedKoiInfo{
	//锦鲤奖品
	required int32 koiAwardId = 1;
	//锦鲤点数
	repeated AwardWishPoint points = 2;
	//全服锦鲤点数
	repeated AwardWishPoint serverPoints = 3;
	//免费次数
	required int32 freeTimes = 4;
	//开奖时间
	required int64 lotteryTime = 5;
	//是否是最后一轮  0 不是  1 是
	required int32 isEndTurn = 6;
}

//锦鲤点数
message AwardWishPoint{
	//锦鲤奖品
	required int32 awardId = 1;
	//愿望点数
	required int32 point = 2;
}

//获取活动数据
message RedKoiInfoSyncReq{

}
//获取活动数据响应
message RedKoiInfoSyncResp{
	required RedKoiInfo info = 1;
}

//许愿
message KoiWishReq{
	required int32 times = 1;
}

//许愿响应
message KoiWishResp{
	//奖品ID
	repeated int32 awardIds = 1;
}

//锦鲤记录
message KoiAwardRecord{
	//奖励ID
	required int32 awardId = 1;
	//玩家信息
	required PlayerRoleInfo info = 2;
	//时间
	required int64 awardTime = 3;
}

//锦鲤记录请求
message KoiAwardRecordsReq{}

//锦鲤记录响应
message KoiAwardRecordsResp{
	repeated KoiAwardRecord records = 1;
}


//更换锦鲤愿望大奖请求
message KoiAwardChangeReq{
	required int32 koiAwardId = 1;
}

//-----------------------------------

// -------------限时登录活动Start-----------------

//限时登录数据
message LimitTimeLoginInfo{
    optional LimitLoginInfo limitInfo = 1;     //当前信息
    repeated LimitLoginStatus limitStatus = 2; //奖励预览
}
//当前轮次数据
message LimitLoginInfo{
	required int32 termId = 1; 	//当前轮次id
	required int32 status = 2; 	//当前轮次状态(可否领奖)1领奖之前 2领奖期间
	required int64 downTime = 3; //倒计时时间
}
//历史状态数据
message LimitLoginStatus{
	required int32 id = 1; 		//轮次id
	required int32 status = 2; 	//领奖状态1未领 2已领
	required bool isOver = 3; 	//过期状态
}

//领奖Req
message LimitLoginRewardReq{
    required int32 id = 1; //领奖的Id
}


// -------------限时登录活动End ------------------

// -------------勋章宝藏活动Start-----------------
//抽奖Req
message MedalLotteryReq{
    required bool isTenTimes = 1; //抽奖次数是否是10连抽
}

//抽奖Resp
message MedalLotteryResponse{
    optional int32 lotId = 1; //单抽中奖的配置id
    repeated RewardItem reward = 2;
}
// -------------勋章宝藏活动End ------------------

// -------------瓜分金币活动Start-----------------

//瓜分金币活动信息
message DivideGoldInfo{
	optional int64 allSeverRedNum = 1;   	 //全服红包个数
	optional string redEnvelopeRecord = 2;   //红包开奖记录
	optional int32 giveNum = 3; 	// 赠送次数
	optional int32 recNum = 4; 	// 索要次数
}
//索要福字Req ,resp 走通用pb
message AskForFuZiReq{
    required int32 chatType = 1; 	// 盟友;世界
	required string askForItem = 2; // 索要物品	
}
//
//赠送福字Req ,resp 走通用pb
message GiveFuZiReq{
    required string toPlayerId = 1; // 赠送的玩家ID
	required string giveItem = 2; 	// 赠送物品
	optional string uuid = 3;		//如果通过索要请求赠送福字，uuid 为索要请求的标识
}

//开宝箱Resp
message OpenBoxResponse{
    repeated RewardItem reward = 1;  // 奖励信息
}
// -------------瓜分金币活动End ------------------


// 摇骰子请求
message CellMoveReq
{
	required RollDiceType type = 1;  // 摇骰子类型
}

// 摇骰子类型
enum RollDiceType
{
	ONE_TIMES  = 1;   // 摇一次
	TEN_TIMES  = 10;  // 摇十次
}

// 摇骰子请求响应
message CellMoveResp
{
	required RollDiceType type = 1;  // 摇骰子类型
	optional int32 ratio       = 2;  // 奖励倍数
	optional int32 point       = 3;  // 骰子点数
	required int32 cellId      = 4;  // 格子ID
	required int32 fragment    = 5;  // 碎片数量
	repeated RewardItem rewards = 6; // 摇骰子所得奖励
}

// 飞行计划活动信息
message FlightPlanInfoPB
{
	required int32 cellId = 1;    // 格子ID
	optional int32 fragment = 2;  // 碎片数量
	repeated FlightPlanShopGoodsInfoPB goods = 3; // 物品兑换信息
	repeated GeneralExchangeTip tips = 4; // 通用兑换
}

// 飞行计划商店物品兑换信息
message FlightPlanShopGoodsInfoPB
{
	required int32 goodsId = 1; // 物品ID
	required int32 exhangeTimes = 2; // 已兑换次数
}

// 物品兑换请求
message GoodsExchangeReq
{
	required int32 goodsId = 1; // 兑换物品ID
	required int32 count = 2; // 兑换物品数量
}


//----------场景分享活动Start------------

message SceneShareInfoReq{}

message SceneShareInfoResp{
	repeated int32 sceneShares = 1;   //已经分享过的场景
}


//----------场景分享活动End------------



//----------英雄皮肤活动End------------

message PBHeroSkinInfo{
	optional int32 pool = 1; // 将池, 预览
	optional int64 freeTime = 2; // 免费刷新时间
	repeated int32 rewardId = 3; // 9个牌子id. 没抽的是0
	optional int32 refreshTimes = 4; // 已刷新次数, 
	optional int32 maxRefresh = 5; // 最大刷新数
	optional int32 multiple = 6; // 下次必翻倍
	optional string refreshCost = 7; // 刷新消耗
	optional string openCost = 8; // 翻牌消耗
	optional bool hasFinally = 9; // 是否已经抽中最终奖励
}

message PBHeroSkinOpen{
	optional int32 index = 1; // 0 , 1,2, 3,4 ....
}

/**刷新回复, 展示动画用*/
message PBHeroSkinRefreshResp{
	optional int32 pool =1; // 将池
}

//----------英雄皮肤活动End------------


// ---------英雄进化之路活动信息----------//

// 进化之路活动奖励兑换
message EvolutionExchangeReq
{
	required int32  exchangeId = 1;   // 兑换ID
}

// 活动页面信息
message EvolutionPageInfoSync
{
	required EvolutionBaseInfoPB baseInfo = 1;  // 活动基础信息
	repeated EvolutionTaskPB task = 2;  // 任务信息
}

// 同步活动任务信息
message EvolutionTaskInfoSync
{
	repeated EvolutionTaskPB task = 1;  // 任务信息
}

// 活动基础信息
message EvolutionBaseInfoPB
{
	required int32 		level  	  = 1;     // 等级
	required int32 		exp       = 2;     // 经验积分
	repeated int32      exchanged = 3; 	   // 已兑换过的奖励
	optional int32		awardStatus = 4;   // 等级奖励领取状态，1已领取，0未领取
}

// 活动任务信息
message EvolutionTaskPB
{
	required int32 id				= 1; // 任务id
	required int32 times 			= 2; // 完成次数
	required int64 value 			= 3; // 任务完成值
}

// ---------英雄进化之路活动信息----------//

// ---------泰伯利亚竞猜活动信息----------//

// 联盟对战基础信息
message TblyGuildBaseInfo{
	required string id			= 1;	//Id
	required string name		= 2;	//名称
	required string tag			= 3;	//简称
	required int32 guildFlag	= 4;	//联盟旗帜
	required string serverId	= 5;	//区服Id
	optional int64 battlePoint	= 6; 	//参战人员总战力
	optional int32 memberCnt	= 7; 	//参战人员数量
}
// 联盟对战投票信息
message TblyGuessInfo{
	required string id			= 1;	//Id
	required int64 voteNum		= 2;	//投票数
	required bool isVote		= 3;	//是否投票		
}
// 泰伯利亚对战信息
message TblyMatchGuessPageReq{

}
// 泰伯利亚对战信息
message TblyMatchGuessPageResp{
	repeated TblyMatchInfo tblyMatchInfo = 1; //基础信息 
	repeated TblyGuessInfo tblyGuessInfo = 2; //投票信息
	optional int64 startTime = 3; 			  //竞猜开始时间
}

// 对战信息
message TblyMatchInfo{
	optional TblyGuildBaseInfo guildA = 1;
	optional TblyGuildBaseInfo guildB = 2;
}

// 泰伯利亚竞猜
message TblyGuessReq{
	required string id		= 1;  //id
}
// 泰伯利亚竞猜
message TblyGuessResp{
	optional TblyGuessInfo tblyGuessInfo = 1; 
}

// ---------黑武士活动---------
message SamuraiBlackenedInfoReq {
}
//请求主界面信息
message SamuraiBlackenedInfoResp
{
	required int32 currDay		= 1; // 第几天
	required int32 score		= 2; //	积分	
}
// ---------黑武士活动---------


//-------------指挥官学院-------------------


//指挥官学院信息请求
message CommandCollegeInfoReq{

}
//指挥官学院信息响应
message CommandCollegeInfoResp{
	required int32 stage              = 1;   //阶段ID
	required int64 timeLast           = 2;   //剩余时间
	repeated CommandCollegeRankMember members= 3;//排行榜成员信息
	required CommandCollegeRankMember selfRank = 4;  //自己排名信息
	required int32 buyCount           = 5;  //礼包购买人数
	repeated KeyValuePairInt buyList  = 6;  //礼包购买信息(礼包ID:购买次数)
	
	
}

//指挥官学院助力礼包信息请求
message CommandCollegePackageReq{

}

//指挥官学院助力礼包信息响应
message CommandCollegePackageResp{
	required int32 buyCount           = 1;  //购买人数
	repeated KeyValuePairInt buyList  = 2;  //礼包购买信息(礼包ID:购买次数)
}

//阶段榜排名信息请求
message CommandCollegeStageRankReq{

}

//阶段榜排名信息响应
message CommandCollegeStageRankResp{
	repeated CommandCollegeStageRank ranks = 1; //历史榜成员
	repeated KeyValuePairInt stageRanks       = 2; //其他阶段榜排名
}

//总榜排名信息请求
message CommandCollegeFinalRankReq{

}

//总榜排名信息响应
message CommandCollegeFinalRankResp{
	repeated CommandCollegeRankMember members = 1; //总榜成员信息
	required CommandCollegeRankMember selfRank    = 2;  //自己排名信息
}
//购买助力礼包
message CommandCollegeBuyPackageReq{
	required int32 packageId = 1;//礼包ID
}

//购买助力礼包
message CommandCollegeBuyPackageResp{
	required int32 packageId          = 1;//本次购买礼包ID
	repeated KeyValuePairInt buyList  = 2;//礼包购买信息(礼包ID:购买次数)
	
}


//阶段榜信息
message CommandCollegeStageRank{
	required int32 stageId  = 1;
	repeated CommandCollegeRankMember members = 2;
}


//排行榜成员信息
message CommandCollegeRankMember{
	required string playerId     = 1; //玩家ID
	required int32 rankIndex     = 2; //玩家排名
	required string playerName   = 3; //玩家名称
	required int32 stageParam    = 4; //阶段值(总榜的时候为0)
	required int32 socre         = 5; //评分
	optional string guildName    = 6; //工会名称 
	repeated int32 personalProtectSwitch = 7; // playerId那个player对应的个保法开关
}




//-------------指挥官学院-------------------


//---------------------圣诞大战-------------

//圣诞大战排行榜类型
enum ChristmasWarRankType {
	PERSONAL_DAMAGE_RANK = 1; //个人伤害排名
	ALLIANCE_DAMAGE_RANK	= 2;  //公会伤害排名
	PERSONAL_KILL_RANK	= 3;  //个人击杀排名. 
}

// 获取机甲觉醒伤害排行榜信息
message ChristmasWarRankInfoReq{
	required ChristmasWarRankType rankType = 1;
}

message ChristmasWarRankInfoResp{
	repeated ChristmasWarRankInfo rankInfo = 1; //排行信息
	optional ChristmasWarRankInfo selfRank = 2; //己方个人/联盟排行
	required ChristmasWarRankType rankType = 3;

}


// 圣诞大战排行信息
message ChristmasWarRankInfo{
	required int32 rank		= 1;
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
}

//请求主界面
message ChristmasWarPageInfoReq{
	
}

//请求主界面
message ChristmasWarPageInfoResp{
	required int32 killedBoss = 1; //已击杀boss数.
	required int32 summonBoss = 2; //可召唤boss
	required int32 killMonsterNum = 3; //全服击杀的小怪数量.
	repeated int32 receivedIds = 4; //已经领取的奖励id
	required int32 remainBossNum = 5; //世界上剩余的boss数量.
}

//领取奖励.
message ChristmasWarReceiveReq{
	required int32 id = 1;
}
//领取奖励返回
message ChristmasWarReceiveResp{
	repeated int32 receivedIds = 4;  //已领取的奖励ID
}
//---------------------圣诞大战-------------

//------------------装备黑市----------------

//黑市装备信息 请求
message EquipBlackMarketInfoReq{

}
//黑市装备信息 响应
message EquipBlackMarketInfoResp{
	repeated KeyValuePairInt refines = 1; //炼化次数
	repeated string buyList = 2;   //购买列表
	optional string lastGiftId = 3; //最后一次购买的礼包id
}


//黑市装备炼化 请求
message EquipBlackMarketRefinningReq{
	required int32 refineId = 1;   //炼化ID
	required int32 count    = 2;   //炼化次数
}

//黑市装备炼化 响应
message EquipBlackMarketRefinningResp{
	required int32 refineId = 1;   //炼化ID
	required int32 count    = 2;   //炼化次数
	repeated KeyValuePairInt refines = 3; //炼化总次数
}


//------------------装备黑市----------------


//------------------雪球大战----------------

message SnowballPageInfo
{
	required int32 score = 1; // 积分宝箱
	repeated SnowballBoxInfo box = 2; // 宝箱信息
	repeated SnowballBuildingInfo build = 3; // 建筑信息
	optional int32 stageId = 4; // 阶段id
	optional int32 trunId = 5; // 轮次id
}

// 雪球大战宝箱信息(只发已经领奖了的)
message SnowballBoxInfo
{
	required bool hasReceived = 1; // 是否已经领奖
	required int32 cfgId = 2; // 配置id
}

// 雪球大战建筑信息
message SnowballBuildingInfo
{
	required int32 x = 1; // 坐标x
	required int32 y = 2; // 坐标y
	required int32 count = 3; // 进球数量
	required int32 ownCount =4; // 自己进球的数量
}

// 获取雪球大战排行榜信息
message SnowballRankReq
{
	required SnowballRankType rankType = 1;
}

message SnowballRankResp
{
	repeated SnowballRankInfo rankInfo = 1; //排行信息
	optional SnowballRankInfo selfRank = 2; //己方个人/联盟排行
	required SnowballRankType rankType = 3;

}

// 雪球大战排行类型
enum SnowballRankType
{
	SELF_SNOWBALL_RANK	= 1; // 个人排行
	GUILD_SNOWBALL_RANK	= 2; // 联盟排行
}

// 雪球排行信息
message SnowballRankInfo
{
	required int32 rank		= 1;
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
}

// 获取宝箱奖励
message SnowballGetBoxRewardReq
{
	required int32 cfgId = 1; // 配置id
}
//------------------雪球大战----------------

//------------------命运左轮----------------

// 活动界面信息 登录推
message DestinyRevolverPageInfoPush
{
	required bool firstKick = 1; // 首次点击(点击任意位置开始活动)
	required bool inTarot = 2; // 是否在塔罗牌界面
	optional DRTarotInfo tarotInfo = 3; // 塔罗牌界面信息
}

// 塔罗牌界面信息
message DRTarotInfo
{
	optional string openCost = 1;  // 翻牌消耗
	optional int64 remainTime = 2; // 翻牌倒计时
	repeated int32 rewardId = 3;   // 9个牌子id. 没抽的是0
}

// 命运左轮，抽5个奖励的返回
message DRFiveGachaResp
{
	required bool isSpecialReward = 1; // 是否是特殊奖励
	required int32 cfgId = 2; // 配置id
}

// 抽取九个的
message DRNineGachaReq
{
	required int32 index = 1; // 0 , 1,2, 3,4 ....
}


message DRNineGachaResp
{
	required int32 index = 1;
	required int32 rewardId = 2;
}

//------------------命运左轮----------------

//------------------资源保卫战----------------

message ResourceDefensePageInfo
{
	required int32 resourceStationLevel 	= 1; // 资源站等级
	required int32 resourceStationExp 		= 2; // 资源站经验
	repeated RDResourceInfo resourceInfo 	= 3; // 当前库存资源
	repeated RDStationInfo stationInfo		= 4; // 资源站信息
	required bool unlockSenior				= 5; // 是否解锁高级奖励
	repeated int32 receiveMissionId			= 6; // 已经接受奖励的任务id (普通和高级的一起发)
	repeated RDBuyExpInfo buyExpInfo		= 7; // 购买经验信息
	optional int32 stealTimes				= 8; // 已经偷取的次数
	repeated RDRecord record 				= 9;// 记录
	optional string playerId				= 10;
	optional int32 remainStealTimes			= 11; // 剩余可偷取次数
	optional int64 lastStealTimesAdd		= 12; // 上次偷取次数增加
	optional PBAgentPageInfo agentPageInfo  = 13; //特工相关信息
}

// 购买经验信息
message RDBuyExpInfo
{
	required int32 cfgId = 1; // 配置id
	required int32 buyTimes = 2; // 购买次数
}

// 资源站库存资源信息
message RDResourceInfo
{
	required int32 resourceType = 1; // 资源类型
	required int64 resourceNum	= 2; // 资源数量
}

// 资源站信息
message RDStationInfo
{
	required int32 stationId = 1; // 资源站id
	required RDStationState state = 2; // 状态
	optional int64 endTime = 3; // 资源站收获剩余时间
	optional bool canHelp = 4; // 是否可以帮助
	optional bool canSpeedUp = 5; // 是否可以加速
	optional bool canReceive = 6; // 是否可以收取
	optional bool canBeSteal = 7; // 是否可以被偷取
}

// 资源站状态
enum RDStationState
{
	RDSTATION_NONE	= 1; // 废弃状态
	RDSTATION_DOING	= 2; // 开采中
	RDSTATION_CHARGE = 3; // 可收取
}

// 偷资源界面
message RDStealResourcePageInfo
{
	repeated RDSRSingleInfo singleInfo = 1;
}

// 偷资源单条信息
message RDSRSingleInfo
{
	required string playerId = 1; // 玩家id
	optional string playerName = 2; // 玩家名字
	optional int32 stationLevel = 3; // 资源站等级
	repeated RDResourceInfo resourceInfo = 4; // 当前库存资源
	optional string pfIcon = 5; // 头像
	optional int32 icon = 6; // 平台头像
	optional string guildTag = 7; // 联盟简称
	optional bool enemy = 8; // 仇敌
}

// 偷取资源协议返回
message RDStealResp
{
	optional bool success = 1; // 是否成功
	optional bool beTimesLimit = 2; // 是否是被偷取次数限制
	repeated RDResourceInfo resourceInfo = 3; // 偷取的资源信息
}

// 资源站获取奖励
message RDGetMission
{
	required int32 cfgId = 1; // 配置id
}

// 购买经验请求
message RDBuyExpReq
{
	required int32 cfgId = 1; // 配置id
}

// 开采
message RDBuildStationReq
{
	required int32 stationId = 1; // 资源站id，读配置
}

// 请求帮助
message RDHelpStationReq
{
	required int32 stationId = 1; // 资源站id，读配置
}

// 加速
message RDSpeedUpStationReq
{
	required int32 stationId = 1; // 资源站id，读配置
}

// 帮助
message RDHelpReq
{
	required string playerId = 1; // 帮助的玩家id
	required int32 stationId = 2; // 帮助的资源站id
}

// 查看其他玩家 返回 ResourceDefensePageInfo
message RDOthersReq
{
	required string playerId = 1; // 帮助的玩家id
}

// 偷取
message RDStealReq
{
	required string playerId = 1;
	required int32 stationId = 2;
}

// 收取
message RDCharge
{
	required int32 stationId = 1; // 资源站id
}

message RDChargeResp
{
	repeated RDResourceInfo resourceInfo = 1; // 收取的资源信息
}

// 记录
message RDRecord
{
	required int64 time = 1; // 事件发生时间
	required RDRecordType type = 2; // 记录类型
	optional string guildTag = 3; // 联盟简称
	optional string name = 4; // 名字
	optional int32 resType = 5; // 资源类型
	optional int32 reduceTime = 6; // 减少时间
	optional int32 currTimes = 7; // 当前次数
	optional int32 allTimes = 8; // 总次数
	optional int32 stationId = 9; // 资源站
}

// 记录类型
enum RDRecordType
{
	STEAL = 1; // 偷取
	HELP = 2; // 帮助
	STEAL_FAILE = 3; // 偷取失败
}

//特工信息
message PBAgentInfo
{
	required int32 agentSkillId = 1; //特工技能id
	required int32 useSkillNum 	= 2; //技能使用次数
}

//特工履历信息
message PBAgentRecord
{
	required int64 startTime 		= 1; //特工供职时间
	optional int32 defenseTimes 	= 2; //帮助玩家防御的次数
	optional int32 stealTimes 		= 3; //帮助玩家偷取的次数
}

//特工界面信息
message PBAgentPageInfo{
	optional int32 remainRefreshTimes		= 1;	//剩余刷新次数			
	repeated PBAgentInfo pbAgentInfo   		= 2;  	//特工信息
	optional PBAgentRecord pbAgentRecord 	= 3; 	//特工履历信息
	optional bool agentActiveSkill			= 4;	//特工是否激活技能
	optional int32 freeRefreshTimes			= 5;	//免费刷新次数	
	
}

// 记录类型
enum PBAgentSkillType
{
	STEAL_ADD_NUM 			= 1; // 多偷取1个
	STEAL_ADD_RATE 			= 2; // 偷取概率提高
	STEAL_GREATE_ROBOT 		= 3; // 刷出特殊机器人
	STEAL_ADD_EXP 			= 4; // 偷取获得额外经验
	STEAL_FAIL_GIVE_NUM 	= 5; //偷取失败返还次数
}

// 资源站机器人类型
enum PBRobotType
{
	ROBOT_1 			= 1; // 机器人类型1
	ROBOT_2 			= 2; // 机器人类型2
	ROBOT_3 			= 3; // 机器人类型3
}

//激活高级机器人
message RobotActiveReq{
	optional int32 skillId		= 1;	//通过那个技能激活高级机器人			
}
//------------------资源保卫战----------------



//-----------------时空豪礼------------------

//时空豪礼页面信息
message ChronoGiftInfoResp
{
	repeated PBChronoGift gifts = 1; //已经开启的豪礼列表
	required int32 buyKeyCount  = 2;   //时空之钥购买次数
}



//解锁时空之门
message ChronoGiftUnlockReq
{
	required int32 chronoGiftId = 1;   //豪礼ID
		
}

//确认直购礼包奖品ID
message ConfirmBuyAwardsReq
{
	required int32 giftId = 1;     //豪礼ID
	repeated int32 buyAwards = 2;  //奖品ID
}


//获取时空之门免费礼品
message AchieveChronoGiftFreeAwardsReq
{
	required int32 giftId = 1;     //豪礼ID
}


//购买时空之钥
message ChronoGiftKeyBuyReq{
	required int32 num = 1;    //购买数量
}





//时空豪礼
message PBChronoGift
{
	required int32 giftId = 1;                    //豪礼ID
	required ChronoGiftState freeAwardState = 2;  //免费礼品状态
	required ChronoGiftState buyAwardState  = 3;   //收费礼包状态
	repeated int32 buyAwards                = 4;   //收费礼包选择奖励列表
	

}

//礼品获取状态
enum ChronoGiftState
{
	NO_ACHIEVE = 0;      //没有获取
	ACHIEVE	= 1;         //已经获取
} 


//-----------------时空豪礼------------------


//------------------委任英雄---------------
message HeroLovePageInfoReq {
	
}

message HeroLovePageInfoResp {
	required int32 score = 1; //积分.	
}

message HeroLoveGiftItemReq {
	required int32 id = 1;  //配置ID
	required int32 num = 2; //赠送数量
}
message HeroLoveGiftItemResp {
	required int32 id = 1;  //配置ID
	repeated int32 rates = 2; //暴击倍率.
}

message HeroLoveReceiveAchievesReq {
	repeated int32 achieveIds = 1;//成就Id
}

message HeroLoveReceiveAchievesResp {
	repeated int32 achieveIds = 1;//成就id，告诉客户端领取了哪些奖励,以这个为准.	
}

//------------------委任英雄---------------

//-----------------充值基金------------------

// 当前阶段
enum RFStage
{
	RF_INVEST	= 0; //投资阶段
	RF_REWARD	= 1; //领奖阶段
} 

enum RFInvestState
{
	RF_UNLOCK	= 0; // 未解锁
	RF_UNINVEST	= 1; // 未投资
	RF_INVESTED	= 2; // 已投资
}

enum RFAwardState
{
	RF_NOT_ACHIEVE	= 0; //未达成
	RF_NOT_AWARD	= 1; //可领取
	RF_TOOK			= 2; //已领取
}


// 充值基金界面信息
message RFPageInfo
{
	required int32 rechargeNum			= 1; // 充值金条数
	required RFStage rfStage			= 2; // 当前阶段
	required int64 investEndTime		= 3; // 投资阶段结束时间
	required int32 currDay				= 4; // 收益阶段已开启天数
	repeated RFInvestInfo investInfo	= 5; // 投资信息
}

// 投资信息
message RFInvestInfo
{
	required int32 giftId				= 1; // 投资id
	required RFInvestState investState	= 2; // 投资状态-是否投资
	repeated RFAwardInfo awardInfo		= 3; // 投资奖励信息
}

// 奖励信息
message RFAwardInfo
{
	required int32 awardId 	= 1;
	repeated string itemStr 	= 2; // 自选奖励内容	
	optional RFAwardState state	= 3; // 奖励状态
}

// 自选奖励请求(返回RFInvestInfo)
message RFSelectAwardReq
{
	required int32 giftId = 1; //投资id
	repeated RFAwardInfo awardInfo = 2; //自选奖励列表
}

// 投资请求(返回RFInvestInfo)
message RFInvestReq
{
	required int32 giftId = 1;
}

// 领取奖励(返回RFInvestInfo)
message RFGetAwardReq
{
	required int32 awardId = 1;
}

//-----------------充值基金------------------

//--------------回流活动-回归有利------------

//回归有力页面信息请求
message BackGiftInfoReq{

}


//回归有力页面信息返回
message BackGiftInfoResp{
	repeated RewardItem gifts = 1;     //礼品列表
	required int32 freeTimes  = 2;     //免费次数
	required int64 lotteryCdTime = 3;  //抽奖刷新时间
	required int32 refreshTimes = 4;   //刷新次数
	required int64 refreshCdTime = 5;  //刷新冷却时间
	required int32 lastLottery = 6;    //上次中奖下标
}



//抽奖请求
message BackGiftLotteryReq{

}

//抽奖返回
message BackGiftLotteryResp{
	required int32 itemIdex = 1;        //礼品列表下标
}





//--------------回流活动-回归有利------------

//-----------回流活动-发展冲刺------------------

// 签到信息
message DevelopSpurtInfoResp
{
	required int32 signInDay = 1;  // 当前签到天数（不管当前这天是否已签到，都包含这天，即表示进行到第几天了）
	required bool signIn     = 2;  // 当天是否已签到
	required bool unlocked   = 3;  // 进阶奖励是否已解锁
	required int32 playerType =4;  // 玩家流失类型
}

// 签到信息
message DevelopSpurtSignReq{
	
}

//-----------回流活动-发展冲刺-----------------


//------------------回流活动-体力赠送----------------//

//阅读信件
message PowerSendMessageReadReq{
	required string messageId = 1;  //信件ID
}

//回赠信件
message PowerSendMessageBackReq{
	required string messageId = 1;  //信件ID
}

//信件信息
message PowerSendMessageInfoReq{
	required string messageId = 1;
}

//信件信息
message PowerSendMessageInfoResp{
	required PowerSendMessage message = 1;
	required PowerSendActivityInfo activtyInfo = 2;
}


//活动信息
message PowerSendActivityInfo{
	required int32 canAchieveCount = 1;   //可以获取奖励次数
	required int32 achieveCount = 2;      //已经获取奖励次数
	required int32 canRevieveBackCount = 3; //可以收到回礼的次数
	required int32 revieveBackCount = 4;  //已经收到回礼的次数
}

//催促回礼
message PowerSendMessagePressedBackReq{
	required string messageId = 1;
}



message PowerSendMessage
{	
	required string messageId = 1;
	repeated RewardItem gifts = 2;     //礼品列表
	repeated RewardItem backGifts = 3; //回礼列表
	required string senderId  = 4;    //发送者
	required string senderName = 5;
	required string recieverId  = 6;    //接受者
	required string recieverName  = 7;    //接受者
	required int64 outTime        = 8; //过期时间
	required PowerMessageState state = 9;   //消息状态  

}
enum PowerMessageState
{
	MESSAGE_CLOSE	= 0; //封闭
	MESSAGE_BACK    = 1; //已回赠
}


//------------------回流活动-体力赠送-----------------//

//------------------欢乐购-----------------//
message JoyBuyExchangeListResp{
	repeated JoyBuyExchangeInfo infos = 1;  //兑换列表
	required int32 exchangeMaxNumber = 2;//总兑换次数
	required int32 exchangeCurNumber = 3;//当前兑换次数
	required int64 nextRefreshTime = 4;//下次重置时间
	required int32 remRefreshNumber = 5;//剩余刷新次数
}

message JoyBuyExchangeInfo{
	required int32 exchangeId   = 1;  // 兑换id
	required int32 exchangeSingeCurNumber   = 2;  // 兑换当前次数
}

message JoyBuyOperationReq{
	required int32 exchangeId = 1;  // 兑换id
	required int32 exchangeNumber = 2;  // 兑换次数
}

//------------------欢乐购-----------------//

//------------------免费兑换装扮-----------------//
//等级列表
message DecorateExchangeLevelListResp{	
	required int32 level = 1;//等级
	required int32 exp = 2;//经验
	repeated DecorateExchangeLevelInfo infos=3;//各个阶段领取状态
	required int32 buyLevelExpNum = 4;//购买exp次数
	required int32 weekIdx = 5;//周序列 1=第一周..
}
message DecorateExchangeLevelInfo{
	required int32 levelId = 1;//等级
	required int32 state = 2;//状态,1=未满足,2=领取,3=已领取
}
//领取解锁等级奖励
message DecorateExchangeLevelRewardReq{
	required int32 levelId = 1;  // 等级id
}
// 操作类型
enum ExchangeCommonType
{
	DECORATE_LEVEL_NOLOCK= 1; //解锁等级  params=[levelId]
	DECORATE_LIMIT_TIME	 = 2; //等级限时兑换  params=[levelId(等级id),buyId(购买id),buyNum(数量)]
	DECORATE_EXCHANGE= 3; //兑换装扮  params=[id(兑换id),number(数量)]
}
//通用兑换操作
message ExchangeCommonReq{
	required ExchangeCommonType act = 1;  //等级id
	repeated int32 params=2; //可能是多个参数
}
//等级特惠列表
message DecorateExchangeLimitTimeListResp{
	repeated DecorateExchangeLimitTimeInfo infos=1;//列表数据
}
//装扮列表
message DecorateExchangeListResp{
	repeated DecorateExchangeItemInfo infos=1;//列表数据
}
//id->已购数量
message DecorateExchangeItemInfo{
	required int32 itemId = 1;//id
	required int32 itemNum = 2;//已购数量
}
//id->到期时间->兑换详情
message DecorateExchangeLimitTimeInfo{
	required int32 levelId = 1;//等级id
	repeated DecorateExchangeItemInfo infos=3;//各个阶段领取状态
}
//------------------免费兑换装扮-----------------//

//------------------新版辐射战争-----------------//
//界面信息
message RadiationWarPageInfo{
	required int32 killNum = 1;		//击杀幽灵叛军次数
	required int32 guildKillNum = 2; //联盟击杀BOSS次数
}
//------------------幽灵秘宝活动-----------------//
message TreasureInfo{
	required int32 index 		= 1;		//九宫格位置1~9
	required TreasureType treasureType = 2;	//宝藏类型	
}
//3连中奖信息
message ThreeRewardInfo{
	required string cardIndex = 1;			//三连在九宫格中的下标	1_2_3
	required int32 rewardId = 2;			//奖励Id
}
//宝藏级别S最好S-A-B
enum TreasureType
{
	TYPE_CLOSE= 0; 	//未挖
	TYPE_S    = 1; 	//S级
	TYPE_A    = 2; 	//A级
	TYPE_B    = 3; 	//B级
}
// 挖宝类型
enum DrewType
{
	ONE_TIMES_DIG  = 1;   	// 挖一次
	ONE_KEY_DIG  = 2;  		// 一键挖剩余
}
//挖宝req
message DrewTreasureReq{
	required DrewType drewType = 1;	//挖宝类型
	required int32 digIndex = 2;	//挖宝位置1~9(0一键挖)
}
//挖宝resp
message DrewTreasureResp{
	repeated ThreeRewardInfo threeRewardInfo = 1;		//中奖三连的数据(自带顺序)
}

//秘宝界面数据
message GhostTreasurePageInfo{
	repeated TreasureInfo treasureInfo = 1;		//九宫格数据
	required int32 resetTimes = 2;				//今日剩余重置次数
	required bool isReceiveBest = 3;			//是否中过特等奖
}

//----------能源滚滚-----------

message GetEnergiesPageInfoResp{
	required int32 dailyScore			= 1;//今日个人积分
	optional int64 guildScore			= 2;//今日联盟积分
}

// 获取能源滚滚积分排行榜信息
message GetEnergiesRankInfo{
	required EnergiesRankType rankType = 1;
}

message GetEnergiesRankInfoResp{
	repeated EnergiesRankInfo rankInfo = 1; //排行信息
	optional EnergiesRankInfo selfRank = 2; //己方个人/联盟排行
	required EnergiesRankType rankType = 3;

}

// 能源滚滚积分排行类型
enum EnergiesRankType{
	ENERGIES_SELF_RANK	= 1;
	ENERGIES_GUILD_RANK	= 2;
}

// 能源滚滚积分排行信息
message EnergiesRankInfo{
	required int32 rank		= 1;
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
	optional int32 guildFlag= 5; //联盟旗帜
}
//----------能源滚滚-----------

//----------端午节活动，联盟庆典-----------


//庆典经验
message DragonBoatCeletrationInfoResp{
	required int32 level = 1; //等级
	required int32 exp = 2; //经验
	repeated KeyValuePairInt echangeList  = 3;//兑换信息
}

//制作礼物
message DragonBoatCeletrationMakeGiftReq{
	required int32 type = 1; //制作类型
	required int32 count = 2; //数量
}

message DragonBoatCeletrationRankResp{
	repeated CeletrationRankMember members= 1;//排行榜成员信息
	required CeletrationRankMember selfRank = 2;//自己排名信息
}


//排行榜成员信息
message CeletrationRankMember{
	required string playerId     = 1; //玩家ID
	required int32 rankIndex     = 2; //玩家排名
	required string playerName   = 3; //玩家名称
	required int32 score         = 4; //评分
	repeated int32 personalProtectSwitch = 5; // playerId那个player对应的个保法开关
}
//----------端午节活动，联盟庆典-----------

//----------端午节活动，道具兑换-----------

//兑换道具
message DragonBoatExchangeReq{
	required int32 exchangeId = 1;    //兑换ID
	required int32 exchangeCount = 2; //兑换次数
}

//内容同步
message DragonBoatExchangeInfoResp{
	repeated KeyValuePairInt echangeList  = 1;//礼包购买信息(礼包ID:购买次数)
	repeated int32 careList = 2;               //关注列表
}

//更新关注
message DragonBoatExchangeCareReq{
    required int32 exchangeId = 1; //玩家勾选提醒
	required int32 care = 2;   //标识，1为勾上，0为去掉勾
	required bool isAll = 3; //是否全部
}


//----------端午节活动，道具兑换-----------

//----------端午节活动，节日福袋-----------

message DragonBoatLuckyBagOpenReq{
	required int32 openCount = 1;//开启次数
}

message DragonBoatLuckyBagOpenResp{
	required int32 openCount = 1;//开启次数
	repeated RewardItem awards = 2; //获得的奖励数量
}

message DragonBoatLuckyBagResp{
	required int32 openCount = 1;//开启次数
}
//----------端午节活动，节日福袋-----------

//----------端午节活动，龙船送礼-----------

//龙船的位置
message DragonBoatLocationReq{

}

//龙船的位置
message DragonBoatLocationResp{
	required int32 posX = 1;
	required int32 posY = 2;
}

//龙船奖励信息
message DragonBoatGiftInfoReq{
	
}
//龙船奖励信息
message DragonBoatGiftInfoResp{
	required int32 loginAward = 1; //登录奖励 0未领取，1已经领取
	required int32 boatAward = 2; //龙船奖励 0未领取，1已经领取
	required int32 giftCount = 3; //礼包数量
}


//----------端午节活动，龙船送礼-----------

//----------端午节活动，龙船充值-----------



//----------端午节活动，龙船充值-----------
message DragonBoatRechargeInfoResp{
	required int32 chargeDays = 1;
}


//----------虚拟实验室 -----------
// 挖宝类型
enum CardState
{
	CARD_CLOSE = 0;   	// 未翻
	CARD_OPEN = 1;  		// 已翻
}
//卡牌数据
message VirtualCardInfo{
	required int32 cardIndex = 1;   //卡位置
	required int32 cardValue = 2;	//卡牌值 
	required CardState state = 3;	//卡牌状态
}
//翻卡 成对才请求
message VirtualOpenCardReq{
	required int32 cardIndex = 1; 		//翻卡下标 从0开始
	required int32 cardTwoIndex = 2; 	//翻卡下标 从0开始
}

message VirtualOpenCardResp{
	required int32 cardId = 1; 			//卡Id
	repeated RewardItem rewardItem = 2; //奖励
}


//页面信息
message VirtualPageInfo{
	repeated VirtualCardInfo virtualCardInfo = 1; //已翻开的卡牌数据
	required int32 resetNum = 2;				 //剩余重置次数
}
//----------勋章基金 -----------
//领取奖励
message MedalFundGetRewardReq{
	required int32 id = 1; 			//购买礼包的id
}
//页面信息
message MedalFundPageInfo{
	repeated BuyFundInfo buyFundInfo  = 1; 		//已购买的基金信息
	repeated int32 dayScore = 2;				//每日积分信息1-7天每日任务积分
	required MedalFundState medalFundState = 3; //期间状态
	required int64 buyEndTime = 4;				//购买截至时间
}

message BuyFundInfo{
	required int32 buyId  = 1; 			//已购买的基金种类
	required BuyState buyState  = 2; 	//基金购买状态
}
enum BuyState
{
	BUY = 1;   	//已购买
	REWARD = 2; //已领奖
}

enum MedalFundState
{
	INVEST = 1;   	//投资期
	PAYBACK = 2; 	//收益期
	PDELIVERY = 3; 	//交割期
}

//----------勋章基金（二） -----------
//领取奖励
message MedalFundTwoGetRewardReq{
	required int32 id = 1; 			//购买礼包的id
}

//页面信息
message MedalFundTwoPageInfo{
	repeated BuyFundTwoInfo buyFundInfo  = 1; 		//已购买的基金信息
	repeated int32 dayScore = 2;				//每日积分信息1-7天每日任务积分
	required MedalFundTwoState medalFundState = 3; //期间状态
	required int64 buyEndTime = 4;				//购买截至时间
}

message BuyFundTwoInfo{
	required int32 buyId  = 1; 			//已购买的基金种类
	required MedalFundTwoBuyState buyState  = 2; 	//基金购买状态
}
enum MedalFundTwoBuyState
{
	MEDAL_FUND_TWO_BUY = 1;   	//已购买
	MEDAL_FUND_TWO_REWARD = 2;  //已领奖
}

enum MedalFundTwoState
{
	MEDAL_FUND_TWO_INVEST = 1;   	//投资期
	MEDAL_FUND_TWO_PAYBACK = 2; 	//收益期
	MEDAL_FUND_TWO_PDELIVERY = 3; 	//交割期
}

//=============充值福利活动============================

enum RechargeLotteryType{
	ONE_NUM = 1;     //抽一次
	TEN_NUM = 10;    //抽十次
}

enum WelfareState{
	NOT_COMPLETE			= 1;	// 未达成
	NOT_GET					= 2;	// 已达成未领取
	GET_REWARD				= 3;	// 已领取
}

//充值可以领取点券信息
message CouponInfo{
	required int32 allCoupon = 1;				//今日总的点券数
	required int32 receiveCoupon = 2;			//今日已领取的点券数
	required WelfareState state = 3;			//状态
	required int32 todayRechargeRmb = 4;		//今日充值rmb数
}

//每日任务积分可以领取免费点券信息
message CouponFreeInfo{
	required int32 todayScore = 1;				//今日任务积分
	required WelfareState state = 2;			//状态
}


//消息同步
message RechargeWelfareInfoSync{
	repeated int32 cfgIds = 1;  						//奖励的设置
	required int32 freeTimes = 2;						//当前剩余免费次数
	required CouponInfo couponInfo = 3;					//每日充值获得点券信息
	required CouponFreeInfo couponFreeInfo = 4;			//每日积分获得点券信息
	required int32 dailyLotteryTimes = 5;				//今日抽奖次数
	required int32 lotteryTimes = 6;					//总抽奖次数
}

//请求抽奖
message RechargeWelfareLotteryReq{
	required RechargeLotteryType lotteryType = 1; 
}

//请求抽奖返回
message RechargeWelfareLotteryResp{
	required RechargeLotteryType lotteryType = 1; 		//抽奖类型
	repeated int32 cfgIds = 2;							//抽到的奖池id
}

//请求设置奖励req
message RechargeWelfareItemSetReq{
	repeated int32 cfgIds = 1;  //设置奖励
}



//=============充值福利活动============================





//----------能量源投资 -----------
//领取奖励
message EnergyInvestGetRewardReq{
	required int32 id = 1; 			//购买礼包的id
}


//页面信息
message EnergyInvestPageInfo{
	repeated BuyEnergyInvestInfo buyInfo  = 1; 		//已购买的基金信息
	repeated int32 dayScore = 2;				//每日积分信息1-7天每日任务积分
	required EnergyInvestStage stage = 3; 	//期间状态
	required int64 buyEndTime = 4;				//购买截至时间
}

message BuyEnergyInvestInfo{
	required int32 buyId  = 1; 			//已购买的基金种类
	required EnergyInvestState state  = 2; 	//基金购买状态
}
enum EnergyInvestState
{
	ENERGY_INVEST_BUY = 1;   	//已购买
	ENERGY_INVEST_REWARD = 2; //已领奖
}

enum EnergyInvestStage
{
	ENERGY_STAGE_INVEST = 1;   	//投资期
	ENERGY_STAGE_PAYBACK = 2; 	//收益期
	ENERGY_STAGE_PDELIVERY = 3; 	//交割期
}


//----------机甲投资 -----------
//领取奖励
message SupersoldierInvestGetRewardReq{
	required int32 id = 1; 			//购买礼包的id
}


//页面信息
message SupersoldierInvestPageInfo{
	repeated BuySupersoldierInvestInfo buyInfo  = 1; 		//已购买的基金信息
	repeated int32 dayScore = 2;				//每日积分信息1-7天每日任务积分
	required SupersoldierInvestStage stage = 3; //期间状态
	required int64 buyEndTime = 4;				//购买截至时间
}

message BuySupersoldierInvestInfo{
	required int32 buyId  = 1; 			//已购买的基金种类
	required SupersoldierInvestState state  = 2; 	//基金购买状态
}
enum SupersoldierInvestState
{
	SUPERSOLDIER_INVEST_BUY = 1;   	//已购买
	SUPERSOLDIER_INVEST_REWARD = 2; //已领奖
}

enum SupersoldierInvestStage
{
	SUPERSOLDIER_STAGE_INVEST = 1;   	//投资期
	SUPERSOLDIER_STAGE_PAYBACK = 2; 	//收益期
	SUPERSOLDIER_STAGE_PDELIVERY = 3; 	//交割期
}


//=============冠军膜拜活动============================

enum BlessState{
	NO_COMPLETE				= 1;	// 未达成
	NO_GET					= 2;	// 已达成未领取
	REWARDED				= 3;	// 已领取
}
//膜拜活动信息
message OverlordBlessPageInfo{
	required BlessState state = 1;  		//膜拜奖励状态
	required int64 allServerBlessCount = 2;	//全服膜拜次数	
	required BlessState shareState = 3;  	//分享奖励状态
	required bool isOverLordMember = 4;  	//是否是冠军成员
	optional OverlordInfo overlordInfo = 5; //霸主信息
}
message OverlordInfo{
	required string name = 1;		//霸主名称
	required string guildName = 2;  //联盟名称
	required string guildTag = 3;   //联盟简称
	required string serverId = 4;	//区服Id
	required int32 icon = 5;		//霸主头像
	required int32 guildFlag = 6;	//联盟旗帜
	required string pfIcon = 7;		//头像
}
//=============冠军膜拜活动============================


//----------沙场点兵 -----------

//活动页面信息
message ArmiesMassPageInfoResp{
	required int32 stage = 1;   //所处阶段
	required int32 openTimes = 2; //翻开次数
	required int32 share  = 3; //分享  0未分享  1 已经分享
	repeated PBArmiesMassSculpture sculpture = 4; //雕像列表
	repeated PBArmiesMassGift buyGifts = 5; //礼包购买情况
}


//翻开雕像
message OpenArmiesMassSculptureReq{
	required int32 index = 1;   //雕像次序
}


//够买礼包
message BuyArmiesMassGiftReq{
	required int32 giftId = 1; //礼包ID
}


//=============空投补给活动============================
//界面信息
message AirdropPageInfo{
    required int32 boxNum = 1; 	//箱子个数
	required bool isBuy = 2;	//是否购买
}

//=============空投补给活动============================


//购买开雕像次数
message BuyOpenSculptureTimesReq{
	required int32 times = 1; //购买次数
}


//雕像信息
message PBArmiesMassSculpture{
	required int32 index    = 1;  //位置
	required PBSculptureQuality quality  = 2;  //品质
	required int32 state    = 3;  //0未打开  1 已经打开
}

//礼包购买信息
message PBArmiesMassGift{
	required PBArmiesMassGiftType type = 1; //礼包类型
	required int32 groupId = 2;   //组ID
	required int32 level = 3;  //等级
}

//雕像品质
enum PBSculptureQuality
{
	NONE = 0; 
	IRON = 1;  //铁
	COPPER = 2; //铜
	SILVER  = 3; //银
	GOLDEN = 4;  //金
}

//沙场点兵礼包类型
enum PBArmiesMassGiftType
{
	FREE = 1;  //免费礼包
	DIAMOND = 2; //金条礼包
	RBUY  = 3; //直购礼包
}

//----------沙场点兵 -----------

//=============超级金矿2活动============================
message SuperGoldTwoResult{
    repeated RewardItem result = 1; //获得的奖励数量
	required SuperGoldTwoInfo info = 2;//刷新页面
}

message SuperGoldTwoInfo{
    required int32 achieveId = 1; //当前未挖矿成就id
	required float maxRate   = 2; //最大倍率
}
//=============超级金矿2活动============================


//-------------新服战令-----------------

// 战令活动基础数据
message NewOrderBaseInfo{
	required int32 level		= 1;	// 战令等级
	required int64 exp			= 2;	// 经验值
	optional int32 authorityId	= 3;	// 进阶id
	repeated int32 buyExpId		= 4; 	// 已购买战令经验道具列表
	repeated int32 rewardLevel  = 5;    // 已经领奖等级
}

// 获取战令活动界面信息
message GetNewOrderPageInfoResp
{
	required NewOrderBaseInfo baseInfo	= 1; 
	repeated OrderItemPB item		= 2; // 成就项列表
}

// 购买经验道具
message BuyNewOrderExpReq
{
	required int32 expId		= 1;	//经验道具id
}

//领取等级奖励
message AchieveNewOrderLevelRewardReq{
	required int32 level = 1;  //领取奖励
}



//-------------鹊桥会-----------------
message WarFlagTwoTips{
    required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

message WarFlagTwoSyncInfoSyn{
	repeated WarFlagTwoMsg exchangeInfo = 1 ;//兑换信息
	repeated int32 tips = 2; //兑换提示
}

message WarFlagTwoMsg{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}
//-------------鹊桥会-----------------

// -------- 【双享豪礼】 -------------

// 活动信息推送
message DoubleGiftActivityInfo
{
    repeated DoubleGiftInfo giftInfo 	= 1; // 礼包信息
    required bool freeGiftTaken      	= 2; // 免费礼包（当日）是否已领取
    required int32 accDay             	= 3; // 累计购买天数	
}

// 礼包信息
message DoubleGiftInfo
{
	required int32 giftId    = 1; 		// 礼包ID
	required int32 rewardConfigId = 2; 	// 奖励配置Id
	required bool  isBuy = 3; 			// 是否已购买
}

// 选择礼包奖励请求
message DoubleGiftRewardSelectReq
{
	required int32 rewardId   = 1;  // 档次类型
    required int32 giftId     = 2;  // 礼包ID
}

// -------- 【双享豪礼】 -------------



//-------------限时团购 -----------------

//界面信息sync
message GroupBuyPageInfo{
	repeated GroupBuyGiftInfo groupBuyGiftInfo 		= 1;	//每个礼包团购信息	
	required int32 buyScore = 2;							//购买积分数
}

//购买记录信息sync
message GroupBuyRecordPageInfo{
	repeated GroupBuyRecordInfo groupBuyRecordInfo 	= 1;	//礼包团购记录信息	
}

//礼包团购信息
message GroupBuyGiftInfo{
	required int32 id                   = 1; //礼包id
	required int64 globalBuyTimes       = 2; //全服购买次数	
	required int32 remainBuyTimes       = 3; //剩余购买次数
	required int32 buyTimes             = 4; //个人已购买次数
	optional int32 hotSellFreeGot       = 5; //热销商品免费积分是否已领取（1是0否，-1表示非热销商品）
	repeated int32 topDiscountRewardGot = 6; //最高折扣的奖励已领取的部分，集合中的元素代表次数
}
//礼包团购记录信息
message GroupBuyRecordInfo{
	required int32 id 		= 1;			//礼包id
	required int32 cfgId	= 2;			//档位配置Id
	required int64 time 	= 3;			//时间
	required int32 num		= 4;			//个数
	
}
//购买请求req
message GroupBuyReq{
	required int32 id = 1;		//礼包id
	required int32 num = 2; 	//购买个数
}

//折扣验证请求req
message DiscoutCheckReq{
	required int32 giftId = 1;		//礼包id
	required int32 cfgId = 2;		//折扣id
}

//最高折扣的奖励领取请求
message TopDiscountRewardGetReq
{
	required int32 giftId       = 1; //礼包ID
	required int32 buyTimesItem = 2; //领取的是哪一档（对应购买几次那个）
}

//最高折扣的奖励领取响应
message TopDiscountRewardGetResp
{
	required int32 giftId       = 1; //礼包ID
	required int32 buyTimesItem = 2; //领取的是哪一档（对应购买几次那个）
	optional int32 points       = 3; //如果奖励是积分，代表的是积分数
}

//热销商品免费积分领取请求
message HotSellFreePointReq
{
	required int32 giftId = 1; //礼包ID
}

//热销商品免费积分领取响应
message HotSellFreePointResp
{
	required int32 giftId = 1; //礼包ID
	required int32 points = 2; //积分数
}

//-------------限时团购 -----------------



//-------------军械要塞----------------

//军械要塞活动信息
message OrdnanceFortressInfoResponse{
	required int32 stageId = 1; //层级
	required int32 bigRewardId = 2; //大奖ID
	repeated PBOrdnanceFortressTicket tickets = 3; //奖券信息
	required int32 showReward = 4;  //是否已经展示过奖励 0没有  1已经
	repeated KeyValuePairInt bigRewardDefault = 5; //大奖默认列表
	repeated KeyValuePairInt bigRewardCount = 6; //大奖获取次数
}


//选择大奖
message OrdnanceFortressChoseBigRewardReq{
	required int32 bigRewardId = 1;
}


//翻开奖券
message OpenOrdnanceFortressTicketReq{
	required int32 ticketId = 1; //奖券ID
}

//翻开奖券
message OpenOrdnanceFortressTicketResp{
	required int32 ticketId = 1; //翻开的奖券ID
	repeated PBOrdnanceFortressTicket tickets = 2; //被翻开的奖券
}


//勾选默认大奖
message OrdnanceFortressDefaultBigRewardReq{
	required int32 poolId = 1;  //奖池Id
	required int32 bigRewardId = 2;
	required int32 type = 3;  //1 勾选  0取消
}

//奖券奖励类型
enum OrdnanceFortressRewardType{
	COMM_REWEARD = 1;  //普通道具奖励
	BIG_REWEARD = 2;  //豪华道具奖励
}

//普通奖励类型
enum OrdnanceFortressCommRewardType{
	ITEM_REWARD = 1;  //道具奖励
	EXTEND_X = 2;     //横向全开
	EXTEND_Y = 3;     //纵向全开
	EXTEND_AROUND = 4;//周围全开
}

//奖券信息
message PBOrdnanceFortressTicket{
	required int32 ticketId = 1;  //奖券ID
	required OrdnanceFortressRewardType rewardType = 2;   //奖励类型
	required int32 rewardId = 3;  //奖励ID
}

//-------------军械要塞----------------

//----------周年历程-----------
//主界面
message CelebrationCourseMainReq{
}
message CelebrationCourseMainRes{
	repeated int32 ids=1;//分享id解锁 已解锁列表
	repeated int32 ids_reward=2;//分享领取列表 已领取列表
	required int32 sign_number = 3;//签到次数
	required int32 sign_state = 4;//签到状态 1=可以签到,2=已经签到
}
//分享
message CelebrationCourseShareReq{
	required int32 id=1;//分享成功后领取奖励
}
message CelebrationCourseShareRes{
}
message CelebrationCourseX8Res{
	required string jsonData = 1;
}
//----------周年历程-----------
//----------周年商城-----------
//主界面
message CelebrationShopMainReq{
}
message CelebrationShopBean{
	required int32 item_id=1;//已兑换道具
	required int32 item_num=2;//已兑换道具数量
}
message CelebrationShopMainRes{
	repeated CelebrationShopBean beans=1;//已兑换信息
	repeated GeneralExchangeTip tips = 2;//勾选提醒
}
//分享
message CelebrationShopExchangeReq{
	required int32 item_id=1;//兑换道具id
	required int32 item_num=2;//兑换道具数量
}
message CelebrationShopExchangeRes{
}
//----------周年商城-----------
//----------装备工匠---------------------


// 装备工匠界面信息
message EquipCraftsmanPageInfo
{
	repeated EquipEntryInfo equipEntry = 1; // 装备词条
	required int32 gachaTimes = 2; // 抽取次数
	required bool secondPage = 3; // 是否是二级界面 默认 false
}


// 装备工匠词条属性
message EquipEntryInfo
{
	required string uuid = 1; // id
	required int32 attrCfgId = 2; // 配置id 对应活动 equip_craftsman_gacha配置的id
	required int64 gachaTime = 3; // 抽取的时间
}


// 装备工匠词条抽取
message EquipCraftsmanGachaReq
{
	optional int32 armyLockType = 1; // 兵种锁定类型 坦克/飞机/... (读配置)
	optional int32 attrLockType = 2; // 属性锁定类型 攻击/防御/... (读配置)
	optional bool gachaTen	= 3; // 是否是十连抽, 默认false
}

message EquipCraftsmanGachaResp
{
	repeated EquipEntryInfo equipEntry = 1; // 抽取到的词条
}


// 装备工匠传承请求
message EquipCraftsmanInheritReq
{
	required string armourId = 1; // 装备id  **** 这段本来应该复用Armour.proto那一段，不过两个pb之中有定义重复的枚举，没办法了
	optional int32 attrId = 2; // 属性id
	optional int32 attrType = 3; // 属性作用号类型
	optional int32 attrValue = 4; // 属性作用号值(发的是乘以100以后的)
	optional EArmourAttrType type = 5; // 属性类型
	
	required string beInheritId = 6; 	// 被传承的属性id
}

// 铠甲属性类型
enum EArmourAttrType
{
	BASE = 0; // 基础属性
	EXTR = 1; // 额外属性
	SUPER_EXTR = 2; // 神器额外属性
	SPECIAL = 3; 	//特技
}

//---------------------------------------


//----------周年蛋糕同享活动-----------
//蛋糕的位置
message CakeShareLocationResp{
	required int32 posX = 1;
	required int32 posY = 2;
}

//蛋糕奖励信息
message CakeShareGiftInfoResp{
	required int32 cakeTurn          = 1;   //奖励轮数
	required int32 marchReward       = 2;   //行军固定奖励
	required int64 startRewardTime   = 3;   //轮次开始时间
	required int64 endRewardTime     = 4;   //轮次结束时间
	required int32 cakeAward         = 5; 	//龙船奖励 0未领取，1已经领取
	required int32 giftCount         = 6; 	//礼包数量
}
//----------周年蛋糕同享活动-----------


//----------周年庆烟花盛典活动-----------
//烟花盛典信息
message FireWorksInfoSync{
	required bool dayFree 				= 1; //今日是否免费领取过
	repeated FireBuffInfo fireBuffInfo 	= 2; //buf信息
}
//buf信息
message FireBuffInfo{
	required int32 buffId 	= 1;	//buffId
	required int64 endTime 	= 2;	//结束时间
}
//点燃烟花
message SendFireWorksReq{
	required int32 number = 1; 	//个数
	
}
//----------周年庆烟花盛典活动-----------

//---------------------------------------
//---------------------------------------


//----------周年庆-庆典美食活动-----------
//庆典美食制作
message MakeCelebrationFoodReq{
	required int32 level = 1;  //制作蛋糕等级
}

//庆典美食信息
message CelebrationFoodInfo{
	required int32 currentLevel = 1; 	//当前等级
	required bool buyBest 		= 2; 	//是否购买进阶版
	optional bool buySuper      = 3;    //是否购买高阶版（新加的50元）
}
//----------周年庆-庆典美食活动-----------


//----------荣耀返利活动-----------

 //荣耀返利状态
enum RepayState{
    REPAY_CAN_RECIEVE   = 1; //可领取
	REPAY_RECIEVED    	= 2; //已领取
}

//荣耀返利直购礼包购买次数
message HonorRepayBuyCount{
	required int32 giftId = 1;
	required int32 count = 2;
}

//荣耀返利界面信息
message HonorRepayPageInfo{
	required int32 buyNum = 1;  				//已经购买个数
	repeated HonorRepayInfo honorRepayInfo = 2; //返利奖励信息
	repeated HonorRepayBuyCount honorRepayBuyCount = 3; //直购礼包购买次数
}

//荣耀返利购买req
message HonorRepayBuyReq{
	required int32 num = 1;  //购买个数
}

//荣耀返利信息
message HonorRepayInfo{
	required int32 level 		= 1; 	//档位
	required RepayState state 	= 2; 	//状态
}

//荣耀返利领奖req
message HonorRepayReceiveRewardReq{
	required int32 level = 1;  //领奖的档位 0 开始
}
//--------- 荣耀返利活动-----------
//------------红包庆典------------------
enum RedPackageState{ //红包状态
    RED_PARCKAGE_CAN_RECIEVE         = 1; //可领取
	RED_PARCKAGE_ALREADY_RECIEVED    = 2; //已领取
	RED_PARCKAGE_ONT_START           = 3; //未开始
	RED_PARCKAGE_ALREADY_OVER        = 4; //已经结束
}


//活动页面信息
message RedPackageActivityInfoResp{
    repeated PBRedPackageInfo infos = 1; //红包
}

//抢红包请求
message RedPackageRecieveReq{
    required int32 stageId = 1; //领取的红包id
	required int32 score = 2;  //积分
	
}

//抢红包返回
message RedPackageRecieveResp{
	required PBRedackageRecord info = 1; //红包信息
}



//红包历史
message RedackageRecordsResp{
    repeated PBRedackageRecord records = 1;
}


//阶段红包信息
message PBRedPackageInfo{
    required int32 id = 1; //红包id
	required int64 showTime = 2; //展示时间
	required int64 startTime = 3; //开始时间
	required int64 endTime = 4; //结束时间
	required RedPackageState state = 5; //红包状态
}




//阶段抢红包记录
message PBRedackageRecord{
	required int32 stageId = 1; //阶段ID
	required int32 score = 2; //积分
	repeated RewardItem rewards = 3;
	
}


//------------红包庆典-----------------



//------------卫星计划-----------------
//卫星计划信息
message SatellitePlanInfoResp{
	required int32 level = 1;    //当前等级
	required int32 exp = 2;      //当前经验
	required int64 monsterStart = 3; //杀怪开始时间
	required int64 monsterEnd = 4;//杀怪结束时间
	repeated KeyValuePairInt echangeList  = 5;//礼包购买信息(礼包ID:购买次数)
	repeated int32 careList = 6; //关注列表
}

//兑换道具
message SatellitePlanExchangeReq{
	required int32 exchangeId = 1;    //兑换ID
	required int32 exchangeCount = 2; //兑换次数
}


//更新关注
message SatellitePlanExchangeCareReq{
    required int32 exchangeId = 1; //玩家勾选提醒
	required int32 care = 2;   //标识，1为勾上，0为去掉勾
}

//前往击杀
message SatellitePlanToKillResp{
	required int32 posX = 1;
	required int32 posY = 2;
}


//------------卫星计划-----------------

//------------战场寻宝-----------------

// 同步活动信息 (请求活动页面信息也是返回此PB)
message BattleFieldActivityInfo
{
	required int32 loginDays    = 1; //累计登录天数
	repeated int32 rewardDay    = 2; //已领取哪些天的奖励
	required bool  buyGift      = 3; //是否购买通行证
	required int32 stay         = 4; //当前所在格子
	repeated int32 awardId      = 5; //格子奖励
	required int32 randomTimes  = 6; //随机点数的骰子投掷次数
	required int32 fixedTimes   = 7; //固定点数的骰子投掷次数
	required int32 randomPointDiceCount = 8; // 随机点数的骰子数量
	required int32 fixedPointDiceCount  = 9; // 固定点数的骰子数量
	repeated int32 passedCell   = 10; // 已走过的格子
	required int32 buyOrdinary           = 11; // 购买普通 
	required int32 buyControl           = 12; // 购买固定
	optional int32 yijianpaotuCnt	= 13; // 一键跑图剩余次数
}

// 骰子类型
enum BattleFieldDiceType
{
	RANDOM_POINT_DICE  = 1; //随机点数的骰子
	FIXED_POINT_DICE   = 2; //固定点数的骰子
}

// 投掷骰子请求
message BattleFieldDiceRollReq
{
	required BattleFieldDiceType type  = 1; //骰子类型
	optional int32 point               = 2; //点数（针对固定点数的骰子）
	optional bool useGold              = 3; //是否用货币结算（没有可用骰子的情况下）
}

// 投掷骰子响应
message BattleFieldDiceRollResp
{
	required BattleFieldDiceType type  = 1; //骰子类型
	required int32 point               = 2; //点数
	required int32 stay                = 3; //最终所停留在的格子
	repeated RewardItem rewards        = 4; //奖励
	required int32 randomTimes         = 5; //随机点数的骰子投掷次数
	required int32 fixedTimes          = 6; //固定点数的骰子投掷次数
	required int32 randomPointDiceCount = 7; // 随机点数的骰子数量
	required int32 fixedPointDiceCount  = 8; // 固定点数的骰子数量
	repeated int32 passedCell           = 9; // 已走过的格子
	required int32 buyOrdinary           = 10; // 购买普通 
	required int32 buyControl           = 11; // 购买固定
}

message BattleFieldDiceOneRollReq{
	optional int32 count = 1;
}
// 一键投掷骰子响应
message BattleFieldDiceOneRollResp{
	repeated RewardItem rewards        = 1; //奖励
}

// 领取累计登录奖励请求
message BattleFieldLoginRewardReq
{
	required int32 day = 1; //登录天数
}

// 领取累计登录奖励响应
message BattleFieldLoginRewardResp
{
	repeated int32 rewardDay    = 1; //已领取哪些天的奖励
}

message BattleFieldDiceBuyReq
{
	required int32 oType = 1; //1=普通，2=固定
	required int32 oNum = 2; //数量
}

//------------战场寻宝-----------------

//------------军备活动-----------------
message ArmamentExchangeInfo
{
	required int32 idx = 1;//宝箱索引 1-6
	required int32 num = 2;//兑换次
}

message ArmamentMainInfo
{
	repeated ArmamentExchangeInfo infos =1;//宝箱列表信息
}

message ArmamentExchangeItem
{
	required int32 itemType = 1;//道具类型
	required int32 itemId = 2;//id
	required int32 itemNum = 3;//数量
}

message ArmamentExchangeReq{
	required int32 idx = 1;//宝箱索引
	required int32 exchangeNum = 2;//兑换次数
	repeated ArmamentExchangeItem items =3;//兑换道具需要数量
}
//------------军备活动-----------------



//-------------装备战令-----------------


// 战令任务数据同步
message OrderEquipItemsInfoSync
{
	repeated OrderItemPB item		= 1; // 成就项列表
}

// 战令活动基础数据
message OrderEquipBaseInfo{
	required int32 currCycle	= 1;	// 当前阶段
	required int32 level		= 2;	// 战令等级
	required int64 exp			= 3;	// 经验值
	optional int32 authorityId	= 4;	// 进阶id
	optional int32 weekNumber	= 5;	// 本周已购买次数
}

// 获取战令活动界面信息
message GetOrderEquipPageInfoResp
{
	required OrderEquipBaseInfo baseInfo	= 1; // 基本信息
	repeated OrderItemPB items		    = 2; // 成就项列表
}



// 获取战令活动历史任务数据
message GetHistoryOrderEquipInfoReq
{
	required int32 cycleId		= 1;	//周数
}

message GetHistoryOrderEquipInfoResp
{
	required int32 cycleId		        = 1; //周数
	repeated OrderItemPB items	    = 2; // 成就项列表
}

// 购买战令等级
message BuyOrderEquipLvlReq
{
	required int32 currLvl = 1;
}

//-------------装备战令-----------------

//-------------充值豪礼-----------------

message RechargeGiftDataSync
{
	required int32 rechargeTotal = 1; // 充值总额（本期活动内的）
}

//-------------充值豪礼-----------------

//-------------基金团购-----------------
//监控的活动状态，结构体，不单独使用
message ScoreState
{
	required int32 activityType = 1; // 活动类型ID
	required int32 subType = 2; // 子类型ID
}

message GroupPurcharseInfoSync
{
	required int32 score = 1; // 最新总积分
	required int32 scoreOld = 2; // 变化前的总积分
	required bool isDailyReceive = 3; // 0：可领取 1：已领取
	repeated ScoreState scoreState = 4; //监控的活动状态
	
}

//每日登陆宝箱领取同步
message GroupPurcharseDailyRewardReq
{
}
//-------------基金团购-----------------




//-------------双 11 全服签到---------


//全服签到弹幕
message GlobalSignInBulletChat{
	required string playerName = 1; //玩家名称
	required int32 chatId      = 2; //发言ID
}

//全服签到信息
message GlobalSignInfoResp{
	required bool sign        = 1; //是否已经签到
	required int32 signCount  = 2; //签到人数
	required bool chatControl = 3; //弹幕开关
}

//玩家参与签到
message GlobalSignInPlayerJoinReq{
	required int32 chatId = 1;   //签到发言ID
}


//玩家参与签到
message GlobalSignInPlayerJoinResp{
	required int32 chatId = 1;   //签到发言ID
}


//弹幕开关
message GlobalSignSetBullectChatControlReq{
	required bool control  = 1;   //弹幕开关 
}

//全服签到弹幕列表
message GlobalSignInBulletChatResp{
	repeated GlobalSignInBulletChat chats = 1;  //
}


//-------------双 11 全服签到---------

//-------------双 11 全服签到幸运折扣---------

message HPSuperDiscountInfoResp{
	required int32 freeTimes = 1;  		//免费次数
	required int32 state =2;			//奖励状态、0 不可兑换/1 可兑换
	required int64 deadLine = 3;		//本次随机到的奖池关闭时间
	repeated KeyValuePairInt goods = 4; //已经兑换的次数 K(商店配置表id)/V(已经兑换次数)
	required int32 poolId = 5;			//随机到的奖池id
	required int32 refreshTimes = 6;    //刷新次数
}

message HPSuperDiscountBuyReq{
	required int32 cfgId      = 1;   //商品ID
	required int32 count      = 2;   //数量
	optional int32 voucherId  = 3;   //代金券
}
//-------------双 11 全服签到幸运折扣---------


//-------------双十一 联盟欢庆积---------
// 联盟欢庆积分排行榜信息
message GetAllianceCelebrateRankInfoResp{
	repeated AllianceCelebrateRankInfo rankInfo = 1; //排行信息
	optional AllianceCelebrateRankInfo selfRank = 2; //联盟排行

}

// 积分排行信息
message AllianceCelebrateRankInfo{
	required int32 rank		= 1;
	required string name	= 2; //玩家/联盟名称
	optional string guildTag= 3; //联盟简称
	required int64 score	= 4; //积分
	optional int32 guildFlag= 5; //联盟旗帜
}


//联盟欢庆信息
message AllianceCelebrateInfoResp{
	required int32 level 			= 1; 	//等级
	required int32 exp 				= 2; 	//经验
	repeated string hasRewardInfo  	= 3;	//已领奖的信息7_1等级7第1个奖励,,7_2第二个
	optional int32 personExp		= 4; 	  	//个人贡献经验
	
}


//联盟欢庆领取奖励
message AllianceCelebrateRewardReq{
	required string getRewardInfo 	= 1; //等级_第几个,7_1等级7第1个奖励,,7_2第二个
}

//联盟欢庆捐献
message AllianceCelebrateDonateReq{
	required int32 num 				= 1; //捐献个数
}



//---------装扮投放系列活动二:能量聚集活动---------
message EnergyGatherInfoSync
{
	required int32 curDays			= 1; // 当前天数
}

//---------装扮投放系列活动三:战火重燃活动---------
message FireReigniteInfoSync
{
	required int32 exp					= 1; // 活动经验
	required int32 recBoxNum			= 2; // 已经领取的宝箱个数
	required int32 exchangeNum			= 3; // 已经兑换的次数(金条)
}

//战火重燃金条购买物品
message FireReigniteExchangeReq
{
	required int32 index				= 1; // 1普通2金条
	required int32 num					= 2; // 个数
}


//---------装扮投放系列活动四:硝烟再起---------
message GunpowderRiseTipsReq{
    required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

message GunpowderRiseInfoSync{
	repeated PBGunpowderRiseExchange exchangeInfo 	= 1 ;//兑换信息
	repeated int32 tips 							= 2; //兑换提示
}

message PBGunpowderRiseExchange{
	required int32 exchangeId 	= 1; //兑换表的ID
	required int32 num 			= 2; //兑换物品的次数
}


//-------------泰能宝库----------------

//军械要塞活动信息
message PlantFortressInfoResponse{
	required int32 stageId = 1; //层级
	required int32 bigRewardId = 2; //大奖ID
	repeated PBPlantFortressTicket tickets = 3; //奖券信息
	required int32 showReward = 4;  //是否已经展示过奖励 0没有  1已经
	repeated KeyValuePairInt bigRewardDefault = 5; //大奖默认列表
	repeated KeyValuePairInt bigRewardCount = 6; //大奖获取次数
	required int32 buyLastCount = 7;  //剩余购买次数
}

//购买钥匙道具
message BuyPlantFortressTicketReq{
	required int32 buyCount = 1;
}

//选择大奖
message PlantFortressChoseBigRewardReq{
	required int32 bigRewardId = 1;
}


//翻开奖券
message OpenPlantFortressTicketReq{
	required int32 ticketId = 1; //奖券ID
}

//翻开奖券
message OpenPlantFortressTicketResp{
	required int32 ticketId = 1; //翻开的奖券ID
	repeated PBPlantFortressTicket tickets = 2; //被翻开的奖券
}


//勾选默认大奖
message PlantFortressDefaultBigRewardReq{
	required int32 poolId = 1;  //奖池Id
	required int32 bigRewardId = 2;
	required int32 type = 3;  //1 勾选  0取消
}

//奖券奖励类型
enum PlantFortressRewardType{
	PLANT_FORTRESS_COMM_REWEARD = 1;  //普通道具奖励
	PLANT_FORTRESS_BIG_REWEARD = 2;  //豪华道具奖励
}

//普通奖励类型
enum PlantFortressCommRewardType{
	PLANT_FORTRESS_COMM_ITEM_REWARD = 1;  //道具奖励
	PLANT_FORTRESS_COMM_EXTEND_X = 2;     //横向全开
	PLANT_FORTRESS_COMM_EXTEND_Y = 3;     //纵向全开
	PLANT_FORTRESS_COMM_EXTEND_AROUND = 4;//周围全开
}

//奖券信息
message PBPlantFortressTicket{
	required int32 ticketId = 1;  //奖券ID
	required PlantFortressRewardType rewardType = 2;   //奖励类型
	required int32 rewardId = 3;  //奖励ID
}

//-------------泰能宝库----------------



//----------军事备战---------------


//军事备战活动信息
message MilitaryPrepareInfoResp{
	required bool advanced = 1;   //是否购买进阶
	repeated int32 box     = 2;   //领取进阶奖励列表
}
//军事备战活动补领奖励
message MilitaryPrepareAchieveRewardReq{
	required int32 box  = 1;  //id
}

//----------军事备战---------------



//---------圣诞节系列活动一:冰雪计划(因为是复制版故名字直接+two)---------
message EnergyGatherTwoInfoSync
{
	required int32 curDays			= 1; // 当前天数
}

//---------圣诞节系列活动二:冬日装扮活动---------
message FireReigniteTwoInfoSync
{
	required int32 exp					= 1; // 活动经验
	required int32 recBoxNum			= 2; // 已经领取的宝箱个数
	required int32 exchangeNum			= 3; // 已经兑换的次数(金条)
}

//冬日装扮购买物品
message FireReigniteTwoExchangeReq
{
	required int32 index				= 1; // 1普通2金条
	required int32 num					= 2; // 个数
}


//---------圣诞节系列活动三:冰雪商城---------
message GunpowderRiseTwoTipsReq{
    required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

message GunpowderRiseTwoInfoSync{
	repeated PBGunpowderRiseExchange exchangeInfo 	= 1 ;//兑换信息
	repeated int32 tips 							= 2; //兑换提示
}

message PBGunpowderRiseTwoExchange{
	required int32 exchangeId 	= 1; //兑换表的ID
	required int32 num 			= 2; //兑换物品的次数
}

//---------圣诞节系列活动 累计充值---------
message ChristmasRechargeInfoSync{
    required int32 rechargeDiamond = 1; //玩家充值金条数
}

//---------圣诞节系列活动end



//-----------回流活动-回归特权------------------

// 特权信息
message BackPrivilegeInfoResp
{
	required bool reward             = 1; //是否领取过奖励
	repeated BackPrivilegeBuff buffs = 2; //特权buff
	required int32 backDataId        = 3; //回流级别触发ID
	required int32 effectTimes28102  = 4; //当天28102生效次数
}

//特权buff
message BackPrivilegeBuff{
	required int32 id               = 1;
	required string startTime       = 2;
	required string endTime         = 3;
}

//-----------回流活动-回归特权-----------------



//--------- 玩家回流H5活动，activityId=280 ---------

// 活动信息
message PlayerTeamBackActivityInfo {
    required int32 starNum           = 1;  // 星级鉴定的鉴定星数量，默认-1表示还未鉴定
	required int32 teamId            = 2;  // 战队ID，默认-1表示还未加入战队
	repeated H5TeamMemberInfo member = 3;  // 战队成员信息
	repeated int32 rewardInfo        = 4;  // 奖励情况列表（1：活跃礼包奖励（个人连续登录奖励）；2：幸运抽次数奖励；3：组队礼包奖励；4：任务礼包奖励）
}

// 战队成员信息
message H5TeamMemberInfo {
	required string playerId   = 1;  // 成员角色ID
	required string playerName = 2;  // 成员游戏内名字
	required string serverId   = 3;  // 成员所在区服
	required int32 back        = 4;  // 回流标识：1回流，0非回流
	optional string pfInfo     = 5;  // 平台头像
	optional int32 icon        = 6;  // 头像
	optional int32 groupTs     = 7;  // 加入战队的时间（队长是组队的时间）   
}

//---------玩家回流H5活动end



//----------------雄芯壮志---------------
message CorePlateActivityInfoResp{
	required int32 lotteryTimes    = 1;  //剩余抽取次数
	required int32 coreRandomTimes = 2;  //随机芯片次数
}
//----------------雄芯壮志---------------


// ---------登录基金活动---------
message LoginFundTwoInfoSync
{
	repeated int32 hasBuyType		= 1; // 已购买等级基金类型
}


// ---------洪福礼包活动---------
message HongFuGiftInfoSync
{
	repeated HongFuGiftPB hongFuGiftPb		= 1; // 洪福礼包信息
}

//洪福礼包信息
message HongFuGiftPB
{
	required int32 id					= 1; // 类型id
	optional int32 rewardId				= 2; // 自选奖励Id
	optional bool isUnlock				= 3; // 礼包状态是否解锁
	optional int32 canRecDays			= 4; // 可领取累计几天的奖励
	optional int32 hasRecDays			= 5; // 已经领取累计天数的奖励
	optional int64 nextRecTime			= 7; // 下次领取奖励的时间
	optional int32 noLockCanRecDays		= 8; // 未解锁可领取累计几天的奖励
}


//免费解锁
message HongFuGiftFreeUnlockReq
{
	required int32 id		= 1; //免费解锁的礼包Id
}

//洪福礼包自选奖励
message HongFuGiftChooseRewardIdReq
{
	required int32 id		= 1; //礼包Id
	required int32 rewardId	= 2; //礼包奖励Id
}

//洪福礼包领取奖励
message HongFuGiftRecRewardIdReq
{
	required int32 id		= 1; //礼包Id
}


// 红蓝对决牌局信息
message RedBlueTicketPoolInfoPB
{
	required int32 remainRefreshTimes            = 1; // 剩余可刷新牌局的次数
	repeated RedBlueTicketInfoPB redPoolTicket   = 2; // 红方已翻出牌的信息
	repeated RedBlueTicketInfoPB bluePoolTicket  = 3; // 蓝方已翻出牌的信息
	optional int32 started                       = 4; // 0表示还未开始，不能翻牌，1表示已经开始了
}

message RedBlueTicketInfoPB
{
	required int32 ticketId = 1; // 已翻出的牌
    required int32 rewardId = 2; // 已翻出的奖励
}

// 红蓝对决翻牌请求
message RedBlueTicketOpenReq
{
	required int32  poolId    = 1;  // 0表示红牌，1表示蓝牌
    required int32  ticketId  = 2;  // 牌面ID
}


//-------------精装夺宝------------------


//夺宝信息同步
message DressTreasureInfoResp{
	required DressTreasureInfo treasureInfo = 1;//夺宝信息
	repeated GeneralExchangeTip tips        = 2;  //兑换提示
}

//投掷色子返回
message DressTreasureRandomResp{
	required int32 randomFirst              = 1; //色子随机值1
	required int32 randomSecond             = 2; //色子随机值2
	required int32 awardId                  = 3; //中奖ID   0未中奖
	repeated RewardItem rewards             = 4; //奖励
	required DressTreasureInfo treasureInfo = 5; //投掷后的信息
}


//兑换物品
message DressTreasureExchangeReq{
	required int32 exchangeId = 1;
	required int32 exchangeCount = 2;
}

//精装夺宝兑换信息
message DressTreasureExchangeItem{
	required int32 echangeId    = 1;  //兑换ID
	required int32 echangeCount = 2;  //已经兑换的数量
}

//精装夺宝具体信息
message DressTreasureInfo{
	repeated int32 awardList                    = 1; //已经获得的奖励
	required int32 awardRandomStart             = 2; //奖池起始
	required int32 awardRandomEnd               = 3; //奖池结束
	required string randomCost                  = 4; //随机消耗
	repeated DressTreasureExchangeItem exhanges = 5; //兑换信息
	required int32 resetCount                   = 6; //重置次数
}

////////////// 预流失活动 //////////////////////
message PrestressingLossActivityInfo
{
	required int64 endTime   = 1;   // 活动结束时间
}


////////////// 泰能机密 ///////////////////////

// 泰能机密活动信息：开启第几个宝箱、单个宝箱开启次数、购买了多少次道具、已翻出的牌，密码
message PlantSecretActivityInfo
{
	required int32 openedBoxCount     = 1; // 已开启多少个宝箱
	required int32 openBoxTimes       = 2; // 单个宝箱（即当前宝箱）已开启次数
	required int32 buyItemCount       = 3; // 已购买多少个道具
	repeated int32 openedCard         = 4; // 已翻出的牌
	required int32 secretNum          = 5; // 牌下面盖着的密码（4位数从前到后跟密码顺序对应，如果只有三位数，说明最左边的输入密码为0，后面以此类推）
	required int64 lastShareTimeWorld = 6; // 上次世界频道发送聊天分享的时间
	required int64 lastShareTimeGuild = 7; // 上次工会频道发送聊天分享的时间
	required int64 shareWorldTimes    = 8; // 世界频道当日分享次数
	required int64 shareGuildTimes    = 9; // 工会频道当日分享次数
	required int32 dailyOpenBox       = 10;// 当日已经消耗的开箱次数
}

// 请求翻牌
message PlantSecretOpenCardReq
{
	required int32  cardId  = 1;  // 牌ID
}

// 请求开启宝箱
message PlantSecretOpenBoxReq
{
	required int32 secretNum  = 1;  // 开启宝箱输入的密码数字（4位数从前到后跟密码顺序对应，如果只有三位数，说明最左边的输入密码为0，后面以此类推）
}

// 购买翻牌道具
message PlantSecretBuyItemReq
{
	required int32 count  = 1;  // 购买数量
}

// 聊天频道分享
message PlantSecretChatShareReq
{
	required int32 chatType  = 1;  // 聊天频道ID 1:公会聊天,2:世界聊天
	required string chatMsg  = 2;  // 要转发到聊天频道里的信息，客户端组装好，服务器转发到对应的聊天频道
}

//-------------幸运转盘------------------

//幸运转盘信息
message LuckBoxInfoResp{
	required int32 boxOver                       = 1;  //是否完成
	required int64 shopTime                      = 2;  //商店开启时间
	repeated LuckBoxCell cells                   = 3;  //格子内容
	repeated LuckBoxItemExchange exchangeItems   = 4;  //兑换信息
	repeated GeneralExchangeTip tips             = 5;  //兑换提示
	required int32 buyNeedCount                  = 6;  //已经购买摇奖道具数量
	required int32 randomCount                   = 7;  //总次数
	
}


//物品兑换
message LuckBoxItemExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}


//转盘格子
message LuckBoxCell{
	required int32 id        = 1; //格子ID
	required int32 awardId   = 2; //奖励ID
	required int32 count     = 3; //奖励数量
	required int32 canSelect = 4; //是否可选择
	required int32 weight    = 5; //权重
}


//转盘奖励
message LuckBoxReward{
	required int32 cellId             = 1;  //中奖格子
	required int32 boxOver            = 2;  //是否完成
	repeated RewardItem cellRewards   = 3;  //格子奖励
	repeated RewardItem overRewards   = 4;  //结束剩余奖励
	repeated LuckBoxCell cells        = 5;  //当前格子内容
	required int32 randomCount        = 6;  //总次数
}



//转盘摇奖
message LuckBoxRadnomRewardReq{
	required int32 count = 1;  //摇奖数量
}

//转盘摇奖结果
message LuckBoxRadnomRewardResp{
	repeated LuckBoxReward rewards = 1;   //奖励列表
}

//更换奖励
message LuckBoxSelectRewardReq{
	required int32 cellId   = 1;   //格子ID
	required int32 rewardId = 2;   //奖励ID
}

//更换奖励
message LuckBoxSelectRewardResp{
	required LuckBoxCell cell = 1;  //当前格子内容
}


//勾上兑换提醒
message LuckBoxItemExchangeTipReq{
    required int32 id  = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}


//兑换物品
message LuckBoxItemExchangeReq{
	required int32 id  = 1; //id
	required int32 num = 2; //个数
}


//购买转盘需要的道具
message LuckBoxNeedItemBuyReq{
	required int32 num = 2; //个数
}

//-------------幸运转盘------------------


///////////////////选美初赛买花//////////////////////

// 买花请求
message BeautyContestBuyFlowerReq
{
	required int32  count = 1;  // 购买数量
}

//////////////////////////////////////////



///////////////////欢乐限购（红包）297//////////////////////

// 欢乐限购活动信息同步
message RedRechargeActivityPB
{
	repeated RedRechargeItemPB rechargeItem = 1;  // 充值项信息
	required int32 day                      = 2;  // 当前处于活动的第几天
	optional int32 score                    = 3;  // 总积分
}

message RedRechargeItemPB
{
	required int32 cfgId            = 1;  // 活动配置项ID
	required int32 remainCount      = 2;  // 当天还可以购买几次
	required int32 totalCountToday  = 3;  // 当天总共可以购买几次
}

//////////////////////////////////////////



//-------------盟军祝福------------------

//活动信息同步
message PBAllianceWishInfoResp
{
	repeated int32 openNumbers                   = 1;   //打开的数字列表
	required PBAllianceWishSignState signState   = 2;   //签到状态
	required bool supplyState                    = 3;   //是否可以补签
	required bool buyGift                        = 4;   //是否购买了礼包
	required int32 signDays                      = 5;   //签到天数
	required int64 sendHelpTime                  = 6;   //发送联盟信息数量
	required int64 signEndTime                   = 7;   //签到前置结束时间
	repeated PBWishMember members                = 8;   //祝福成员
	required int32 wishCount                     = 9;   //祝福次数
	required int32 wishLuxuryCount               = 10;  //豪华祝福次数
	repeated PBAllianceWishExchange exchanges    = 11;  //兑换信息
	repeated int32 tips                          = 12;  //兑换提示
}


//活动签到状态
enum PBAllianceWishSignState{
	ALLIANCE_WISH_SIGN         = 1; //可签到
	ALLIANCE_WISH_SIGN_ALREADY = 2;  //已经签到
	ALLIANCE_WISH_SIGN_WISH    = 3;  //祝福
	ALLIANCE_WISH_SIGN_WISH_ACHIEVE = 4;//领取
	ALLIANCE_WISH_SIGN_WISH_FINISH = 5;//完成领取
}

//祝福成员
message PBWishMember{
	required string playerId = 1;
	required string name = 2;
	required int32 icon = 3;
	optional string pfIcon = 4;

}

//使用祝福
message PBAllianceWishAddResp{
	//当前活动信息
	required PBAllianceWishInfoResp wishInfo = 1;
	//使用祝福后作用的数字位置
	repeated int32 pos = 2;
}

//物品兑换
message PBAllianceWishExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}

//帮助盟友
message PBPBAllianceWishHelpReq{
	required string playerId = 1;  //盟友ID
}


//兑换物品
message PBPBAllianceWishExchangeReq{
	required int32 id  = 1; //id
	required int32 num = 2; //个数
}




//勾选提醒
message PBAllianceWishTipsReq{
	repeated PBAllianceWishTipAction tips = 1; //玩家勾选提醒
}


message PBAllianceWishTipAction{
	required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}




//-------------盟军祝福------------------

//土拨鼠 info
message PBHiddenTreasureInfo{
	optional int64 nextFree  = 1; // 下次免费刷新
	optional int64 refreshtimes = 2;// 已刷新次数 
	optional int64 purchaseItemTimes = 3; // 道具以购买次数
	repeated PBHiddenTreasureBox nineBox = 4; // 9 个宝箱 
	repeated PBHiddenTreasureExchange exchanges    = 5;  //兑换信息
	optional int32 lottoryCount = 6; // 开箱子总数 
}
// 9个宝箱
message PBHiddenTreasureBox{
	optional int32 poolCfgId = 1;
	optional bool open = 2; // 是否打开
}

//物品兑换记录
message PBHiddenTreasureExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}

//土拨鼠兑换物品
message PBHiddenTreasureExchangeReq{
	required int32 id  = 1; //id
	required int32 num = 2; //个数
}

//开箱子
message PBHiddenTreasureOpenboxReq{
	optional int32 index  = 1; // 0 - 8 
	optional bool openAll = 2; // 一键全开
}

//买开箱子的道具
message PBHiddenTreasureOpenboxItemBuyReq{
	optional int32 number  = 1; // 买几个 
}






//-------------七夕相遇----------------

//七夕相遇活动信息
message PBLoverMeetInfoResp{
	required int32 finishCount        = 1;  //完成局数
	repeated int32 endings            = 2;  //已经完成的结局列表
	required bool gameOver            = 3;  //是否结束
	required int32 score              = 4;  //分数进度
	required int32 questionId         = 5;  //问题ID  0表示初始状态
	repeated int32 answers            = 6;  //问题答案列表
	
}


//七夕问卷-选择答案
message PBLoverQuestionAnswerReq{
	required int32 questionId = 1;
	required int32 answer     = 2;
}


//七夕问卷-选择答案返回
message PBLoverQuestionAnswerResp{
	required int32 questionId = 1;  //问题ID
	required int32 answer     = 2;  //回答ID
	required int32 backId     = 3;  //回复ID
	required int32 endingId   = 4;  //结局ID
}


//-------------七夕相遇----------------=======

//-------------天降洪福----------------
//同步活动信息
message HeavenBlessingSync{
	required int32 freeAchieveId     		= 1; //免费成就ID
	required int32 randomAchieveId			= 2; //随机成就ID
	required int32 customState				= 3; //自定义奖励状态
	required int32 customChoose				= 4; //自选奖励索引
	required int32 levelId					= 5; //挡位id
	required int64 endTime					= 6; //自选奖励索引

}

//选择自定义奖励
message HeavenBlessingChoose{
	required int32 choose	= 1; //自定义奖励索引
}

//领自定义奖
message HeavenBlessingAward{
}

//-------------天降洪福----------------=======

//-------------感恩福利------------------------
enum PBGratefulBenefitsState{
	GRATEFUL_BENEFITS_PUNCH		    = 1; //可签到
	GRATEFUL_BENEFITS_PUNCHED 		= 2; //已签到
	GRATEFUL_BENEFITS_ACHIEVE  		= 3; //可领奖
	GRATEFUL_BENEFITS_FINISH 		= 4; //已领奖
}

//同步活动信息 GRATEFUL_BENEFITS_SYNC       = 53087;
message GratefulBenefitsSync{
    required int64 endTime          		= 1; //邀请签到结束时间戳
    required int32 createDays       		= 2; //玩家注册天数
    required int64 cdTime           		= 3; //邀请冷却时间戳
    required int32 gold             		= 4; //可获得金币数
    required PBGratefulBenefitsState state  = 5; //当前状态
	required int32 shareCount  				= 6; //剩余分享次数
	required bool isFirst					= 7; //是否是第一次打开
    repeated PBWishMember members   		= 8; //帮助玩家列表
}

//感恩福利帮助 GRATEFUL_BENEFITS_HELP    = 53092;
message GratefulBenefitsHelp{
	required string targetPlayerId = 1;
}
//-------------感恩福利---------------=======

//-------------新首充------------------------
enum NewFirstRechargeState{
    NFR_NOT    =   1;//未激活
    NFR_ACTIVE =   2;//已激活
    NFR_CAN    =   3;//已达成
    NFR_GET    =   4;//已领取

}

//单天奖励状态
message NewFirstRechargeInfo{
    required int32 id						= 1; //配置id
    required int64 waitTime					= 2; //可领奖时间戳
    required NewFirstRechargeState state	= 3;//状态
}

//同步活动信息
message NewFirstRechargeSync{
    repeated NewFirstRechargeInfo infos	= 1;//每天状态
    required int32 level				= 2;//已经弹窗的信息
}

//领奖
message NewFirstRechargeAward{
    required int32 id = 1; //配置id
}

//记录已经弹窗的信息
message NewFirstRechargePop{
    required int32 level = 1;//建筑等级
}
//-------------新首充---------------=======

//-------------玫瑰赠礼----------------------
//活动信息
message RoseGiftInfo{
    repeated RoseGiftDrawInfo drawInfos = 1;//抽奖信息
    repeated RoseGiftExchangeInfo exchangeInfos = 2;//兑换信息
    repeated int32 tips = 3; //兑换提示
	required bool isPay = 4; //今天是否付费
	required int32 selfNum = 5;//个人获得花瓣数量
	required int32 serverNum = 6;//全服获得花瓣数量
}

//玫瑰抽奖
message RoseGiftDrawInfo{
    required int32 drawId = 1; //抽奖表的ID
	required int32 num    = 2; //抽奖物品的次数
}

//兑换物品
message RoseGiftExchangeInfo{
    required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}

//勾选提醒
message RoseGiftExchangeTipsInfo{
    repeated RoseGiftExchangeTips tips   = 1;
}

message RoseGiftExchangeTips{
    required int32 id   = 1; //玩家勾选提醒
	required int32 tip  = 2; //标识 0为去掉勾 1为勾上
}
//-------------玫瑰赠礼---------------=======

//-------------通用兑换提醒------------------
message GeneralExchangeTipsInfo{
	required int32 activityId = 1;
	repeated GeneralExchangeTip tips   = 2;
}

message GeneralExchangeTip{
    required int32 id   = 1; //玩家勾选提醒
	required int32 tip  = 2; //标识 0为去掉勾 1为勾上
}
//-------------通用兑换提醒-----------=======

//-------------赛季活动------------------

//赛事类型枚举枚举
enum SeasonMatchType{
    S_CYBORG      = 3;//赛伯利亚
    S_TBLY        = 5;//泰伯利亚
    S_DYZZ        = 7;//陨晶，达雅之战
    S_YQZZ        = 8;//月球之战，KVK
    S_SW          = 9;//统帅，星球大战，大帝战
	S_XHJZ        = 10;//星海激战
	S_CROSS       = 11;//航海远征赛季
	S_XQHX        = 12;//先驱回响
}

//赛季信息
message SeasonInfoSync{
    repeated SeasonInfo infos               = 1;// 赛事信息
    optional SeasonGradeInfo gradeInfo      = 2;// 段位信息
    optional SeasonOrderBaseInfo orderInfo  = 3;// 战令信息
    repeated OrderItemPB item	    	    = 4;// 成就项列表
    repeated OrderShopItemPB shopItem       = 5;// 已购买的商店商品列表
	repeated GeneralExchangeTip tips	    = 6;// 通用兑换
	optional string seperateTime			= 7;// 拆服时间
	optional string mergerTime				= 8;// 合服时间

}

//赛事信息
message SeasonInfo{
    required SeasonMatchType type   = 1;//类型
    required int64 startTime    	= 2;//开始时间
    required int64 endTime      	= 3;//结束时间 
}

//段位信息
message SeasonGradeInfo{
    required int32 gradeLevel               = 1;// 当前段位
    required int32 gradeExp                 = 2;// 当前段位经验
}

//战令基础信息
message SeasonOrderBaseInfo{
    required int32 level		  = 1;	// 战令等级
	required int64 exp			  = 2;	// 经验值
	optional int32 authorityId	  = 3;	// 进阶id
	repeated int32 rewardLevel    = 4; 	// 已经领奖普通等级
	repeated int32 rewardAdLevel  = 5;  // 已经领奖进阶等级
	required int32 clientLevel	  = 6;	// 前端记录等级
}

//战令领奖
message SeasonOrderRewardGet{
    required int32 type		  = 1;	// 战令类型（1，普通，2进阶）
	required int32 level	  = 2;	// 战令等级
}

//王者段位积分排行信息
message SeasonGuildKingRankResp {
	required int64 myGuildScore              = 1; //所在联盟的积分（旗帜数）
	required int32 myGuildRank               = 2; //所在联盟的排名
	required string myGuildName              = 3; //所在联盟的名称
	required int32 myGuildFlag               = 4; //所在联盟的标志
	required string myGuildLeader            = 5; //所在联盟的盟主
	required string guildTag                 = 6; //所在联盟的简称
	required string serverId				 = 7;
	repeated SeasonGuildKingRankMsg rankInfo = 8; //排行榜的列表信息.

}

// 排行信息
message SeasonGuildKingRankMsg {
	required int32 rank				  = 1;// 名次
	required int64 score			  = 2;// 积分（旗帜数）
	required string guildName         = 3;  //联盟名称
	required int32 guildFlag          = 4;  //联盟标志
	required string guildLeader       = 5;  //联盟盟主
	required string guildTag          = 6;  //联盟简称
	required string serverId		  = 7;//服务器id
}

//前端等级记录
message SeasonClientLevelUpdate {
	required int32 level		= 1;//等级
}


// 赛季统帅排行信息
message SeasonSWRankInfo {
	required int32 rank				  = 1;// 名次
	optional int64 score			  = 2;// 积分
	required string guildName         = 3;  //联盟名称
	required int32 guildFlag          = 4;  //联盟标志
	required string guildLeader       = 5;  //联盟盟主
	required string guildTag          = 6;  //联盟简称
	required string serverId		  = 7;//服务器id
	optional int32 level			  = 8;// 官职等级
	optional int32  icon 				= 9; //头像
	optional string pfIcon 				= 10; //平台头像
}

//星海激战排行信息
message SeasonXHJZRankInfo {
	required int32 rank				  = 1; //名次
	optional int64 score			  = 2; //积分
	required string guildName         = 3; //联盟名称
	required int32 guildFlag          = 4; //联盟标志
	required string guildLeader       = 5; //联盟盟主
	required string guildTag          = 6; //联盟简称
	required string serverId		  = 7; //服务器id
	optional int32  icon 			  = 8; //头像
	optional string pfIcon 			  = 9; //平台头像
}

message SeasonHonorReq {
	required int32 season = 1;// 赛季ID
}

message SeasonHonorResp {
	required int32 season                       = 1;//赛季ID
	repeated SeasonGuildKingRankMsg seasonRank  = 2;//赛季排行
	repeated PBYQZZLeagueWarServerInfo YQZZRank = 3;//月球排行
	repeated SeasonSWRankInfo SWRank            = 4;//统帅排行
	required string time		                = 5;//荣耀殿堂时间
	repeated SeasonXHJZRankInfo xhjzRank        = 6;//星海激战排行
	repeated SeasonHonorPositionInfo posInfo    = 7;//坑位信息（哪个坑位对应哪个赛事信息）
}

//荣耀殿堂坑位信息
message SeasonHonorPositionInfo
{
	required int32  posId          = 1; //坑位编号
	required SeasonMatchType  type = 2; //赛事类型  
}

//-------------赛季活动-----------=======

//-------------世界勋章活动------------------
//签到类型
enum StarlightSignType{
    STAR_LIGHT_SIGN_NORMAL = 1;//银签
    STAR_LIGHT_SIGN_ADVANCE = 2;//金签

}

//档位
enum StarlightSignRechargeType{
    STAR_LIGHT_SIGN_RECHARGE_ORDINARY = 1;//普通
    STAR_LIGHT_SIGN_RECHARGE_JUNIOR = 2;//低挡
    STAR_LIGHT_SIGN_RECHARGE_INTERMEDIATE = 3;//中档
    STAR_LIGHT_SIGN_RECHARGE_ADVANCED = 4;//高档
}

message StarlightSignInfo{
    required StarlightSignType type = 1;//签到类型
    required StarlightSignRechargeType rechargeType = 2;//充值类型
    optional bool isbuy = 3;//是否已经购买
    repeated int32 reward = 4;//已领奖
    required int32 getCount = 5;//活动数量
    required float multiple = 6;//倍数
    required bool isGet = 7;//是否获得翻倍奖励
	required int32 choose = 8;//选择道具


}

//同步
message StarlightSignSync{
    repeated int32 signDays = 1;//已经签到的天数
    repeated StarlightSignInfo infos = 2;//信息
    required int32 score = 3;//积分
    repeated int32 haveGet = 4;//已领取的积分箱子
    required float rate = 5;//增益
    optional bool isMultiple = 6;//是否翻倍
	optional bool isAdvanceMultiple = 7;//是否翻倍
	required int32 curDay = 8;//当前天数
	required int32 signRedeemCount = 9;//补签次数
}

//签到
message StarlightSignReq{
    required int32 day = 1;//签到第几天
}

//补签
message StarlightSignRedeemReq{
    required int32 day = 1;//补签第几天
}

//选择道具
message StarlightSignChooseReq{
    required StarlightSignType type = 1;//签到类型
    required StarlightSignRechargeType rechargeType = 2;//充值类型
    required int32 itemId = 3;//选择道具id
}

//领取奖励
message StarlightSignAwardReq{
    required StarlightSignType type = 1;//领取类型
}

//购买分数
message StarlightSignBuyReq{
    required int32 score = 1;//购买分数
}

message StarlightSignMultipleReq{
    required StarlightSignType type = 1;//领取类型
	required StarlightSignRechargeType rechargeType = 2;//充值类型
}

message StarlightSignScoreBoxReq{
    required int32 id = 1;//箱子配置id
}
//-------------世界勋章活动-----------=======

//-------------情报储蓄活动------------------
message DiffInformationSaveSync{
    required bool isProprietary = 1;//是否是专服
    required int32 type = 2;//配置阶段值
    required int32 score = 3;//进度值
    required int32 initial = 4;//初始值
    required int32 max = 5;//最大值
    required bool needPop = 6;//是否弹窗
	required bool redDot = 7;//是否红点
}
//-------------情报储蓄活动-----------=======

//-------------全军出击活动------------------
message DiffNewServerTechSync{
    required bool isProprietary = 1;//是否是专服
    required int32 curDay       = 2;//当前天数
    required int32 cfgId        = 3;//当前配置
    required int64 endTime      = 4;//结束时间
    repeated int32 get          = 5;//已经领奖
}

message DiffNewServerTechAward{
    required int32 cfgId        = 1;//奖励配置
}
//-------------全军出击活动-----------=======

//-------------拼多多活动------------------
//商品信息
message PDDBuyInfo{
    required int32 cfgId    = 1; //配置id
    required int32 cnt      = 2; //已经购买数量
    required int32 total    = 3; //全服成功拼单数量
}

//活动数据 PDD_INFO_RESP = 54242;//活动数据
message PDDInfoResp{
    required int32 curDay       = 1; //当前处于活动的几天
    repeated PDDBuyInfo infos   = 2;//商品信息
	required int32 shareCount	= 3;//分享次数
	required int64 shareTime 	= 4;//分享时间

}

//用户数据
message PDDMember{
	required string playerId = 1; //玩家id
	required string name = 2; //玩家名字
	required int32 icon = 3; //玩家头像
	optional string pfIcon = 4; //玩家头像
}

//订单状态
enum PDDOrderState{
    PDD_OPEN = 1; // 拼单中
    PDD_DONE = 2; // 已完成
    PDD_CLOSE= 3; // 已取消
}

//订单信息 
//PDD_ORDER_LIST_SYN = 54251;//单一订单信息同步
//PDD_ORDER_INFO_RESP = 54246;//单一订单信息
message PDDOrderInfo{
    required string orderId   = 1; //订单id
    required int32 cfgId   = 2; //配置id
    required PDDOrderState state = 3; //订单状态
    required int64 creatTime = 4; //创建时间
    required int64 endTime = 5; //结束时间
    required PDDMember originator = 6; //发起者
    optional PDDMember partner = 7; //参与者
    optional int64 buyTime = 8; //购买时间
	optional PDDBuyType type = 9;//购买类型
	optional bool isGet = 10;//是否领取
	optional int64 cancelTime = 11; //取消时间
}

//订单数据 PDD_ORDER_LIST_RESP = 54244;//自己订单列表数据
message PDDOrderListResp{
    repeated PDDOrderInfo infos = 1;//订单信息
}

message PDDGroupListReq{
    required int32 cfgId   = 1; //商品配置id
}

message PDDGroupListResp{
    repeated PDDOrderInfo infos = 1;//订单信息
}

//购买类型
enum PDDBuyType{
    PDD_ALONE = 1; //单独购买
    PDD_CREATE = 2;//发起拼单
    PDD_GROUP = 3;//参与拼单
}

//分享类型
enum PDDShareType{
    PDD_WORLD = 1; //世界频道分享
    PDD_GUILD = 2; //联盟频道分享
}

//购买商品请求 PDD_ORDER_INFO_REQ = 54245;//请求单一订单信息
message PDDOrderInfoReq{
    optional string playerId = 1; //玩家id
    optional string orderId = 2; //订单id
}

//购买商品请求 PDD_BUY_REQ = 54249;//购买请求
message PDDBuyReq{
    required PDDBuyType type = 1;//购买类型
    required int32 cfgId   = 2; //商品配置id
    optional string playerId = 3; //玩家id
    optional string orderId = 4; //订单id
	optional bool isShare = 5;//是否分享
	optional PDDShareType shareType = 6;//分享类型
}

//分享订单请求 PDD_SHARE_REQ = 54250;//分享请求
message PDDShareReq{
    required string orderId   = 1;//订单id
	optional PDDShareType type = 2;//分享类型
}

//取消订单请求 PDD_CANCEL_REQ = 54251;//取消请求
message PDDCancelReq{
    required string orderId   = 1;//订单id
}

message PDDAwardReq{
    required string orderId   = 1;//订单id
}

message PDDTipsSync{
    required string name = 1;//姓名
	required int64 time = 2;//时间
	required int32 cfgId = 3;//配置id
}
//-------------拼多多活动-----------=======

//-------------拆服转服活动--------------
//活动状态
enum ChangeServerActivityState{
    CHANGE_SVR_RANK     = 1; // 名额争夺
    CHANGE_SVR_APPLY    = 2; // 迁服报名
    CHANGE_SVR_SHOW     = 3; // 名单公示
    CHANGE_SVR_CHANGE   = 4; // 正式迁服
}

//玩家信息
message ChangeServerActivityPlayerInfo{
	required string playerId = 1;
	required string playerName = 2;
	required string pfIcon = 3;
	required int32 icon = 4;// 头像
    required string guildName = 5;
    optional int64 power = 6;
    optional int32 rank = 7;
    optional int64 score = 8;
    optional string serverId = 9;
    optional string changeServerId = 10;
    optional int32 useCount = 11;
    optional int32 totalCount = 12;
	optional bool isApply = 13;
}

//玩家列表
message ChangeServerActivityPlayerList{
    repeated ChangeServerActivityPlayerInfo infos = 1;
    optional string serverId = 2;
	optional ChangeServerActivityPlayerInfo selfRank = 3;
}

enum ChangeServerActivityConditionType{
    CHANGE_SVR_GUILD = 1;//联盟
    CHANGE_SVR_COLLEGE = 2;//军事学院
    CHANGE_SVR_MARCH = 3;//行军队列
    CHANGE_SVR_BUILDING_QUEUE = 4;//建筑队列
    CHANGE_SVR_SCIENCE_QUEUE = 5;//科研队列
    CHANGE_SVR_SOILDER_QUEUE = 6;//造兵队列
    CHANGE_SVR_CURE_QUEUE = 7;//治疗队列
    CHANGE_SVR_EQUIP_RESEARCH = 8;//装备研究
    CHANGE_SVR_GUARDER = 9;//守护关系
    CHANGE_SVR_CROSS = 10;//跨服
    CHANGE_SVR_ACCOUNT = 11;//目标服有账号
	CHANGE_SVR_CROSS_TECH_QUEUE = 12; //远征科技研究队列
	CHANGE_SVR_PLANT_SCIENCE_QUEUE = 13; //泰能科技研究
	CHANGE_SVR_PLANT_ADVANCE_QUEUE = 14; //泰能兵进化
	CHANGE_SVR_CURE_PLANT_QUEUE = 15; //泰能兵治疗
	CHANGE_SVR_NATIONAL_HOSPITAL_RECOVER = 16; //国家医院死兵恢复
}



message ChangeServerActivityCondition{
    required ChangeServerActivityConditionType type = 1;
    required bool isDone = 2;
}

message ChangeServerActivityChangeCheckResp{
    repeated ChangeServerActivityCondition conditions = 1;
	optional string realChangeSeverId = 2;
}

//活动信息
message ChangeServerActivityInfoResp{
    required ChangeServerActivityState state = 1;
    required string serverId = 2;
    optional int64 endTime = 3;
    optional int64 normalEndTime = 4;
    optional int64 specialEndTime = 5;
    optional string changeServerId = 6;
	repeated string toServerIds = 7;
	optional bool isManager = 8;
	optional int32 rank = 9;
	optional int32 useCount = 10;
	optional int32 totalCount = 11;
	optional int32 changeGold = 12;
	optional bool isChangeSuccess = 13;
	optional bool isApply = 14;
	repeated int64 score = 15;
	optional int32 selfUseCount = 16;
	optional int32 selfTotalCount = 17;
	optional bool hasAccount = 18;
	optional string separateServerTime = 19;
}

//发送邀请
message ChangeServerActivityInviteReq{
    required string playerId = 1;
}

//邀请审批
message ChangeServerActivityApproveReq{
    required string playerId = 1;
    required bool isPass = 2;
}

message ChangeServerActivityCancelReq{
    required string playerId = 1;
}

//积分排名
message ChangeServerActivityScoreRankResp{
    required ChangeServerActivityPlayerList rankList = 1;
}

//联系管理
message ChangeServerActivityManagerListResp{
    required ChangeServerActivityPlayerList managerList = 1;
}

//审批名单
message ChangeServerActivityInviteeListResp{
    required ChangeServerActivityPlayerList inviteeList = 1;
}

//迁服邀请
message ChangeServerActivityApplyListResp{
    required ChangeServerActivityPlayerList applyList = 1;
}

//战力排行
message ChangeServerActivityPowerResp{
    required ChangeServerActivityPlayerList powerList1 = 1;
    required ChangeServerActivityPlayerList powerList2 = 2;
    optional string serverId = 3;
}

//名单公示
message ChangeServerActivityShowResp{
    required ChangeServerActivityPlayerList normalList = 1;
    required ChangeServerActivityPlayerList specialList = 2;
}

message ChangeServerActivitySearchReq{
    required string name = 1;
	required int32 type = 2;
}


message ChangeServerActivitySearchResp{
    repeated ChangeSvrMiniPlayerMsg playerMsg = 1;
	optional string msg  = 2;//提示信息，当这个字段不为空时，不管memeberInfo，直接按msg弹框提示
}

message ChangeSvrMiniPlayerMsg {
	optional string playerId 			= 1; //玩家ID
	optional string playerName 			= 2; //玩家名字
	optional int32 power 	  			= 3; //战力
	optional int32  icon 				= 4; //头像
	optional string pfIcon 				= 5; //平台头像
	optional string serverId			= 6; //服务器id
	optional string GuildName			= 7; //联盟名字
	optional bool isApply 				= 8; //是否被邀请
}
//-------------拆服转服活动--------------


//------------聊天卡片-------------
//卡片类型
enum ChatCardType{
	MASS_CARD =1;
	PDD_CARD =2;
}

//卡片信息请求
message ChatCardInfoReq
{
	required ChatCardType type = 1;
	repeated string ids = 2;
}

//卡片信息请求返回
message ChatCardInfoResp
{
	required ChatCardType type = 1;
	repeated ChatMassCardInfo massCardInfos = 2;
	repeated PDDOrderInfo pddCardInfos = 3;
}

// 集结卡信息
message ChatMassCardInfo
{
	required string marchId = 1; // 行军ID
	optional bool isLeader = 2; // 是否是队长
	optional bool hasFormation = 3; // 是否有编队
	optional bool inFormation = 4; // 是否在编队中
	optional bool hasJoined = 5; // 是否已加入
	optional bool massFull = 6; // 集结是否满员
	optional bool isMarch = 7; // 集结是否已经出发
	optional bool isEnd = 8; // 集结是否已经结束
	optional int64 marchStartTime = 9; // 行军开始
}
//------------聊天卡片-------------=======



//-------------洪福夺金--------------------
//活动信息 LUCK_GET_GOLD_SYNC
message LuckGetGoldSync{
    required int64 poolNum = 1;//奖池数量
    required int32 poolId = 2;//奖池id
    required int32 freeCount = 3;//免费次数
    required int32 achieveChoose = 4;//成就选择
	required int32 canDrawNum = 5;//剩余抽奖次数
}

//奖池选择 LUCK_GET_GOLD_CHOOSE_REQ
message LuckGetGoldChooseReq{
    required int32 poolId = 1;//奖池id
}

//抽奖类型
enum LuckGetGoldDrawType{
    LGGD_ONE = 1; // 单次
    LGGD_TEN = 2; // 十次
}

//抽奖记录
message LuckGetGoldDrawRecord{
    optional string playerId = 1; //玩家id
	optional string name = 2; //玩家名字
	optional int32 icon = 3; //玩家头像
	optional string pfIcon = 4; //玩家头像
    optional string serverId = 5;//玩家区服
    required int32 luckyNum = 6;//幸运数值
    required int32 getGold = 7;//获得金条
	optional int64 time = 8;//时间
}

//抽奖 LUCK_GET_GOLD_DRAW_REQ
message LuckGetGoldDrawReq{
    required LuckGetGoldDrawType type = 1;
}

//抽奖返回 LUCK_GET_GOLD_DRAW_RESP
message LuckGetGoldDrawResp{
    repeated RewardItem rewards = 1;//奖励
    repeated LuckGetGoldDrawRecord records = 2;//奖券
}

//全服记录 LUCK_GET_GOLD_RECORD_REQ
message LuckGetGoldRecordResp{
    repeated LuckGetGoldDrawRecord records = 1;//记录
}

//个人记录 LUCK_GET_GOLD_SELF_RECORD_RESP
message LuckGetGoldSelfRecordResp{
    repeated LuckGetGoldDrawRecord records = 1;//记录
}


message LuckGetGoldTipsSync{
	repeated LuckGetGoldDrawRecord records = 1;//记录
}
//-------------洪福夺金-------------=======


//-------------实力飞升--------------------
enum DevelopFastTaskType{
    DF_BASE_LEVEL                   = 1; //大本等级
    DF_SCIENCE                      = 2; //科技
	DF_LAB                          = 3; //超能实验室
	DF_LEVEL                        = 4; //总等级
}

enum DevelopFastTaskState{
    DF_NOT_REACH                    = 1; //还未到达
    DF_NOT_RECEIVED                 = 2; //还未领取
    DF_RECEIVED                     = 3; //已经领取
	DF_RECEIVED_TWO                 = 4; //已经双倍领取
}


message DevelopFastTaskItem{
    required int32 id = 1;
    required int32 value = 2;
    required DevelopFastTaskState state = 3;

}

message DevelopFastTask{
    required DevelopFastTaskType type = 1;
    required bool isBuy = 2;
    repeated DevelopFastTaskItem tasks = 3;
    repeated int32 achieveIds = 4;
	required int32 level = 5;
	required int32 score = 6;
    

}

//同步活动信息 DEVELOP_FAST_SYNC
message DevelopFastSync{
    repeated DevelopFastTask tasks = 1;
}

//更新活动信息
message DevelopFastUpdate{
    repeated DevelopFastTask tasks = 1;
}

//领奖
message DevelopFastAward{
    required int32 taskId = 1;
}

//购买信息
message DevelopFastBuyReq{
    required DevelopFastTaskType type = 1;
}

message DevelopFastBuyResp{
    required DevelopFastTaskType type = 1;
    repeated RewardItem reward  = 2;  // 获得物品
}
//-------------实力飞升-------------=======


//-------------新春试炼--------------------
//等级信息
message CNYExamLevel{
    required int32 level = 1; //等级
    required int32 choose1 = 2; //自选奖励1
    required int32 choose2 = 3; //自选奖励2
    required bool isBuy = 4; //是否购买
    required bool isReceived = 5; //是否领取
}

//返回全量活动数据 CNY_EXAM_INFO_SYNC
message CNYExamInfoSync{
    required int32 curDay = 1; //当前天数
    required int32 score = 2; //分数
    required int32 level = 3; //等级
    repeated CNYExamLevel levelInfos = 4; //等级信息
}

//选择道具 CNY_EXAM_CHOOSE_REQ
message CNYExamChooseReq{
    required int32 level = 1; //等级
    required int32 choose1 = 2; //自选奖励1
    required int32 choose2 = 3; //自选奖励2
}

//领奖 CNY_EXAM_AWARD_REQ
message CNYExamAwardReq{
    required int32 level = 1; //等级
}

//差量活动数据更新 CNY_EXAM_UPDATE
message CNYExamUpdate{
    required int32 curDay = 1; //当前天数
    required int32 score = 2; //分数
    required int32 level = 3; //等级
    repeated CNYExamLevel levelInfos = 4; //等级信息
}
//-------------新春试炼-------------=======


//-------------回流新服飞升--------------------
//商店物品兑换信息
message BackToNewFlyShopItem
{
	required int32 goodsId = 1; // 物品ID
	required int32 exhangeTimes = 2; // 次数
}

//登录下发 BACK_TO_NEW_FLY_SYNC = 54351;//数据下发
message BackToNewFlySync{
	repeated BackToNewFlyShopItem goods = 1; // 物品兑换信息
	repeated GeneralExchangeTip tips = 2; // 通用兑换
	required int32 baseLevel = 3; // 老服等级
}

// 物品兑换请求 BACK_TO_NEW_FLY_EXCHANGE_REQ 	= 54354;//兑换请求
message BackToNewFlyExchangeReq
{
	required int32 goodsId = 1; // 物品ID
	required int32 exhangeTimes = 2; // 次数
}
//-------------回流新服飞升-------------=======


//-------------时间跃迁--------------------
//升级类型
enum ReturnUpgradeType{
    REUP_BASE = 1;//主堡
    REUP_ROLE = 2;//指挥官
    REUP_TECH = 3;//科技
}

//升级条目
message ReturnUpgradeItem{
    required ReturnUpgradeType type = 1;//升级类型
    required bool isDone            = 2;//是否完成升级
    optional int32 oldLevel         = 3;//老等级
    optional int32 newLevel         = 4;//新等级
    optional int64 oldPower         = 5;//老战力
    optional int64 newPower         = 6;//新战力
    required int32 cost             = 7;//老等级
}

//RETURN_UPGRADE_SYNC             = 54361;//数据下发
message ReturnUpgradeSync{
    repeated ReturnUpgradeItem items        = 1; // 升级条目
    repeated ReturnUpgradeShopItem goods    = 2; // 物品兑换信息
    required int32 buyTimes                 = 3;//已经购买次数
}

//RETURN_UPGRADE_REQ              = 54362;//升级请求
message ReturnUpgradeReq{
    required ReturnUpgradeType type = 1;//升级类型
    required bool useGold           = 2;//是否用金条
}

//RETURN_UPGRADE_RESP             = 54363;//升级返回
message ReturnUpgradeResp{
    required ReturnUpgradeType type = 1;//升级类型
}

//RETURN_UPGRADE_EXCHANGE_REQ     = 54364;//商城兑换请求
message ReturnUpgradeExchangeReq{
    required int32 goodsId      = 1; // 物品ID
	required int32 exhangeTimes = 2; // 要兑换次数
}

//RETURN_UPGRADE_EXCHANGE_RESP    = 54365;//商城兑换返回
message ReturnUpgradeExchangeResp{
    required int32 goodsId      = 1; // 物品ID
	required int32 exhangeTimes = 2; // 已经兑换次数
}

//RETURN_UPGRADE_BUY_REQ          = 54366;//道具购买请求
message ReturnUpgradeBuyReq{
	required int32 buyTimes = 1; // 要购买次数
}

//RETURN_UPGRADE_BUY_RESP         = 54367;//道具购买返回
message ReturnUpgradeBuyResp{
	required int32 buyTimes = 1; // 已经购买次数
}

//商店物品兑换信息
message ReturnUpgradeShopItem
{
	required int32 goodsId      = 1; // 物品ID
	required int32 exhangeTimes = 2; // 次数
}

//科技球
message ReturnUpgradeTechItem
{
	required int32 techId		= 1; // 科技ID
	required int32 before		= 2; // 升级前
	required int32 after		= 3; // 升级后
	required int32 max			= 4; // 最高级
}

//RETURN_UPGRADE_TECH_RESP        = 54369;//科技升级列表返回
message ReturnUpgradeTechResp{
	repeated ReturnUpgradeTechItem items = 1; // 科技球
}
//-------------时间跃迁-------------=======


//-------------URL活动奖励--------------------
//URL奖励状态
message URLRewardItem{
	required int32 activityId		= 1; // 活动ID
	required bool canGet			= 2; // 是否可以领奖
}

//URL奖励同步 URL_REWARD_SYNC = 54371;//URL奖励状态
message URLRewardSync{
	repeated URLRewardItem items 	= 1; // 
}

//URL奖励获取 URL_REWARD_GET = 54372;//URL奖励获取
message URLRewardGet{
	required int32 activityId		= 1; // 活动ID
}

//-------------URL活动奖励-------------=======

//-------------机甲皮肤--------------------
message PBJijiaSkinInfo{
	optional int32 pool = 1; // 将池, 预览
	optional int64 freeTime = 2; // 免费刷新时间
	repeated int32 rewardId = 3; // 9个牌子id. 没抽的是0
	optional int32 refreshTimes = 4; // 已刷新次数, 
	optional int32 maxRefresh = 5; // 最大刷新数
	optional int32 multiple = 6; // 下次必翻倍
	optional string refreshCost = 7; // 刷新消耗
	optional string openCost = 8; // 翻牌消耗
	optional bool hasFinally = 9; // 是否已经抽中最终奖励
}

message PBJijiaSkinOpen{
	optional int32 index = 1; // 0 , 1,2, 3,4 ....
}

/**刷新回复, 展示动画用*/
message PBJijiaSkinRefreshResp{
	optional int32 pool =1; // 将池
}
//-------------机甲皮肤-------------=======

//-------------联盟回流--------------------
// 物品兑换信息
message GuildBackShopItem {
    required int32 goodsId          = 1; //物品ID
	required int32 exhangeTimes     = 2; //次数
}

// 邀请玩家信息
message GuildBackInvitePlayer{
    required string playerId        = 1; //玩家ID
    required string playeName       = 2; //玩家名字
	required int32 icon             = 3; //玩家游戏内头像
	required string pfIcon          = 4; //玩家头像
    required bool isInvited         = 5; //是否邀请
    required int64 backTime         = 6; //回归时间
	
}

// 活动信息返回 GUILD_BACK_INFO_RESP 		= 55042
message GuildBackInfoResp {
    repeated GuildBackShopItem shopItems    = 1; //物品兑换信息
	repeated GeneralExchangeTip tips        = 2; //通用兑换
    optional int32 backCount                = 3; //回流玩家数量
    optional int64 goldPool                 = 4; //金币奖池
    optional int64 vitPool                  = 5; //体力奖池
    optional int32 boxCount                 = 6; //可开宝箱次数
	optional int64 joinTime         		= 7; //加入时间
}

// 兑换请求 GUILD_BACK_EXCHANGE_REQ 	= 55043
message GuildBackExchangeReq {
    required int32 goodsId          = 1; //物品ID
	required int32 exhangeTimes     = 2; //次数
}

// 邀请请求 GUILD_BACK_INVITE_REQ 		= 55044
message GuildBackInviteReq {
    required string playerId = 1; //玩家ID
}

// 邀请返回 GUILD_BACK_INVITE_RESP 		= 55045
message GuildBackInviteResp {
    required GuildBackInvitePlayer player = 1; //邀请玩家信息
}

// 邀请列表请求 GUILD_BACK_INVITE_LIST_REQ 	= 55046
message GuildBackInviteListReq {
    required bool isSwitch = 1; //是否换一批
}

// 邀请列表返回 GUILD_BACK_INVITE_LIST_RESP = 55047
message GuildBackInviteListResp {
    repeated GuildBackInvitePlayer players = 1; //邀请玩家信息
}

//宝箱奖励请求 GUILD_BACK_BOX_REWARD_REQ = 55050;
message GuildBackBoxRewardReq {
    required bool isAll = 1; //是否全部
}
//-------------联盟回流-------------=======

//-------------泰矿提炼工厂活动--------------------
//格子状态
enum PlantSoldierFactoryItemState{
	PSFI_CLOSE 	= 1;//小奖未翻开
	PSFI_OPEN 	= 2;//小奖已翻开
	PSFI_LOCK 	= 3;//大奖未解锁
	PSFI_CAN 	= 4;//大奖可领取
	PSFI_GET 	= 5;//大奖已领取
}

//格子信息
message PlantSoldierFactoryItem{
	required int32 pos 							= 1;//位置
	optional int32 cfgId 						= 2;//物品配置id
	required PlantSoldierFactoryItemState state = 3;//格子状态
}

//商店中的商品信息
message PlantSoldierFactoryShopInfo
{
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //已购买数量
}

//活动信息
message PlantSoldierFactoryInfoResp{
	repeated PlantSoldierFactoryItem items = 1;//小奖格子信息
	repeated PlantSoldierFactoryItem bigItems = 2;//大奖格子信息
	repeated PlantSoldierFactoryShopInfo shopInfos = 3;//商店信息
	required bool isCanDraw = 4;//是否可以继续抽奖
	required int32 drawCount = 5;//今日已经抽奖次数
	required int32 drawTotalCount = 6;//累计抽奖次数
}

//领取大奖
message PlantSoldierFactoryAwardReq{
	required int32 bigPos = 1;//要领的大奖位置
}

//商店购买
message PlantSoldierFactoryShopBuyReq {
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //购买数量
}

//-------------泰矿提炼工厂活动-------------=======

//-------------破晓启程活动--------------------
//玩家信息
message NewStartPlayerInfo{
	optional string id			= 1;//玩家Id
	optional string playeName	= 2;//玩家名字
	optional int32 icon			= 3;//玩家游戏内头像
	optional string pfIcon		= 4;//玩家头像
	optional string serverId	= 5;//玩家的服务器ID
	optional int32 vipLevel		= 6;//vip等级
	optional int32 playerLevel	= 7;//指挥官等级
	optional int32 baseLevel	= 8;//基地等级
}

//奖励信息
message NewStartAwardItem{
	optional int32 day		= 1;
	optional int32 cfgId		= 2;
	optional int32 getCount		= 3;//领取了第几次
	optional int64 lastTime		= 4;//上次领取时间
}

//活动信息下发 NEW_START_INFO_RESP = 55072;
message NewStartInfoResp {
	optional NewStartPlayerInfo oldInfo 	= 1;//老服玩家信息
	optional NewStartPlayerInfo newInfo 	= 2;//新服玩家信息
	optional bool isbind 					= 3;//是否绑定了
	optional int32 curDay 					= 4;//当前是第几天
	repeated NewStartAwardItem awardItems 	= 5;//奖励信息
	optional int64 startTime 				= 6;//活动开始时间
	optional int64 endTime 					= 7;//活动结束时间
}

//请求发奖 NEW_START_AWARD_REQ = 55074;
message NewStartAwardReq {
	required int32 day = 1;//领取第几天
}


//跨服请求玩家信息(服务器自用) NEW_START_CS_INFO_REQ	= 100221
message NewStartCSInfoReq {
	required string playerId 	= 1;//老服玩家id
	required string newPlayerId = 2;//新服玩家id
	required string newServerId = 3;//新服id
}

//跨服返回玩家信息(服务器自用) NEW_START_CS_INFO_RESP	= 100222;
message NewStartCSInfoResp {
	required string playerId		= 1;//新服玩家id
	required string name			= 2;//玩家名字
	required int32 icon				= 3;//头像
	required string pfIcon			= 4;//平台头像
	required string oldPlayerId 	= 5;//老服玩家id
	required string oldServerId 	= 6;//老服id
	required int32 playerLevel 		= 7;//玩家等级
	required int32 vipLevel 		= 8;//vip等级
	required int32 baseLevel 		= 9;//主堡等级
	required int32 heroCount 		= 10;//英雄数量
	required int32 equipTechLevel 	= 11;//装备研究等级
	required int32 jijiaLevel 		= 12;//机甲等级
}
//-------------破晓启程活动-------------=======

//-------------幸运补给箱--------------------
//箱子信息
message SupplyCrateItem{
    optional int32 pos = 1;//位置（1-9）
    optional RewardItem reward = 2;//什么物品
    optional bool isGood = 3;//是否为大奖
    optional bool isDouble = 4;//是否是双倍权益
}


//联盟排行信息
message PBSupplyCrateScoreRank{
    optional int32 rank = 1;//排名
	optional int64 score = 2;//分数
	optional string guildName = 3;//联盟名字
	optional string playerName = 4;//玩家名字
	optional string guildTag = 5;//联盟简称
	optional string playerId = 6; // 玩家ID
}

//活动信息 SUPPLY_CRATE_SYNC
message SupplyCrateSync{
    required bool isCanOpen = 1;//是否可以开箱
    required bool isCanNext = 2;//是否可以下一轮
    optional SupplyCrateItem customItem = 3;//自选奖励
    repeated SupplyCrateItem openItems = 4;//已经开箱
    required int32 boxProg = 5;//联盟宝箱进度
	required int32 round = 6;//联盟宝箱进度
	optional int32 multi = 7;//倍数
	optional bool isBoxMax = 8;//是否达上限
	optional int32 boxCount = 9;//领取次数
}

//选择自定义 SUPPLY_CRATE_CHOOSE_REQ
message SupplyCrateChooseReq{
    required int32 index = 1;//第几个奖励
}

//开箱 SUPPLY_CRATE_OPEN_REQ
message SupplyCrateOpenReq{
    required int32 pos = 1;//第几个箱子
}

//购买道具 SUPPLY_CRATE_BUY_REQ
message SupplyCrateBuyReq{
    required int32 count = 1;//购买几个
}

//联盟排行榜数据返回 SUPPLY_CRATE_RANK_RESP
message SupplyCrateRankResp{
    repeated PlanetExploreScoreRank rank = 1;//排名
    optional PlanetExploreScoreRank selfRank = 2;//自己排名
}


//-------------幸运补给箱-------------=======

//-------------中部养成计划--------------------
//商店物品兑换信息
message GrowUpBoostShopItem{
	required int32 goodsId = 1; // 物品ID
	required int32 exhangeTimes = 2; // 次数
}


//每日积分记录
message GrowUpBoostDailyScoreRecord{
	required int64 recordTime = 1; //记录时间 当天0点
	required int32 taskScore = 2; //任务积分
	required int32 itemScore = 3; //道具消耗积分
}


//数据下发 GROW_UP_BOOST_SYNC
message GrowUpBoostSync{
	required int32 configUse = 1;  //配置使用ID
    required int32 itemScore = 2; //道具消耗积分
    required int32 taskScore = 3; //任务获取积分
    required int32 taskTotalScore = 4; //任务获取总
    required int32 totalScore = 5; //总积分
	required int32 scoreAchievePage = 6; //积分任务页数
	required int32 scoreAchieveFinishTerm = 7; //积分任务完成轮次
    repeated GrowUpBoostShopItem exchangeItems = 8; // 物品兑换信息
	repeated GeneralExchangeTip tips = 9; // 通用兑换红点
    repeated GrowUpBoostShopItem goods = 10; // 礼包兑换信息
	repeated GrowUpBoostItemRecord records = 11; //抵消道具数量
}

//兑换 GROW_UP_BOOST_EXCHANGE_REQ
message GrowUpBoostExchangeReq
{
    required int32 type = 1;//兑换类型，1，代币，2，礼包
	required int32 cfgId = 2; // 配置ID
	required int32 count = 3; // 次数
}


//每日积分记录请求	GROW_UP_BOOST_DAILY_SCORE_RECORD_REQ
message GrowUpBoostDailyScoreRecordResp{
	repeated GrowUpBoostDailyScoreRecord record = 2; //记录列表
}

message GrowUpBoostItemRecord{
	required int32 itemId  = 1; //道具ID
	required int32 itemNum = 2; //道具数量
}


//-------------中部养成计划-------------=======

// 大帝战兑换物品
message PBHealExchangeInfo{
	optional bool active  = 1; // 是否激活兑换
	repeated PBHealExchangeExchange exchanges    = 2;  //兑换信息
	optional string battleTime = 3; // 关联的统帅之战比赛的日期，两位看下怎么让客户端拿到这个参数？
}

//物品兑换记录
message PBHealExchangeExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}


//------------英雄祈福-------------------

message PBHeroWishInfoResp{
	required int32 chooseId        = 1;  //选择ID
	required int32 wishCount       = 2;  //祈愿数量
	required int32 achieve         = 3;  //是否收获 0没有收获 1已经收获
	required int64 achieveTime     = 4;  //可以收获的时间点
}



//选择
message PBHeroWishChooseReq{
	required int32 chooseId = 1; //选择ID
}



//------------英雄祈福-------------------

//------------独家记忆------------------

//活动信息
message PBExclusiveMemoryResp{
	required int32 openState = 1; //0未开启  1已经开启
}

//------------独家记忆------------------

//------------荣耀同享开始-----------------------
//道具捐献请求
message PBShareGloryDonateReq{
	required int32 energyType = 1; //捐献道具类型A、B
	required int32 count = 2;  //捐献道具数量
}
//玩家在本活动中的个人数据请求
message PBShareGloryPlayerInfoReq{
}
//本活动联盟数据请求
message PBShareGloryAllianceInfoReq{
}
//本活动捐献排行榜数据请求
message PBShareGloryDonateRankReq{
	required string guildId = 1;
}

//数据结构，不独立使用，本活动中的联盟能量柱数值
message PBShareGloryEnergyInfo{
	required int32 type = 1;	//联盟能量类型
	required int32 energy = 2;	//联盟能量柱当前能量值
	required int32 energyLevel = 3; //联盟能量柱当前等级
}

//本活动中的联盟数值
message PBShareGloryAllianceInfo{
	repeated PBShareGloryEnergyInfo energyInfo = 1;	//能量柱信息列表
}
//数据结构，不独立使用
message PBShareGloryItems{
	repeated string itemId = 1; //三段式道具ID
}
//数据结构，不独立使用
message PBShareGloryPlayerItems{
	required int32 energyType = 1;		//能量类型
	required PBShareGloryItems items = 2;	//三段式道具ID列表
}
//本活动中单个玩家数据
message PBShareGloryPlayerInfo{
	optional PBShareGloryAllianceInfo allianceInfo = 1;	//联盟能量AB当前能量值和等级
	repeated PBShareGloryPlayerItems monitorItem = 2;	//监控的其它活动道具列表
	repeated PBShareGloryPlayerItems monitorItemReward = 3; //监控的其它活动道具已返还的道具列表
}
//数据结构，不独立使用
message PBShareGloryPlayer{
	required string playeName = 1;		//玩家名字
	required int32 icon = 2;		//玩家游戏内头像
	required string pfIcon = 3;		//玩家头像
	required int32 donateCount = 4;		//已捐献道具数量
	required string playerId = 5;		//玩家ID
}
//排行榜数据
message PBShareGloryDonateRank{
	repeated PBShareGloryPlayer rankA = 1; //A道具捐献排行榜内玩家信息
	repeated PBShareGloryPlayer rankB = 2; //B道具捐献排行榜内玩家信息
	required int64 rankTime = 3;   //取榜时间
}
//------------荣耀同享结束-----------------------

//------------荣耀英雄降临------------
//活动信息
message PBHonourHeroBefellResp{
	required int32 oneFreeTimes = 1; //免费单抽 0 没有
	required int32 lotteryCount = 2; //抽奖次数
	required int32 luckyCount   = 3; //幸运值
	repeated int32 tips         = 4; //兑换提示
	repeated PBHonourHeroBefellExchange exchanges = 5;//兑换信息
	
}

message PBHonourHeroBefellExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}

//勾选提醒
message PBHonourHeroBefellTipsReq{
	repeated PBHHeroBefellTipAction tips = 1; //玩家勾选提醒
}


message PBHHeroBefellTipAction{
	required int32 id = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

//兑换道具
message PBHonourHeroBefellExchangeReq{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num = 2; //兑换物品的次数
}

//抽奖
message PBHonourHeroBefellLotteryReq{
	required int32 type = 1;  //1-单抽  10-10抽
}
//抽奖返回
message PBHonourHeroBefellLotteryResp{
	repeated int32 rewards = 1; //奖励列表
}
//------------荣耀英雄降临------------

//------------荣耀英雄回归开始------------
//抽奖
message PBHonourHeroReturnLotteryReq{
	required int32 type = 1;  //1=单抽  10=10抽
}

//兑换道具
message PBHonourHeroReturnExchangeReq{
	required int32 exchangeId = 1;	//兑换表的ID
	required int32 num = 2;		//兑换物品的次数
}

//勾选提醒数据结构
message PBHonourHeroReturnTip{
	required int32 id = 1;  //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}

//勾选提醒
message PBHonourHeroReturnTipsReq{
	repeated PBHonourHeroReturnTip tips = 1;
}

//兑换信息 PBHonourHeroReturnResp 协议结构体，不单独使用
message PBHonourHeroReturnExchange{
	required int32 exchangeId = 1;  //兑换表的ID
	required int32 num = 2;		//兑换物品的次数
}
//信息同步
message PBHonourHeroReturnResp{
	required int32 lotteryPage = 1;   //当前选中的抽奖页号，服务器默认 1
	required int32 lotteryCount = 2; //抽奖次数
	repeated int32 tips         = 3; //兑换提示
	repeated PBHonourHeroReturnExchange exchanges = 4;//兑换信息
	
}

//玩家抽奖自选页
message PBHonourHeroReturnLotteryPageReq{
	required int32 pageId = 1;  //玩家勾选提醒
}
//------------荣耀英雄回归结束------------


//------------道具回收功能开始------------
//勾选提醒数据结构
message PBItemRecycleTip{
	required int32 id = 1;  //玩家勾选提醒
	required bool tip = 2;  //勾选true,取消勾选false
}
//信息同步数据结构
message PBItemRecycleStruct{
	required int32 cfgId = 1;  //相关配置表ID
	required int32 count = 2;   //次数或物品数量根据不同用途，由具体协议决定
}
//给客户端玩法全部信息同步
message PBItemRecycleResp{
	repeated PBItemRecycleStruct exchangeTimes	= 1;	//积分兑换物品的当前次数，用cfgId_times,cfgId_Times
	repeated int32  tips				= 2;	//积分兑换物品勾选提示
	repeated PBItemRecycleStruct recycleItems	= 3;	//已回收换取积分的物品列表，cfgId,count
	repeated PBItemRecycleStruct redundantTimes	= 4;	//冗余道具兑换中的普通兑换次数列表，用cfgId,times
	repeated PBItemRecycleStruct redundantHighTimes	= 5;	//冗余道具兑换中的高级兑换次数列表，用cfgId,times
}

//勾选提醒请求
message PBItemRecycleTipsReq{
	repeated PBItemRecycleTip tips = 1;
}

//数据结构，不作为单独协议使用
message PBExchangeStruct{
	required int32 exchangeId = 1;	//具体功能对应的表格ID，用在不同协议里对应的表格不同
	required int32 count = 2;	//数量，同一个表格行，可以批量多个，所以这里要有个数量
}

//物品兑换积分请求，处理后服务器会回复PBItemRecycleResp
message PBItemRecycleReq{
	repeated PBExchangeStruct recycleItems = 1; //回收道具列表
}

//已兑换物品赎回请求,处理后服务器会回复PBItemRecycleResp
message PBRedemptionReq{
	repeated PBExchangeStruct redemptionItems = 1; //回收道具列表
}

//用积分兑换物品请求,处理后服务器会回复通用物品获得协议和PBIntegralSync协议同步积分
message PBEntegralExchangeItemsReq{
	required PBExchangeStruct exchangeItems = 1; //要用积分兑换的物品
}

//精炼请求
message PBRecoveryReq{
	required int32 recoveryId = 1;		//精炼表格ID
	required string requiredItem = 2;	//精炼选择的原料物品三段式
	required int32 count = 3;		//批量操作的数量，非批量为1
	required bool isOrdinary = 4;		//是否为普通精炼，普通为true高级为false
}
//------------道具回收功能结束------------


// -----------新版新手登录活动（活动ID=313）---------------

// 同步活动数据
message LoginGiftActivityInfo {
	required bool buyAdvance        = 1; // 是否已购买登录进阶礼
	required int32 loginDays        = 2; // 累计登录天数
	repeated int32 commRecievedDay  = 3; // 已领取普通奖励的天数
	repeated int32 advReceivedDay   = 4; // 已领取进阶奖励的天数
	optional int64 advanceEndTime   = 5; // 进阶礼包购买倒计时结束时间点，单位：毫秒
}

// 请求领取奖励
message LoginGiftRecieveReq {
	required int32  day    = 1;  // 传0表示一键领取所有奖励，传具体的天数表示领取某天对应栏目的奖励
    optional int32 advance = 2;  // 不传或0表示领取普通奖励，非0表示领取进阶奖励（当然这都是针对领取单个栏目的奖励来说，如果是一键领取，那所有奖励都一起发放）
}

// -----------新版新手登录活动（活动ID=313）---------------


// ----------- 双旦活动（活动ID=315）---------------

// 活动数据信息
message NewyearLotteryInfoPB
{
	optional string guildId                = 1;  // 没有传此字段表示未加入联盟
	repeated NewyearLotteryGiftInfoPB gift = 2;
}

// 双旦活动直购礼包数据
message NewyearLotteryGiftInfoPB
{
	required int32 type                     = 1;  // 类型
	required int32 selectId                 = 2;  // 自选奖励对应的配置ID，即 NewyearLotteryGiftAwardSelectReq 中的id字段
	repeated RewardItem randomRewards       = 3;  // 随机奖励
	optional int32 selfPay                  = 4;  // 自身是否已购买，0未购买，非0已购买
	optional int32 itemCount                = 5;  // 抽奖券道具数量
	repeated GiftBuyAchieveData achieveData = 6;
	optional int32 oldPayCount              = 7;  // 前一次同步的联盟内购买人数
	optional int32 latestPayCount           = 8;  // 最新的联盟内购买人数
	repeated RewardItem lotteryReward       = 9;  // 抽奖获得的奖励（还没抽时这个是空的）
	optional int32 lotteryRewardId          = 10; // 抽奖获得的奖励对应的配置ID
}

// 礼包购买成就数据
message GiftBuyAchieveData
{
	required int32 id    = 1; // 成就配置id
	required int32 val   = 2; // 进度值
	required GiftBuyAchieveState state = 3; // 状态
}

// 礼包购买成就状态
enum GiftBuyAchieveState
{
	NEWYEAR_LOTTERY_NOT_ACHIEVE			= 0; // 未达成
	NEWYEAR_LOTTERY_NOT_REWARD			= 1; // 已达成未领取
	NEWYEAR_LOTTERY_CANNOT_REWARD       = 2; // 已达成但不可领取
	NEWYEAR_LOTTERY_TOOK				= 3; // 已领取
}

// 礼包类型
enum NewyearLotteryGiftType
{
	LOTTERY_GIFT_COMMON  = 1; // 普通礼包
	LOTTERY_GIFT_ADVANCE = 2; // 高级礼包
}

// 直购礼包自选奖励的选取
message NewyearLotteryGiftAwardSelectReq
{
	required int32 id = 1;
}

// 抽奖请求
message NewyearLotteryReq
{
	required int32 type = 1;
}

// 抽奖响应
message NewyearLotteryResp
{
	required int32 type         = 1;  // 抽奖类型
	repeated RewardItem reward  = 2;  // 抽奖获得
}

// 领取成就奖励
message NewyearLotteryAchieveRewardReq
{
	required int32 id = 1;
}

// ----------- 双旦活动（活动ID=315）---------------


// ----------- 机甲玩法活动（活动ID=316）---------------

message SpaceMachineGuardActivityInfoPB
{
	required int64 guildPoints          = 1; // 联盟代币总量
	repeated GuardRecordPB guardRecord  = 2; // 联盟防守记录
	optional int32 spaceLevelMax        = 3; // 目前可挑战的舱体最高等级
	optional int32 selectLevel          = 4; // 玩家选择的等级
	optional int32 curSpaceLevel        = 5; // 已放置的舱体等级
	optional int32 stage                = 6; // 当前所处阶段
	optional int32 stageEndTime         = 7; // 当前阶段的结束时间
	optional int32 personalPoints       = 8; // 个人贡献代币点数
	optional int32 callMember           = 9; // 当日是否已发起过号召，1已发起，0未发起
	optional int32 spaceSetTimes        = 10;// 舱体已放置次数
}

// 舱体防守结果
enum MechaSpaceGuardResult
{
	SPACE_GUARD_SUCC   = 0; // 防守成功
	SPACE_GUARD_FAILED = 1; // 防守失败
	SPACE_GUARD_BREAK  = 2; // 中断
}

// 联盟防守记录
message GuardRecordPB
{
	required string  playerName           = 1; // 放置舱体的玩家名字
	required int64   placeTime            = 2; // 舱体放置的时间
	required int32   guardResult          = 3; // 舱体防守结果，0成功，1失败，2-中断
	required int32   spaceLevel           = 4; // 舱体等级
	repeated GuardRecordStagePB stageInfo = 5; // 每轮防守的详情信息
}

// 舱体防守每一轮的具体信息
message GuardRecordStagePB
{
	required int32  stage        = 1; // 轮次
	required int32  guardResult  = 2; // 防守结果，0成功，1失败，2-中断
	optional int32  mainSpaceVal = 3; // 主舱耐久度
	repeated GuildSubSpace  subSpaceVal  = 4; // 子舱耐久度
}

// 子舱信息
message GuildSubSpace
{
	required int32 id        = 1; // 子舱标识
	optional int32 spaceVal  = 2; // 子舱耐久度
}

// 联盟代币任务单元数据
message GuildCoinTaskItemPB
{
	required int32 id				= 1; // 任务id
	required int32 points 			= 2; // 已获得代币点数
	required int64 value 			= 3; // 任务完成值
}

// 联盟代币任务数据列表
message GuildCoinTaskItemsInfoSync
{
	repeated GuildCoinTaskItemPB item		= 1; // 成就项列表
	optional int32 personalPoints           = 2; // 个人贡献代币点数
	optional int64 guildPoints              = 3; // 联盟代币总量
}

// 放置舱体之前的选择舱体等级请求
message SelectSpaceLevelReq 
{
	required int32 level = 1;
}

// 放置舱体之前的选择舱体等级响应
message SelectSpaceLevelResp 
{
	required int32 level = 1;
}

// ----------- 机甲玩法活动（活动ID=316）---------------



//------------------可拆分和服通告----------------------------
message MergeAnnounceInfo{
	required int32 mergeType     = 1; //和服类型 1 和服  2 拆服
	required string serverId     = 2; //当前服务器ID
	repeated string mergeServers = 3; //服务器列表
	required int64 mergeTime     = 4; //和服时间
}

//------------------可拆分和服通告----------------------------



//-------------机甲研究所--------------------------
message PBMachineLabInfoResp{

	required int32 serverLevel    = 1;
	required int32 serverExp      = 2;
	required int32 playerLevel    = 3;
	required int32 playerExp      = 4;
	required int32 serverRewardLevel    = 5;
	required int32 playerRewardLevel    = 6;
	required int32 playerAdvRewardLevel = 7;
	required int32 buyGift              = 8;
	repeated PBMachineLabExchange exchanges = 9;  //兑换信息
	repeated int32 tips                     = 10;  //兑换提示
	repeated PBMachineLabDrop drops = 11; //掉落个数

}


//捐选道具
message PBMachineLabContributeReq{
	required int32 count = 1;  //数量
}

//捐献道具返回
message PBMachineLabContributeResp{
	required int32 count            = 1;  //数量
	required int32 serverExpAdd     = 2;  //服经验增加
	required int32 playerExpAdd     = 3;  //玩家经济增加
	required int32 stormingPointAdd = 4;  //攻坚点增加
	required int32 multVal          = 5;  //暴击倍数
	required int32 serverLevelUp    = 6;  //是否造成升级
}




//勾选提醒
message PBMachineLabTipsReq{
	repeated PBMachineLabTipAction tips = 1; //玩家勾选提醒
}


message PBMachineLabTipAction{
	required int32 id  = 1; //玩家勾选提醒
	required int32 tip = 2; //标识，1为勾上，0为去掉勾
}


//物品兑换
message PBMachineLabExchangeReq{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}

//物品兑换
message PBMachineLabExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}


//排行榜数据
message PBMachineLabRankResp{
	repeated PBMachineLabRankMember members  = 1;//排行榜成员信息
	required PBMachineLabRankMember selfRank = 2;//自己排名信息
}


//排行榜成员信息
message PBMachineLabRankMember{
	required string playerId     = 1; //玩家ID
	required int32 rankIndex     = 2; //玩家排名
	required string playerName   = 3; //玩家名称
	required int32 score         = 4; //评分
	repeated int32 personalProtectSwitch = 5; // playerId那个player对应的个保法开关
	optional string guildTag = 6; //联盟简称
}

//掉落个数
message PBMachineLabDrop{
	required int32 dropType  = 1; //掉落方式
	required int32 dropCount = 2; //掉落个数
}

//-------------机甲研究所--------------------------

// 周年庆称号活动信息
message DressCollectionInfoPB {
	repeated int32 collectedId = 1;  // 已集齐的装扮id（也包括头像框id）
}

//周年庆庆典基金活动信息
message CelebrationFundInfoPB {
	required int32 fundLevel = 1;// 档位
	required int32 levelScore = 2; // 档位积分
	required int32 buyOver = 3; //是否买完 （0：没买完， 1：买完了）
}

//周年庆庆典基金购买积分请求
message CelebrationFundBuyScoreReq {
	required int32 score = 1; //购买积分数
}

// SSS委任英雄产出活动：百炼成钢
message PBAppointGetSync{
	optional int32 value1 = 1; // 属性1
	optional int32 value2 = 2; // 属性2
	optional int32 value3 = 3; // 属性3
	optional int32 trainCnt = 4; // 训练次数
}

message PBAppointGetRandReq{
	optional int32 times = 1; // 抽几次
}

message PBAppointGetRandResp{
	optional int32 times = 1; // 抽几次
	repeated RewardItem rewardItem = 2; //奖励
	repeated PBAppointGetBox boxs = 3; // 抽得属性
}

message PBAppointGetBox{
	optional int32 index = 1; // 属性号  4 = 失败
	optional int32 val = 2; 
}


//金币觅宝锁定最高档
message GoldBabyLockTopGradeReq{
	required int32 poolId = 1; //奖池ID
}

//金币觅宝搜寻请求
message GoldBabyFindReq{
	required int32 poolId = 1; //奖池ID
}


//金币觅宝搜寻响应
message GoldBabyFindResp{
	required int32 itemId = 1; //奖励ID
	required int32 magnification = 2; //倍率
	required int32 isLock = 3; //是否锁定最高档
	required int32 poolId = 4; //奖池ID
}

//金币觅宝购买道具
message GoldBabyBuyTicketReq{
	required int32 count = 1; //购买数量
}

//金币觅宝奖池PB
message GoldBabyPoolPB{
	required int32 poolId = 1; //奖池ID
	required int32 poolLevel = 2; //奖池当前等级
	required int32 times = 3; //奖池这轮的抽取次数
	required int32 resetTimes = 4; //奖池已重置次数
	required int32 lockTopGrade = 5; //1：锁定， 0：不锁定
	required int32 findOver = 6; //是否抽完
	repeated int32 rewardIds = 7; //奖池的内容ID, 第0号是最高档的ID
}

//金币觅宝同步信息
message GoldBabyInfoSyncPB{
	repeated GoldBabyPoolPB pools = 1; //3个奖池
	required int32 buyTimes = 2; //道具已购买次数
	required int32 findTimes = 3; //总共抽取次数
}


/////////////////// 新兵作训  /////////////////////

// 新兵作训的类型
enum NoviceTrainType 
{
	TYPE_HERO    = 1;  // 英雄
	TYPE_EQUIP   = 2;  // 装备兵种
}

// 新兵作训活动信息
message NoviceTrainInfoPB {
	required NoviceTrainType type = 1;  // 作训类型
	required int32 selectId       = 2;  // 选择的英雄或装备ID（对应的配置ID）
	required int32 times          = 3;  // 当前可用的作训次数
	required int32 totalTimes     = 4;  // 总的作训次数
	repeated int32 boughtGiftId   = 5;  // 已买过的礼包 
	optional int32 gachaTimes     = 6;  // 英雄招募或装备打造的次数累计（转换成作训次数后剩余的零头次数）
	optional int32 gachaTimesTotal = 7; // 英雄招募或装备打造的总次数（本期活动内总累计次数）
}

// 新兵作训活动数据
message NoviceTrainActivityInfo
{
	repeated NoviceTrainInfoPB info  = 1;  
	required int32 specialServer     = 2;  // 是否是专服，1是0否
}

// 选择或切换英雄（选择或切换装备兵种）请求
message NoviceTrainSelectReq
{
	required NoviceTrainType type = 1;  // 作训类型
	required int32 selectId       = 2;  // 英雄或装备兵种对应的配置ID
}

// 选择或切换英雄（选择或切换装备兵种）请求响应 201138
message NoviceTrainSelectResp
{
	required NoviceTrainType type = 1;  // 作训类型
	required int32 selectId       = 2;  // 英雄或装备兵种对应的配置ID
}

// 作训请求
message NoviceTrainReq {
   required NoviceTrainType type = 1;  // 作训类型
   required int32  times         = 2;  // 作训次数
}

// 作训请求响应
message NoviceTrainResp {
	required NoviceTrainType type  = 1;  // 作训类型
    repeated RewardItem rewardItem = 2;  // 奖励
}

// 购买礼包请求
message NoviceGiftBuyReq {
   required NoviceTrainType type = 1;  // 作训类型
   required int32  giftId        = 2;  // 礼包ID
}

// 购买礼包请求响应
message NoviceGiftBuyResp {
   required NoviceTrainType type = 1;  // 作训类型
   required int32  giftId        = 2;  // 礼包ID
}

// 作训记录数据
message NoviceTrainRecord {
	required int64 time   = 1;  // 时间
	required int32 itemId = 2;  // 获得的物品ID
	required int32 count  = 3;  // 获得的物品数量
}

// 作训记录数据请求
message NoviceTrainRecordReq {
	required NoviceTrainType type = 1;  // 作训类型
}

// 作训记录数据请求应答
message NoviceTrainRecordResp {
	required NoviceTrainType type    = 1;  // 作训类型
	repeated NoviceTrainRecord data  = 2;  // 作训记录数据
}

message DirectGiftInfo{
	repeated DirectGiftItem items = 1;//礼包信息
}
message DirectGiftItem {
	required int32 id = 1;//礼包ID
	required int32 times = 2; //礼包已购买次数
}

///////////////////////////////////////////////////////////////////

///////////////////// 星能探索 /////////////////////////////

//星能探索活动信息
message PlanetExploreInfo{
   optional PlanetExploreScoreRank myRank     = 1;
   repeated PlanetExploreScoreRank personRank = 2;
   optional int32 itemCount             = 3; //我的探索币个数
   optional int64 myScore               = 4; //我的探索积分数
   optional int64 serverScore           = 5; //全服探索积分数
   optional int32 serverScoreRemainder  = 6; //积分进度（余数）
   optional int32 serverScoreAdd        = 7; //当前新增积分
   optional int32 pointCount            = 8; //星能锅数量
   optional int32 exploreProgress       = 9; //探索进度
   optional int64 serverScoreLast       = 10; //上期积分
   optional int32 collectablePointCount = 11; //可采星能锅
   repeated PlanetPointInfo planetPoint = 12; //锅点信息
   optional int64 nextRefreshTime       = 13; //下一次刷出星能矿点的时间
   optional int64 pointDispearTime      = 14; //锅点消失时间（如果锅点消失时间已过，则不发此字段）
   optional int32 exploreTimes          = 15; //探索次数
}

//星能锅点信息
message PlanetPointInfo{
   required int32 posX = 1; 
   required int32 posY = 2; 
   optional int32 remainCount  = 3; //剩余容量
   optional int32 collectCount = 4; //我已采集
}

//个人采集信息
message PersonalCollectInfo{
	required int32 posX = 1; 
    required int32 posY = 2;
    optional int64 collectTime = 3;  //采集时间
	optional int32 collectCount = 4; //采集数量
}

//星能锅刷新信息
message PlanetPointRefreshInfo{
	optional int64 refreshTime        = 1; //刷新时间
    repeated PlanetPointInfo planetPoint  = 2; //锅点信息
}


//星能探索排行信息
message PlanetExploreScoreRank{
    optional int32 rank = 1;
	optional int64 score = 2;
	optional string guildName = 3;
	optional string playerName = 4;
	optional string guildTag = 5;
	optional string playerId = 6; // 玩家ID
}

//购买探索道具
message PlanetExploreBuyItemReq{
	required int32 count = 1; //请求购买的道具数量
}

//探索抽奖
message PlanetExploreReq{
	required int32 timesNum = 1; //点一次探索批量抽奖的次数
}

//挖掘记录
message PlanetCollectInfoSync{
	repeated PlanetPointRefreshInfo refreshInfo = 1; //世界刷新记录
    repeated PersonalCollectInfo collectInfo    = 2; //个人采集记录
}

///////////////////// 星能探索 /////////////////////////////


///////////////////// 打靶活动 /////////////////////////////


//数据下发 SHOOTING_PRACTICE_PAGE_INFO_RESP
message PBShootingPracticePageInfoResp{
	required int32 gameCount = 1;  //可玩次数
	required int32 score     = 2;  //游戏积分
    repeated PBShootingPracticeItem exchangeItems = 3; // 物品兑换信息
	repeated GeneralExchangeTip tips              = 4; // 通用兑换红点
	required int32 buyGameDaily                   = 5; //每日购买游戏次数
 
}

//打靶活动游戏结束,上报结果 SHOOTING_PRACTICE_GAME_OVER_REQ
message PBShootingPracticeOverReq{
	required int64 startTime = 1; //游戏开始时间
	required int64 overTime  = 2; //游戏结束时间
	repeated PBShootingPracticeAction actions = 3; //射击行为列表
}

//打靶活动游戏结束,上报结果 SHOOTING_PRACTICE_GAME_OVER_RESP
message PBShootingPracticeOverResp{
	required bool success    = 1;
	required int64 startTime = 2; //游戏开始时间
	required int64 overTime  = 3; //游戏结束时间
	required int32 score     = 4; //总分
	required int32 rank      = 5; //名次
	
}

//购买游戏次数 SHOOTING_PRACTICE_BUY_GAME_COUNT
message PBShootingPracticeBuyGameCountReq{
	required int32 count = 1; //购买次数
}

//兑换 SHOOTING_PRACTICE_EXCHANGE_ITEM
message PBShootingPracticeExchangeReq{
	required int32 cfgId = 1; // 配置ID
	required int32 count = 2; // 次数
}

//排行榜返回SHOOTING_PRACTICE_RANK_RESP，SHOOTING_PRACTICE_RANK_REQ
message PBShootingPracticeRankResp{    
	required PBShootingPracticeScoreRank self  = 1; //玩家自己的排行
	repeated PBShootingPracticeScoreRank ranks = 2; //排行榜列表
}

message PBShootingPracticeBarrageResp{
	repeated PBShootingPracticeScoreRank barrages = 1; //弹幕列表
}

//商店物品兑换信息
message PBShootingPracticeItem{
	required int32 goodsId      = 1; // 物品ID
	required int32 exhangeTimes = 2; // 次数
}



//打靶活动射击行为
message PBShootingPracticeAction{
	repeated int32 hitIds  = 1;   //命中个数
	repeated int32 scores  = 2;  //积分
	required int32 hitTimeAdd           = 3; //命中特殊飞艇时间增加
	required int32 hitBulletAdd         = 4; //命中特殊飞艇子弹增加
	required int32 probabilityBulletAdd = 5; //几率增加子弹个数
}


//排行榜成员信息
message PBShootingPracticeScoreRank{
    optional int32 rank        = 1;  //排行
	optional int64 score       = 2; //分数
	optional string guildName  = 3;
	optional string playerName = 4;
	optional string guildTag   = 5;
	optional string playerId   = 6; // 玩家ID
}


///////////////////// 打靶活动 /////////////////////////////


///////////////////// 每日必买任务专用活动 /////////////////////////////

message PBDailyBuyConfigResp{
	required int64 timeLimit = 1; //限制时间
	repeated PBDailyBuyConfigAchieve achieves = 2; //成就配置数据

}

message PBDailyBuyConfigAchieve{
	required int32 achieveId        = 1; //ID
	required int32 conditionType    = 2; //类型
	required string conditionValue  = 3; //条件类型
	required string rewards         = 4; //奖励
}


message PBDailyBuyInfoResp{
	required int32 achieveItemCount  = 1;  //道具获得个数
	required int64 refreshTime       = 2;  //刷新时间
	repeated AchieveItemPB achieves  = 3;  //成就列表
}


message PBDailyBuyAchieveRewardTakeReq{
	required int32 achieveId = 1; //宝箱ID
}




///////////////////// 每日必买任务专用活动 /////////////////////////////


///////////////////// 呱呱乐活动 /////////////////////////////


//活动信息
message PBLotteryTicketPageResp{
	required int32 assistApplyCnt        = 1; // 邀请代刮数量
	repeated PBLotteryTicketGiftBuy buys   = 2; //礼包购买情况
	repeated PBLotteryTicketAssistApply assistApply    = 3;  //我的发起
	repeated PBLotteryTicketAssistApply assistAchieve  = 4;  //我的受邀
}


//代刮页面信息
message PBLotteryTicketAssistPageResp{
	repeated PBLotteryTicketFriendAssist friendAssist  = 1;  //好友代刮数量
}


//刮奖
message PBLotteryTicketUseReq{
	required int32 ticketIndex = 1; //客户端带上来的ID，标识刮卡的位置
}

//刮奖结果返回
message PBLotteryTicketUseResp{
	required PBLotteryTicketAssistRlt rlt = 1;  //刮奖结果
	required int32 ticketIndex = 2; //客户端带上来的ID，标识刮卡的位置
}

//我的刮奖记录
message PBLotteryTicketUseRecordResp{
	repeated PBLotteryTicketAssistRlt rlts = 1; // 刮奖结果列表
}

//查找玩家信息请求
message PBLotteryTicketAssistSearchReq{
	required string name =1; //玩家名字
}

//查找玩家返回
message PBLotteryTicketAssistSearchResp{
	repeated PBLotteryTicketFriendAssist friendAssist =1; //玩家信息
}


//代刮申请请求
message PBLotteryTicketAssistSendReq{
	required string assistId = 1; //求助玩家ID
	required int32 count     = 2; //数量
}


//代刮申请返回
message PBLotteryTicketAssistSendResp{
	required string assistId   = 1; //被邀请玩家ID
	required int32 assistCoun  = 2; //剩余次数
}

//代刮请求
message PBLotteryTicketAssistReq{
	required string applyId   = 1;  //代刮申请ID
	required int32 ticketIndex = 2;  //客户端带上来的ID，标识刮卡的位置
}

//代刮结果返回
message PBLotteryTicketAssistResp{
	required PBLotteryTicketAssistRlt rlt = 1;  //刮奖结果
	required int32 ticketIndex            = 2;  //客户端带上来的ID，标识刮卡的位置
}



//代刮请求拒绝
message PBLotteryTicketAssistRefuseReq{
	required string applyId = 1;  //代刮申请ID
}


//代刮记录请求
message PBLotteryTicketAssistRecordReq{
	required string applyId = 1; // 代刮申请ID
}

//代刮记录返回
message PBLotteryTicketAssistRecordResp{
	repeated PBLotteryTicketAssistRlt rlts = 1; // 刮奖结果列表
}

//申请更新
message PBLotteryTicketAssistApplyUpdateResp{
	required PBLotteryTicketAssistApply rlts = 1; // 申请更新列表
}

//受邀更新
message PBLotteryTicketAssistAchieveUpdateResp{
	required PBLotteryTicketAssistApply rlts = 1; // 受邀更新列表
}

//弹幕请求
message PBLotteryTicketBarrageResp{
	repeated PBLotteryTicketBarrage barrage = 1; //弹幕列表 
}



//礼包购买
message PBLotteryTicketGiftBuy{
    required int32 giftId    = 1; //礼包ID
	required int32 buyCount   = 2; //已经够买的次数
}


//好友帮助信息
message PBLotteryTicketFriendAssist{
	required string playerId       = 1;  //玩家ID
	required string playeName      = 2; //玩家名字
	required int32 assistLastCount = 3; //受邀剩余次数
	optional string guildName      = 4; //联盟名称
	optional string guildTag       = 5; //联盟简称
    optional string pfIcon         = 6; //头像
	optional int32 icon            = 7;	//头像
}


//代刮邀请
message PBLotteryTicketAssistApply{
	required string applyId            = 1;  //唯一ID
	required string senderId           = 2; //玩家ID
	optional string senderName         = 3; //玩家名字
	optional string senderGuildName    = 4; //联盟名称
	optional string senderGuildTag     = 5; //联盟简称
	optional int32 senderIcon         = 6; //头像
	optional string senderPfIcon       = 7; //头像
	required string assistId           = 8; //玩家ID
	optional string assistName         = 9; //玩家名字
	optional string assistGuildName    = 10; //联盟名称
	optional string assistGuildTag     = 11; //联盟简称
	optional int32 assistIcon         = 12; //头像
	optional string assistPfIcon       = 13; //头像
	required int32 lotteryTicketCount    = 14; //总数量
	required int32 lotteryTicketUseCount = 15; //已经刮的数量
	required int64 applyTime  = 16; //发起时间
	required int64 outTime    = 17;  //失效时间
	required int64 refuseTime = 18;  //拒绝时间
	required int32 sendReward = 19; //0 没有发奖  1 已经发帮刮奖励
}

//刮奖结果
message PBLotteryTicketAssistRlt{
	required string rltId      = 1; //唯一ID
	required int64 lotteryTime = 2; //开奖时间
	repeated PBLotteryTicketReward rewards  = 3; //奖励配置ID
}

message PBLotteryTicketReward{
	required int32 reward    = 1;
	required int32 showNum   = 2;
	required int32 showCount = 3;
}
//刮刮乐弹幕
message PBLotteryTicketBarrage{
	required string playerName = 1; //玩家名称
	required int32 rewardId    = 2; //中奖ID
	required int32 assist      = 3; //是否是帮刮

}

///////////////////// 呱呱乐活动 /////////////////////////////


///////////////////// 泰能超武投放活动 begin /////////////////////////////

message PBPlantWeaponActivityInfo
{
	required int32 turnCount       = 1; //第几轮抽奖
	required int32 drawTimes       = 2; //当前轮次下连续抽奖次数
	required int32 giveupTimes     = 3; //当前轮次下连续放弃次数
	optional int64 cooldownTime    = 4; //连续放弃多次后冷却开始时间
	required int32 inspireProgress = 5; //灵感进度值
	required int32 consumeCount    = 6; //抽奖连续消耗物品数量
	repeated string awardItems     = 7; //当前已经随出的奖励内容三段式(即下次点研究将获得的物品)
	required int32 disCount        = 8; //当前已经随出的折扣数（即下次点研究消耗物品的折扣）
	repeated PBPlantWeaponShopItem shopItem = 9; // 商店物品已购买次数信息
	optional int32 recieveToday    = 10; //当日是否领取过免费奖励：1已领取，0未领取
	optional int32 choosePlantWeapon = 11; //已选择的超武id：【研究灵感】进度达满值时赠送对应的超武激活道具
}

// 泰能超武商店购买信息
message PBPlantWeaponShopItem
{
	required int32 shopId    = 1; //商品ID
	required int32 count     = 2; //已购买数量
}

// 泰能超武商店购买请求（直购类型的商品购买，不走此协议，而是走通用的道具直购购买协议）
message PlantWeaponShopBuyReq
{
	required int32 shopId   = 1; // 商品id
	required int32 count    = 2; // 购买数量
}

// 选择对应超武请求：【研究灵感】进度达满值时赠送对应的超武激活道具
message PlantWeaponChooseReq
{
	required int32 plantWeaponId     = 1; // 超武ID
}

///////////////////// 泰能超武投放活动 end /////////////////////////////





//----------星海投资 -----------



//页面信息
message PBStarInvestPageInfo{
	required int64 buyEndTime                   = 1; //购买截至时间
	repeated int32 dayScore                     = 2; //每日积分信息1-7天每日任务积分
	repeated PBStarInvestBufGift buyGifts       = 3; //已购买的基金信息
	repeated PBStarInvestFreeGift freeGifts     = 4; //免费礼包
	repeated PBStarInvestExploreCell cells      = 5; //探索栏位
	required int32 cellAdvance                  = 6; //栏位等级 0普通  1高阶
	required int32 speedItemBuyCount            = 7; //购买加速次数
}


//领取奖励 直购礼包
message PBStarInvestTakeBuyRewardReq{
	required int32 id = 1; 			//购买礼包的id
}


//领取奖励 免费礼包
message PBStarInvestTakeFreeRewardReq{
	required int32 id = 1; 			//礼包的id
}


//开始探索
message PBStarInvestExploreStartReq{
	required int32 id = 1; 			//栏位ID
}

//探索加速
message PBStarInvestExploreSpeedReq{
	required int32 id = 1; 			//栏位ID
}


//探索加速-使用剩余全部加速道具
message PBStarInvestExploreUseAllSpeedReq{
	required int32 id = 1; 			//栏位ID
}



//领取探索奖励
message PBStarInvestExploreTakeReq{
	required int32 id = 1; 			//栏位ID
}

//购买加速道具
message PBStarInvestBuySpeedItemReq{
	required int32 count = 1; 			//数量
}

//宝箱记录
message PBStarInvestExploreRecordResp{
	repeated PBStarInvestExploreRecord records = 1; //记录列表
}

//探索栏位
message PBStarInvestExploreCell{
	required int32 cellId    = 1; //栏位ID
	required int32 level     = 2; //栏位等级 0未开放 1开放
	required int64 startTime = 3; //开始探索时间
	required int64 endTime   = 4; //结束时间
	required int32 boxId     = 5; //箱子ID
	required int32 advance   = 6; //是否是升级栏位0普通 1升级
}



//免费礼包
message PBStarInvestFreeGift{
	required int32 giftId  = 1; 			//免费礼包ID
	required PBStarInvestFreeGfitState buyState  = 2; 	//状态
}


//直购礼包
message PBStarInvestBufGift{
	required int32 buyId  = 1; 			//已购买的基金种类
	required PBStarInvestBuyGiftState buyState  = 2; 	//基金购买状态
}


//领取探索宝箱记录
message PBStarInvestExploreRecord{
	required int32 boxId   = 1;     //宝箱ID
	required int64 time    = 2;     //领取时间
	required int32 advance = 3;     //是否是升级栏位0普通 1升级
	required int32 rewardIndex = 4; //具体奖励ID
}

enum PBStarInvestFreeGfitState
{
	FREE_CAN_TAKE = 1; //可领取
	FREE_TAKE    = 2; //已领奖
}

enum PBStarInvestBuyGiftState
{
	GITF_BUY = 1;   	//已购买
	GIFT_REWARD = 2; //已领奖
}


/************** 超武返场活动360 *****************/

//超武返场活动信息
message PBPlantWeaponBackInfo {
	required int32  drawTimes = 1; //总抽奖次数
	required int32  freeTimes = 2; //当日免费抽奖次数
	repeated PWBShopInfo shopInfo = 3; //商店商品信息
	repeated GeneralExchangeTip tips  = 4; // 通用兑换红点
}

message PWBShopInfo
{
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //已购买数量
}

//超武返场活动抽奖请求
message PlantWeaponBackDrawReq {
	required int32 type  = 1; //抽奖类型：0-单抽（免费也是单抽），1-十连抽
}

//超武返场活动抽奖返回
message PlantWeaponBackDrawResp {
	required int32 type             = 1; //抽奖类型：0-单抽（免费也是单抽），1-十连抽
	optional int32 exchanged        = 2; //是否存在超武碎片转商店代币的过程：1是0否
	repeated RewardItem reward      = 3; //原始获得
	repeated RewardItem finalReward = 4; //最终获得
}

//超武返场活动商店购买
message PlantWeaponBackShopBuyReq {
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //购买数量
}

/************** 超武返场活动360 *****************/


/************** 新春头奖专柜活动361 *****************/

//新春头奖专柜活动信息
message PBBestPrizeInfo {
	repeated BigPoolInfoPB bigPoolInfo          = 1; //大奖池信息
	repeated BestPrizeShopInfo shopInfo         = 2; //商店商品信息
	repeated BestPrizeExchangeInfo exchangeInfo = 3; //积分兑换信息
	repeated GeneralExchangeTip tips            = 4; //通用兑换红点
	repeated string serverId                    = 5; //分组包含的区服
	optional int32 playerCount                  = 6; //分组服务器抽奖人次
	optional int32 drawConsume                  = 7; //本期活动累计消耗抽奖券的数量
	repeated PoolDrawRecordPB drawRecord        = 8; //抽奖记录
	optional int32 termId                       = 9; //活动期数
	optional int64 nextAddPoolTime              = 10; //下一次补箱子的时间点
	optional int64 groupFinishTime              = 11; //分组结束时间（在这个时间点之前，客户端不让点开分组信息）
	optional int32 groupUnfinish                = 12; //还未完成分组（1未完成，0已完成）未完成分组即值为1的情况下客户端按策划给定的信息展示
	repeated BigPoolBigAwardPB bigAwardInfo     = 13; //各个大奖池下抽奖获得大奖的信息
}

//大奖池抽中大奖信息
message BigPoolBigAwardPB
{
	required int32 bigPoolId     = 1; //大奖池id
	required int32 bigAwardTimes = 2; //获得最终奖或一等奖的次数
}

//单个大奖池
message BigPoolInfoPB
{
	required int32 bigPoolId           = 1; //大奖池id
	repeated SmallPoolInfoPB smallPool = 2; //小奖池信息列表
	optional int32 smallPoolCnt        = 3; //小奖池数量
}

//单个小奖池
message SmallPoolInfoPB
{
	required int32 smallPoolId         = 1; //小奖池id
	repeated PoolAwardInfoPB awardInfo = 2;
	optional int32 totalDrawTimes      = 3; //这个小池子总共被抽了多少次了（跟配置对比，如果这个小池子抽的总次数满了，表明这个池子被抽空了，此时awardInfo是空的；如果还没满，awardInfo中已有的数据表示已经抽过的，没有的表示还没抽过）
}

//奖池中的奖励
message PoolAwardInfoPB
{
	required int32 cfgId     = 1; //奖励配置ID
	optional int32 drawTimes = 2; //已抽次数
}

//抽奖记录
message PoolDrawRecordPB
{
	optional int64 time        = 1; //抽奖时间
	optional string serverId   = 2; //抽奖玩家所在区服id
	optional string playerName = 3; //抽奖玩家名字
	optional int32 bigPoolId   = 4; //大奖池id
	optional int32 smallPoolId = 5; //小奖池id
	optional int32 type        = 6; //奖励类型：0-最终奖，1-A奖
}

//请求大奖池信息
message BestPrizeBigPoolReq
{
	required int32 poolId  = 1; //大奖池id
}

//请求大奖池信息返回
message BestPrizeBigPoolResp
{
	required BigPoolInfoPB poolInfo  = 1; //大奖池信息
}

//商店中的商品信息
message BestPrizeShopInfo
{
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //已购买数量
}

//积分兑换的商品信息
message BestPrizeExchangeInfo
{
	required int32 exchangeId  = 1; //兑换商品配置ID
	required int32 count       = 2; //已兑换数量
}

//新春头奖专柜活动抽奖请求
message BestPrizeDrawReq {
	required int32 bigPoolId    = 1; //大奖池id
	required int32 smallPoolId  = 2; //小奖池id
	required int32 times        = 3; //抽取次数
	repeated int32 changeRewardId = 4; //哪些奖励需要转换成积分
	optional int32 changeLast     = 5; //最终奖是否要转换成积分，1是0否
}

//新春头奖专柜活动抽奖返回
message BestPrizeDrawResp {
	required int32 bigPoolId        = 1; //大奖池id
	required int32 smallPoolId      = 2; //小奖池id
	repeated RewardItem reward      = 3; //原始获得
	repeated RewardItem finalReward = 4; //最终获得
	optional int32 changePoints     = 5; //转换获得的积分数量
	repeated DrawRewardPB drawReward = 6; //抽得的奖励数量
}

//抽得奖励数量
message DrawRewardPB
{
	required int32 cfgId      = 1; //奖励配置id
	required int32 count      = 2; //数量
}

//新春头奖专柜活动商店购买
message BestPrizeShopBuyReq {
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //购买数量
}

//新春头奖专柜活动积分兑换
message BestPrizeExchangeReq {
	required int32 exchangeId  = 1; //兑换商品配置ID
	required int32 count       = 2; //购买数量
}

/************** 新春头奖专柜活动361 *****************/



/************** 秘境寻宝活动363 *****************/

//活动数据
message QuestTreasureInfoSync{
	required QuestTreasureGameData gameData  = 1; //游戏数据
	repeated QuestTreasureShopData shopDatas = 2; //积分兑换信息
	repeated GeneralExchangeTip tips         = 3; //通用兑换红点
	required int32 boxScoreTotal             = 4; //当前宝箱总积分
	required int32 finishCount               = 5; //完成多少次
}


//游戏数据
message QuestTreasureGameData{
	required QuestTreasureGamePos rolePos   = 1; //当前所在坐标
	repeated QuestTreasureGamePos choosePos = 2; //路径坐标
	repeated QuestTreasureGameBox boxs      = 3; //宝箱
	required int32 randomNum                = 4; //上次随机数
}

//商店数据
message QuestTreasureShopData
{
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //已购买数量
}

//宝箱
message QuestTreasureGameBox{
	required int32 boxId                  = 1; //宝箱ID
	required QuestTreasureGamePos pos     = 2; //当前所在坐标
}

//坐标
message QuestTreasureGamePos{
	required int32 x = 1; 
	required int32 y = 2;
}


//宝箱奖励
message QuestTreasureGameBoxAchieve{
	required QuestTreasureGameBox box = 1;
	repeated RewardItem items         = 2; //获得的奖励数量
	required int32 boxScore           = 3; //宝箱获得积分
	required int32 boxScoreTotal      = 4; //当前宝箱总积分
}




//游戏路线选择-请求 返回通用成功，刷新界面
message QuestTreasureGamePointChooseReq{
	repeated QuestTreasureGamePos choosePos = 1; //路径坐标
}


//摇骰子返回-返回
message QuestTreasureGameWalkRandomResp{
	repeated QuestTreasureGamePos passPos            = 1; //经过的路线
	repeated QuestTreasureGameBoxAchieve boxAchieves = 2; //宝箱获取数量
	required bool gameOver                           = 3; //是否游戏结 
	required int32 randomNum                         = 4; //点数
}

//购买骰子-请求 返回通用成功
message QuestTreasureGameRandomItemBuyReq{
	required int32 buyCount = 1; //购买数量
}

//商店购买-请求 返回通用成功，刷新界面
message QuestTreasureShopBuyReq{
	required int32 shopId   = 1; //商品ID
	required int32 buyCount = 2; //购买数量
}




/************** 秘境寻宝活动363 *****************/


/************** 潜艇大战活动364 *****************/


//活动数据
message SubmarineWarInfoSync{
	required int32 passLevel   = 1; //通过的最大关卡
	required int32 scoreTotal  = 2; //总分
	required int32 gameCount   = 3; //剩余游戏次数
	required int32 buyCount    = 4; //已经购买的次数
	repeated SubmarineWarShopData exchangeShopDatas   = 5; //积分兑换信息
	repeated SubmarineWarShopData skillShopDatas      = 6; //积分兑换信息
	repeated GeneralExchangeTip tips                  = 7; //通用兑换红点
	required int32 gameMaxLevel                       = 8; //游戏最大通关
	required int32 gameMaxScore                       = 9; //游戏最大通关
	optional SubmarineWarGameData curGame             = 10; //当前游戏
	repeated string servers                           = 11; //同组服务器
	required SubmarineWarOrder orderData              = 12; //战令数据
}


//游戏数据
message SubmarineWarGameData{
	required int64 startTime                = 1; //开始时间
	required int32 skillItemId              = 2; //技能道具ID
	repeated SubmarineWarGameStage stages   = 3; //通过的关卡
}

//游戏关卡
message SubmarineWarGameStage{
	required int32 stageId   = 1; //关卡ID
	required int32 case      = 3; //0失败 1手动  2扫荡 
	required int32 score     = 2; //关卡分数
	required int64 stageTime = 4; //关卡记录
	repeated int32 useItem   = 5; //技能道具使用
	required int32 useItemCD = 6; //道具CD
	repeated SubmarineWarGameMonsterKill kills = 7; //杀怪数量
}

//关卡杀怪
message SubmarineWarGameMonsterKill{
	required int32 monsterId = 1; //怪物ID
	required int32 count     = 2; //击杀个数 
}

//商店数据
message SubmarineWarShopData
{
	required int32 shopId  = 1; //商品id
	required int32 count   = 2; //已购买数量
}


// 战令活动基础数据
message SubmarineWarOrder{
	required int32 level		    = 1;	// 战令等级
	required int64 exp			    = 2;	// 经验值
	optional int32 authorityId	    = 3;	// 进阶id
	optional int32 buyLevelCount	= 4;	// 本周已购买次数
	repeated int32 rewardNormalLevel   = 5;  //普通奖励领取等级
	repeated int32 rewardAdvancedLevel = 6;  //进阶奖励领取等级
}






//游戏开始请求
message SubmarineWarGameStartReq{
	required int32 type = 1; //1手动开始 2扫荡开始
	required int32 skillItemId = 2; //技能道具ID
}

//游戏开始返回
message SubmarineWarGameStartResp{
	required SubmarineWarGameData game = 1; //游戏数据
}

//游戏通过关卡请求
message SubmarineWarGameStagePassReq{
	required SubmarineWarGameStage stage = 1; //关卡数据
}

//游戏通过关卡返回
message SubmarineWarGameStagePassResp{
	required bool over         = 1; //游戏是否结束
	optional int32 nextStage   = 2; //下一关
	optional int32 overStage   = 3; //结束关卡
	optional int32 win         = 4; //是否胜利
	optional int32 score       = 5; //最终得分
	optional int32 rank        = 6; //排名
	repeated RewardItem items  = 7; //奖励
	
}


//购买游戏次数 返回通用成功，刷新界面
message SubmarineWarGameBuyReq{
	required int32 buyCount = 1; //购买数量
}

//商店购买-请求 返回通用成功，刷新界面
message SubmarineWarShopBuyReq{
	required int32 shopId   = 1; //商品ID
	required int32 buyCount = 2; //购买数量
}


//技能道具购买-请求 返回通用成功，刷新界面
message SubmarineWarSkillItemBuyReq{
	required int32 itemId   = 1; //商品ID
	required int32 buyCount = 2; //购买数量
}

//排行榜返回
message SubmarineWarRankResp{    
	required PBSubmarineWarRank self  = 1; //玩家自己的排行
	repeated PBSubmarineWarRank ranks = 2; //排行榜列表
}

message SubmarineWarBarrageResp{
	repeated PBSubmarineWarRank barrages = 1; //弹幕列表
}


//战令领奖
message SubmarineWarOrderRewardReq{    
	required int32 level  = 1; //等级  如果为0表示全领
}


// 购买战令等级
message SubmarineWarOrderBuyLevelReq{
	required int32 level = 1;
}


//排行榜成员信息
message PBSubmarineWarRank{
    optional int32 rank        = 1;  //排行
	optional int32 level       = 2;
	optional int64 score       = 3;  //分数
	
	optional string playerId   = 4; //玩家ID
	optional string serverId   = 5; //玩家的服务器ID
	optional string playerName = 7; //名称
	optional string guildName  = 6; //联盟名称
	optional string guildTag   = 8; //联盟简称

}


/************** 潜艇大战活动364 *****************/


//-------------首充活动复刻3------------------------
enum FirstRechargeThreeState{
    FRT_NOT    =   1;//未激活
    FRT_ACTIVE =   2;//已激活
    FRT_CAN    =   3;//已达成
    FRT_GET    =   4;//已领取
}

//单天奖励状态
message FirstRechargeThreeInfo{
    required int32 id						= 1; //配置id
    required int64 waitTime					= 2; //可领奖时间戳
    required FirstRechargeThreeState state	= 3;//状态
}

//同步活动信息
message FirstRechargeThreeSync{
    repeated FirstRechargeThreeInfo infos	= 1;//每天状态
	required int32 rechargeCount = 2;  //充值次数
}

//领奖
message FirstRechargeThreeAward{
    required int32 id = 1; //配置id
}


//-------------首充活动复刻3---------------=======



/************** 荣耀动员366 *****************/


//活动数据
message HonorMobilizeInfoSync{
	required int32 chooseId      = 1; //选择ID
	required int32 freeCount     = 2; //免费次数
	required int32 dailyLotteryCount  = 3; //抽取次数当天
	required int32 totalLotteryCount  = 4; //抽取次数总计
}

//选择英雄
message HonorMobilizeChooseReq{
	required int32 chooseId = 1; //选择ID
}

message HonorMobilizeLotteryReq{
	required int32 type = 1; //1单抽  2十抽
}

//抽奖返回
message HonorMobilizeLotteryResp{
	repeated RewardItem randomRewards = 1; //奖励列表
	repeated RewardItem extRewards    = 2; //额外奖励
	required int32 type               = 3; //1单抽  2十抽
}
/************** 荣耀动员366 *****************/



/************** 合服比拼368 *****************/

//合服比拼榜单类型
enum MergeCompeteRankType {
    RANKTYPE_PERSON_POWER  = 1;//个人去兵战力排行榜
    RANKTYPE_GUILD_POWER   = 2;//联盟去兵战力排行榜
    RANKTYPE_VITCOST_POWER = 3;//个人体力消耗排行榜
    RANKTYPE_GIFT_SCORE    = 4;//个人嘉奖积分排行榜
}

message MCRankPB
{
	required int32 rank					= 1; //排名名次
	required int64 score				= 2; //排名积分
	optional string playerId            = 3; //玩家ID（联盟榜单时对应盟主id）
	optional string playerName			= 4; //玩家名称（联盟榜单时对应盟主名字）
    optional string guildId	    		= 5; //联盟ID
	optional string guildName			= 6; //联盟名称
	optional string guildTag			= 7; //联盟简称
	optional string serverId			= 8; //区服ID
	optional int32 serverScoreRank      = 9; //当前排名对应的服务器积分
	optional int32 icon                 = 10; //头像 （联盟榜单时对应盟主的头像）
	optional string pfIcon              = 11; //平台头像 （联盟榜单时对应盟主的平台头像）
	optional int32 addServerScore       = 12; //是否给区服贡献积分（1是0否）
}

//合服比拼活动数据
message MergeCompeteInfoPB {
	repeated MergeCompeteServerScore serverScore = 1; //区服积分
	repeated MergeCompeteRank rank               = 2; //榜单数据

	optional int32 syncType                      = 3; //同步方式：0-表示全量同步, 1-只同步后面的4、5、6（不同步榜单数据，减少同步的数据量）

	repeated MCAwardInfo awardInfo               = 4; //未领取的嘉奖礼包
	optional int32 giftScore                     = 5; //嘉奖积分
	optional int32 costVit                       = 6; //体力消耗数量
	optional int64 mergeTime                     = 7; //合服时间
}

//嘉奖礼包信息
message MCAwardInfo
{
	required int32 awardId	= 1; //礼包id
	required int32 count	= 2; //礼包数量
	optional int32 level    = 3; //礼包等级
}

//请求单一榜单数据
message MergeCompeteRankDataReq
{
	required int32 rankType  = 1; //榜单类型
}

//单一榜单数据
message MergeCompeteRank {
	required int32 rankType    = 1; //榜单类型
    repeated MCRankPB rankData = 2; //榜单数据
	optional MCRankPB myRank   = 3;// 我的名次
}

//合服比拼区服积分数据
message MergeCompeteServerScore
{
	required string serverId = 1; //区服ID
	required int64 score     = 2; //区服积分
}

//请求领取嘉奖礼包
message MergeCompeteGiftRewardReq
{
	required int32 awardId	= 1; //礼包id
}

/************** 合服比拼368 *****************/


/************** 核心勘探369 *****************/

//地图格子上出现的障碍类型（空格、沙土、沙土附带矿石、石头、石头附带矿石、宝箱）
enum CEObstacleType {
    CE_EMPTY               = 1; //空格
    CE_SANDY_SOIL          = 2; //沙土
    CE_SANDY_SOIL_ORE      = 3; //沙土附带矿石
    CE_STONE               = 4; //石头
	CE_STONE_ORE           = 5; //石头附带矿石
	CE_BOX                 = 6; //宝箱
	CE_SANDY_SOIL_ITEM     = 7; //沙土附带特殊道具
	CE_SPECIAL_EMPTY       = 8; //特殊空格（跟历史首行不连通）
}

//核心勘探活动信息
message CoreExploreActivityInfo
{
	required int32  currLine         = 1; //当前行（注意currLine后面还隐藏两行，不在视野范围内的，也就是说已生成的最大行数=currLine+2）
	repeated int32  completeTech     = 2; //已完成的科技id
	repeated CEZoneLinePB zoneLine   = 3; //地图行数据
	repeated CEZoneBoxPB zoneBox     = 4; //地图上的宝箱数据
	optional int32 pickBuyTimes      = 5; //已购买矿镐的数量
	optional CEFreePickPB freePick   = 6; //免费矿镐信息
	repeated PWBShopInfo shopInfo    = 7; //兑换商店商品信息
	repeated GeneralExchangeTip tips = 8; //通用兑换红点
	repeated CEZoneStonePB zoneStone = 9; //石头点击次数（不包含在这个list中石头格子，表示那个格子上面的石头还没有被点击过）
	optional int32 autoPick          = 10;//是否已开启自动挖矿，1是0否
	repeated CEZoneItemPB zoneItem   = 11;//沙土附带特殊道具的道具信息
	repeated CEZoneItemPB oreItem    = 12;//沙土附带矿石，或石头附带矿石的矿石道具
}

//地图行数据
message CEZoneLinePB
{
	required int32 line        = 1; //行数（注意这个行数不是指下标的概念，而是过去实际生成的行数，比如已经生成到1000行了，尽管前面的991行都消失了，但第1000行这个line依然是1000）
	repeated int32 colObstacle = 2; //地图格子上的障碍物（从1到6按顺序排队，对应格子列）
}

//地图宝箱数据
message CEZoneBoxPB
{
	required int32 line         = 1; //行
	required int32 column       = 2; //列
	required int32 receiveTimes = 3; //已领取次数
	required int32 totalTimes   = 4; //总共可以领取的次数
}

//石头点击次数
message CEZoneStonePB
{
	required int32 line         = 1; //行
	required int32 column       = 2; //列
	required int32 clickTimes   = 3; //已点击次数
}

//沙土附带特殊道具的道具信息
message CEZoneItemPB
{
	required int32 line         = 1; //行
	required int32 column       = 2; //列
	required string item        = 3; //道具三段式
}

//免费矿镐数据
message CEFreePickPB
{
	optional int64 lastPickTime   = 1; //上一次矿镐赠与结算的时间
	optional int32 pickTotalToday = 2; //今天赠送矿镐的总数
	optional int32 freePickCount  = 3; //当前拥有免费矿镐的数量
}

//障碍物清除方式
enum CEObstacleRemoveType
{
	REMOVE_BY_PICK  = 1; //矿镐
	REMOVE_BY_BOOM  = 2; //炸弹
	REMOVE_BY_RIG   = 3; //钻机
}

//清除地图上的障碍物
message CERemoveObstacleReq
{
	required int32 line                = 1; //行
	required int32 column              = 2; //列
	required CEObstacleRemoveType type = 3; //清除方式
}

//清除地图上的障碍物（返回）
message CERemoveObstacleResp
{
	required int32  currLine          = 1; //当前行
	repeated CEZoneLinePB zoneLine    = 2; //地图行数据
	repeated CEZoneBoxPB zoneBox      = 3; //地图上的宝箱数据
	repeated CEZoneStonePB zoneStone  = 4; //石头点击次数（不包含在这个list中石头格子，表示那个格子上面的石头还没有被点击过）
	repeated CEZoneLinePB removedLine = 5; //被移除的地图行数据
	optional CEFreePickPB freePick    = 6; //免费矿镐信息
	repeated CEZoneItemPB zoneItem    = 7; //沙土附带特殊道具的道具信息
	repeated CEZoneItemPB oreItem     = 8; //沙土附带矿石，或石头附带矿石的矿石道具
}

//领取地图宝箱奖励
message CEZoneBoxRewardReq
{
	required int32 line                = 1; //行
	required int32 column              = 2; //列
	optional int32 times               = 3; //领取次数（不填默认领取1次）
}

//购买矿镐请求
message CEBuyPickReq
{
	required int32 count  = 1; //购买数量
}

//科技提升请求（领取科技节点的奖励也是这个）
message CETechOperReq
{
	required int32 techId  = 1; //科技id
}

//商店兑换
message CEShopExchangeReq
{
	required int32 shopId  = 1; //兑换商品的配置id
	required int32 count   = 2; //兑换数量
}

//自动挖矿响应
message AutoPickReq
{
	optional int32 autoPick    = 1; //开启自动挖矿，1是0否
}

//自动挖矿响应
message AutoPickResp
{
	optional int32 autoPick      = 1; //是否已开启自动挖矿，1是0否
	repeated RewardItem awards   = 2; //自动挖矿获得的奖励（只有在关闭自动挖矿时才有数据）
	repeated RewardItem consumes = 3; //自动挖矿期间的消耗（只有在关闭自动挖矿时才有数据）
}

/************** 核心勘探369 *****************/


/************** 赛后庆典371 *****************/

message AfterCompetitionActivityInfo
{
	required int32 globalHomageCount           = 1; //全服致敬次数
	repeated ChampionGuildPB guild             = 2; //冠军联盟信息
	repeated ACGiftInfoPB giftInfo             = 3; //赠送物信息
	optional BigAwardPermissionPB qqPermission = 4; //发送qq全服大奖的权限信息
	optional BigAwardPermissionPB wxPermission = 5; //发送wx全服大奖的权限信息
	optional int32 homageToday                 = 6; //今日是否已致敬过，1是0否
}

//大奖发放权限信息
message BigAwardPermissionPB
{
	optional int32 permission  = 1; //自己是否有权限发放大奖，1是0否
	optional string senderId   = 2; //发放大奖的玩家id
	optional string senderName = 3; //发放大奖的玩家名字
	optional string guildId    = 4; //发放大奖的玩家所属联盟id
	optional string guildName  = 5; //发放大奖的玩家所属联盟名字
	optional int32 senderIcon  = 6; //发放大奖的玩家头像
	optional string senderPfIcon  = 7; //发放大奖的玩家平台头像
}

//冠军联盟信息
message ChampionGuildPB
{
	required string guildId    = 1; //冠军联盟ID
	required string guildName  = 2; //冠军联盟名称
	required string serverId   = 3; //冠军联盟所在服
	required int32 channel     = 4; //渠道：微信1、qq2
	required int32 race        = 5; //冠军种类：1.泰伯 2.霸主 3.联赛
}

//礼物购买次数信息
message ACGiftInfoPB
{
	required int32 giftId            = 1; //礼物id
	optional int32 sendCount         = 2; //自己已赠送的次数
	optional int32 recCount          = 3; //自己已接收的次数
	optional int32 globalBuyCount    = 4; //全服已购买次数
    optional int32 totalRewardToSend = 5; //有多少个大奖可供发放
	repeated string sendBigRewardQQ  = 6; //已发放QQ大奖的id
	repeated string sendBigRewardWX  = 7; //已发放WX大奖的id
	repeated string recBigRewardQQ   = 8; //已领取QQ大奖的id
	repeated string recBigRewardWX   = 9; //已领取WX大奖的id
	optional string sendToPlayer     = 10; //选定的要赠礼的对象玩家id
	optional string sendToPlayerName = 11; //选定的要赠礼的对象玩家名字
	repeated GiftRecAmountPB giftRecInfo = 12; //收取礼物信息
}

//设置礼物默认赠送对象
message SetGiftRecieverReq 
{
	required int32 giftId          = 1; //礼物id（对应shop表的id字段）
	optional string targetPlayerId = 2; //送礼对象玩家id
}

//购买赠送礼物
message SendGiftReq
{
	required int32 giftId          = 1; //礼物id（对应shop表的id字段）
	optional string targetPlayerId = 2; //送礼对象玩家id（不传这个值的情况下，默认取之前设置过的默认赠礼对象）
}

//发送全服大奖
message SendBigAwardReq
{
	required int32 giftId          = 1; //礼物id（对应shop表的id字段）
}

//领取全服大奖
message RecBigAwardReq
{
	required int32 giftId          = 1; //礼物id（对应shop表的id字段）
	required int32 channel         = 2; //渠道：微信1、qq2
	required string uuid           = 3; //大奖uuid
}

message GiftSendRecordPB
{
	required string toPlayerId     = 1; //礼物接收玩家的id
	required string toPlayerName   = 2; //礼物接收玩家的名字
	required int32 giftId          = 3; //礼物id
	required int64 sendTime        = 4; //礼物送出的时间
	optional string sendItem       = 5; //礼物道具信息
}

//赠礼记录数据同步
message GiftSendRecordSyncPB
{
	repeated GiftSendRecordPB record = 1;
}

message GiftRecRecordPB
{
	required string fromPlayerId   = 1; //送出玩家的id
	required string fromPlayerName = 2; //送出玩家的名字
	required int32 giftId          = 3; //礼物id
	required int64 recieveTime     = 4; //接收礼物时间
	optional string recItem        = 5; //礼物道具信息
}

//收礼记录数据同步
message GiftRecRecordSyncPB
{
	repeated GiftRecRecordPB record = 1;
}

//查看目标玩家礼物收取次数（所有礼物）
message GiftRecAmountReq
{
	required string targetPlayerId = 1; //目标对象玩家id 
}

//查看目标玩家礼物收取数量返回数据
message GiftRecAmountResp
{
	required string targetPlayerId    = 1; //目标对象玩家id 
	repeated GiftRecAmountPB giftInfo = 2; //收取礼物信息
}

message GiftRecAmountPB
{
	required int32 giftId  = 1; //礼物id
	required int32 count   = 2; //收取礼物的数量
}

/************** 赛后庆典371 *****************/



// 周年庆称号活动信息
message DressCollectionTwoInfo {
	repeated int32 collectedId = 1;  // 已集齐的装扮id（也包括头像框id）
}



/************** 赛季拼图 373 *****************/

message SeasonPuzzleActivityInfo
{
	required int32 completePuzzleTimes         = 1; //全服完成拼图次数
	repeated int32 puzzleSetIndex              = 2; //拼图盘面上已放入碎片的格子序号
	required int32 sendItemCount               = 3; //当日送出碎片数量
	required int32 itemGotCount                = 4; //当日获得碎片数量
	repeated CallHelpInfoPB callHelpInfo       = 5; //自己发起的求助信息        
}

//赛季拼图任务信息
message SeasonPuzzleMissionPB
{
	required int32 achieveId     = 1; //任务id
	required int32 completeTimes = 2; //已完成次数
}

//赛季拼图任务完成信息同步
message SeasonPuzzleMissionSync
{
	required int32 allMission              = 1; //是否全量同步，1是0否（全量的意思是已完成次数大于0的所有任务，等于0的不包含在里面）
	repeated SeasonPuzzleMissionPB mission = 2; //全量同步时只同步已完成次数大于0的所有任务；增量同步时只同步当前触发的那个任务
}

//求助类型
enum CallHelpType
{
	CALL_HELP_TO_PERSON  = 1; //向个人求助
	CALL_HELP_TO_GUILD   = 2; //向联盟求助
	CALL_HELP_TO_WORLD   = 3; //向世界求助（策划说不区分类型了，目前只有3在用；考虑后面策划可能又提出需求要区分，所以1和2先保留）
}

//发起求助信息
message CallHelpInfoPB
{
	required CallHelpType type = 1;  //求助类型
	required int64 time        = 2;  //发起求助的时间
	required int32 itemId      = 3;  //求助的道具ID
	required int32 complete    = 4;  //是否已获得帮助（1是0否）
	required string uuid       = 5;  //uuid
	optional string tarPlayer  = 6; //向个人请求时，对方玩家id
	optional string playerName = 7; //发起求助者的玩家名字
	optional int32 icon        = 8; //发起求助者的玩家头像
	optional string pfIcon     = 9; //发起求助者的玩家平台头像
	optional string playerId   = 10; //求助发起者的玩家id
}

//发起求助请求
message CallHelpReq
{
	required CallHelpType type  = 1;  //求助类型
	required int32 itemId       = 2;  //求助的道具ID
	optional string tarPlayerId = 3;  //向个人请求时，对方玩家id
}

//发起求助返回
message CallHelpResp
{
	required CallHelpInfoPB callHelpInfo = 1; //求助信息
}

//放入碎片请求
message PuzzleSetReq
{
	repeated int32 setIndex           = 1; //拼图盘面上已放入碎片的格子序号
}

//帮助（赠送拼图碎片）请求
message SendItemReq
{
	required string uuid        = 1;  //求助信息uuid
}

//帮助（赠送拼图碎片）返回
message SendItemResp
{
	required string uuid        = 1;  //求助信息uuid
}

//求助信息请求
message CallHelpInfoReq
{
	required CallHelpType type = 1;  //求助类型
	optional int32 page        = 2;  //请求第几页的信息（每页最多100条），不传默认返回第一页数据
}

//求助信息响应
message CallHelpInfoResp
{
	required CallHelpType type            = 1; //求助类型
	repeated CallHelpInfoPB callHelpInfo  = 2; //求助信息  
}

/************** 赛季拼图 373 *******************/




/*************巨龙来袭374*********************/

//活动信息
message PBGuildDragonAttackInfo{
	required int32 state             = 1; //状态 0关闭  1开启中
	required int64 appointmentTime   = 2; //预约时间
	required int64 openTime          = 3; //开启时间
	required int64 endTime           = 4; //结束时间
	required int64 openLimitTime     = 5; //开放冷却时间
	required int64 damageMax         = 6; //历史伤害最高值
	required int64 damageCur         = 7; //本次开放伤害
	required int64 damageGuild       = 8; //本次开放联盟伤害
	required int32 worldPosx         = 9; //世界点坐标X
	required int32 worldPosy         = 10;//世界点坐标Y
}


//预约开启
message PBGuildDragonAttackAppointmentTimeSetReq{
	required int64 appointmentTime = 1; //预约时间
}

//排行榜信息
message PBDamageRankResp{
	repeated PBDamageRank ranks     = 1; //排行榜列表
	optional PBDamageRank selfRank  = 2; //玩家自己
}


// 排行成员
message PBDamageRank{
	required string playerId       = 1;
	required int32 rank			   = 2;// 名次
	required string playerName	   = 3;// 玩家名称
	optional int64 score		   = 4;// 积分
}

/*************巨龙来袭374*********************/


/************** 有福同享活动 376 *****************/

message ShareProperityActivityInfo
{
	repeated ShareProperityRolePB roleInfo    = 1; //可绑定的角色信息
	optional ShareProperityRolePB bindRole    = 2; //已绑定的角色信息
	optional int32 rebateCount                = 3; //老服角色已获得返利数量
	optional int64 openTime                   = 4; //活动触发后的开始时间
	optional int64 endTime                    = 5; //活动触发后的结束时间
}

//角色信息
message ShareProperityRolePB
{
	required string playerId   = 1; //角色id
	required string playerName = 2; //角色名字
	required string serverId   = 3; //区服id
	optional string pfIcon     = 4; //平台头像
	optional int32 icon        = 5; //头像
	required int32 vipLevel    = 6; //vip等级
	required int32 playerLevel = 7; //指挥官等级
	required int32 cityLevel   = 8; //基地等级
}

//绑定老服角色请求
message ShareProperityBindRoleReq
{
	required string playerId = 1; //老服玩家角色id
}

/************** 有福同享活动 376 *****************/

/************** 深海秘藏 377 *****************/
//深海秘藏 info
message PBDeepTreasureInfo{
	optional int64 nextFree  = 1; // 下次免费刷新
	optional int64 refreshtimes = 2;// 已刷新次数 
	optional int64 purchaseItemTimes = 3; // 道具以购买次数
	repeated PBDeepTreasureBox nineBox = 4; // 9 个宝箱 
	repeated PBDeepTreasureExchange exchanges    = 5;  //兑换信息
	optional int32 lottoryCount = 6; // 开箱子总数 
	repeated PBDeepTreasureBuff buffList = 7; // buff 
}
// 深海秘藏buff
message PBDeepTreasureBuff{
	optional int32 buffId = 1; //buffId
	optional int32 times = 2; // 剩余次数
}
// 深海秘藏9个宝箱
message PBDeepTreasureBox{
	optional int32 poolCfgId = 1;
	optional bool open = 2; // 是否打开
}

//深海秘藏物品兑换记录
message PBDeepTreasureExchange{
	required int32 exchangeId = 1; //兑换表的ID
	required int32 num        = 2; //兑换物品的次数
}

//深海秘藏兑换物品
message PBDeepTreasureExchangeReq{
	required int32 id  = 1; //id
	required int32 num = 2; //个数
}

//深海秘藏开箱子
message PBDeepTreasureOpenboxReq{
	optional int32 index  = 1; // 0 - 8 
	optional bool openAll = 2; // 一键全开
}

//深海秘藏买开箱子的道具
message PBDeepTreasureOpenboxItemBuyReq{
	optional int32 number  = 1; // 买几个 
}


/************** 热血畅战 378 *****************/


// 医院信息
message PBHotBloodWarDataInfo 
{
    repeated PBHotBloodWarArmy armys          = 1; // 接纳部队信息
	required int64 recoverEndTime             = 2; // 所有死兵恢复完成的时间
	required int64 recoverStartTime           = 3; // 死兵恢复开始时间
	required int64 recoverSpeedTime           = 4; // 死兵恢复加速时间
	required int32 firstRecoverArmy           = 5; // 优先复活的兵种类型
	required int64 enemyKillScore             = 6; // 击杀积分
	required int64 selfHurtScore              = 7; // 自损积分
}



//医院士兵
message PBHotBloodWarArmy{
	required int32 armyId       = 1; //士兵ID
	required int32 deadCount    = 2; //死亡数量
	required int32 recieveCount = 3; //恢复数量
}


// 优先复活设置
message PBFirstRecoverSetReq
{
	required int32 armyType      = 1;  // 优先复活的兵种类型
}


// 加速复活请求
message PBRecoverSpeedReq
{
	repeated PBRecoverSpeedItem speedItem = 1;
}


//加速道具
message PBRecoverSpeedItem
{
	required int32 itemUuid  = 1;
	required int32 itemCount  = 2;
}


/************** 热血畅战 378 *****************/