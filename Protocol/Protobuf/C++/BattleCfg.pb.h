// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleCfg.proto

#ifndef PROTOBUF_BattleCfg_2eproto__INCLUDED
#define PROTOBUF_BattleCfg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleCfg_2eproto();
void protobuf_AssignDesc_BattleCfg_2eproto();
void protobuf_ShutdownFile_BattleCfg_2eproto();

class SkillShape;
class UnitSize;
class UnitPos;
class UnitAttr;
class UnitData;
class KillData;
class SkillData;
class BFMapCfg;
class BFMissionCfg;
class DeployRange;
class MissionUnit;
class BFUnitCfg;
class BFMonsterCfg;
class BFSkillCfg;
class BFBuffCfg;
class BuffDmgCalc;

enum BFConst {
  MAX_TICK_TIME = 600000,
  TROOP_UNIT_TYPE_ID = 1000,
  MAX_TICK_RATE = 5,
  FRONT_DIR_COUNT = 8,
  ATTACK_CRIT_RATE = 15000,
  BATTLE_TICK_PERIOD = 50,
  BUFF_TICK_PERIOD = 1000,
  SKILL_TICK_PERIOD = 1000,
  DEAD_PERIOD = 200,
  DISAPPEAR_PERIOD = 5000,
  HERO_ENTER_CD_PER = 5000,
  HERO_PUBLIC_CD = 0,
  USA_SOLDIER_ID = 11005,
  USA_SOLDIER_ID_2 = 11008,
  USA_SOLDIER_ID_3 = 11010,
  SITDOWN_PERIOD = 500,
  MODEL_COUNT_ONE = 1,
  MODEL_COUNT_PVE = 100,
  MODEL_COUNT_PVP = 1000
};
bool BFConst_IsValid(int value);
const BFConst BFConst_MIN = HERO_PUBLIC_CD;
const BFConst BFConst_MAX = MAX_TICK_TIME;
const int BFConst_ARRAYSIZE = BFConst_MAX + 1;

const ::google::protobuf::EnumDescriptor* BFConst_descriptor();
inline const ::std::string& BFConst_Name(BFConst value) {
  return ::google::protobuf::internal::NameOfEnum(
    BFConst_descriptor(), value);
}
inline bool BFConst_Parse(
    const ::std::string& name, BFConst* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BFConst>(
    BFConst_descriptor(), name, value);
}
enum BFCfgType {
  CFG_MAP = 1,
  CFG_MISSION = 2,
  CFG_MONSTER = 3,
  CFG_UNIT = 4,
  CFG_SKILL = 5,
  CFG_BUFF = 6
};
bool BFCfgType_IsValid(int value);
const BFCfgType BFCfgType_MIN = CFG_MAP;
const BFCfgType BFCfgType_MAX = CFG_BUFF;
const int BFCfgType_ARRAYSIZE = BFCfgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BFCfgType_descriptor();
inline const ::std::string& BFCfgType_Name(BFCfgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BFCfgType_descriptor(), value);
}
inline bool BFCfgType_Parse(
    const ::std::string& name, BFCfgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BFCfgType>(
    BFCfgType_descriptor(), name, value);
}
enum MissionType {
  MISSION_ATK = 1,
  MISSION_DEF = 2
};
bool MissionType_IsValid(int value);
const MissionType MissionType_MIN = MISSION_ATK;
const MissionType MissionType_MAX = MISSION_DEF;
const int MissionType_ARRAYSIZE = MissionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MissionType_descriptor();
inline const ::std::string& MissionType_Name(MissionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MissionType_descriptor(), value);
}
inline bool MissionType_Parse(
    const ::std::string& name, MissionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MissionType>(
    MissionType_descriptor(), name, value);
}
enum ValueType {
  VALUE_PERCENT = 1,
  VALUE_NUMBER = 2
};
bool ValueType_IsValid(int value);
const ValueType ValueType_MIN = VALUE_PERCENT;
const ValueType ValueType_MAX = VALUE_NUMBER;
const int ValueType_ARRAYSIZE = ValueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ValueType_descriptor();
inline const ::std::string& ValueType_Name(ValueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ValueType_descriptor(), value);
}
inline bool ValueType_Parse(
    const ::std::string& name, ValueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ValueType>(
    ValueType_descriptor(), name, value);
}
enum UnitType {
  UNIT_HERO_FOOT = 1,
  UNIT_HERO_TANK = 2,
  UNIT_HERO_PLANE = 3,
  UNIT_FOOT = 11,
  UNIT_TANK = 12,
  UNIT_PLANE = 13,
  UNIT_AIR_FOOT = 14,
  UNIT_PTROOP = 15,
  UNIT_MISSILE = 21,
  UNIT_BOMBER = 22,
  UNIT_BUILDING = 30,
  UNIT_DEFENCE = 40,
  UNIT_ORNAMENT = 50,
  UNIT_VIRTUAL = 60
};
bool UnitType_IsValid(int value);
const UnitType UnitType_MIN = UNIT_HERO_FOOT;
const UnitType UnitType_MAX = UNIT_VIRTUAL;
const int UnitType_ARRAYSIZE = UnitType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnitType_descriptor();
inline const ::std::string& UnitType_Name(UnitType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnitType_descriptor(), value);
}
inline bool UnitType_Parse(
    const ::std::string& name, UnitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnitType>(
    UnitType_descriptor(), name, value);
}
enum SkillTrigType {
  TRIG_MANUAL = 1,
  TRIG_POST = 2,
  TRIG_DEAD = 3,
  TRIG_ENTER = 4,
  TRIG_ATTACK = 5
};
bool SkillTrigType_IsValid(int value);
const SkillTrigType SkillTrigType_MIN = TRIG_MANUAL;
const SkillTrigType SkillTrigType_MAX = TRIG_ATTACK;
const int SkillTrigType_ARRAYSIZE = SkillTrigType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillTrigType_descriptor();
inline const ::std::string& SkillTrigType_Name(SkillTrigType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillTrigType_descriptor(), value);
}
inline bool SkillTrigType_Parse(
    const ::std::string& name, SkillTrigType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillTrigType>(
    SkillTrigType_descriptor(), name, value);
}
enum SkillCampType {
  SKILL_CAMP_ENEMY = 1,
  SKILL_CAMP_OWNSIDE = 2,
  SKILL_CAMP_FRIEND = 3,
  SKILL_CAMP_SELF = 4
};
bool SkillCampType_IsValid(int value);
const SkillCampType SkillCampType_MIN = SKILL_CAMP_ENEMY;
const SkillCampType SkillCampType_MAX = SKILL_CAMP_SELF;
const int SkillCampType_ARRAYSIZE = SkillCampType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillCampType_descriptor();
inline const ::std::string& SkillCampType_Name(SkillCampType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillCampType_descriptor(), value);
}
inline bool SkillCampType_Parse(
    const ::std::string& name, SkillCampType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillCampType>(
    SkillCampType_descriptor(), name, value);
}
enum CastCheckType {
  CHECK_X_UNIT_SELF = 1,
  CHECK_X_POS_SELF = 2,
  CHECK_Y_UNIT_SELF = 3,
  CHECK_Y_UNIT_TARGET = 4,
  CHECK_Y_POS_SELF = 5,
  CHECK_Y_POS_TARGET = 6
};
bool CastCheckType_IsValid(int value);
const CastCheckType CastCheckType_MIN = CHECK_X_UNIT_SELF;
const CastCheckType CastCheckType_MAX = CHECK_Y_POS_TARGET;
const int CastCheckType_ARRAYSIZE = CastCheckType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CastCheckType_descriptor();
inline const ::std::string& CastCheckType_Name(CastCheckType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CastCheckType_descriptor(), value);
}
inline bool CastCheckType_Parse(
    const ::std::string& name, CastCheckType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CastCheckType>(
    CastCheckType_descriptor(), name, value);
}
enum ModifyUnitAttrType {
  UAT_TROOP = 1,
  UAT_GROUP = 2,
  UAT_UNITLIST = 3
};
bool ModifyUnitAttrType_IsValid(int value);
const ModifyUnitAttrType ModifyUnitAttrType_MIN = UAT_TROOP;
const ModifyUnitAttrType ModifyUnitAttrType_MAX = UAT_UNITLIST;
const int ModifyUnitAttrType_ARRAYSIZE = ModifyUnitAttrType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModifyUnitAttrType_descriptor();
inline const ::std::string& ModifyUnitAttrType_Name(ModifyUnitAttrType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModifyUnitAttrType_descriptor(), value);
}
inline bool ModifyUnitAttrType_Parse(
    const ::std::string& name, ModifyUnitAttrType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModifyUnitAttrType>(
    ModifyUnitAttrType_descriptor(), name, value);
}
enum TriggerActionType {
  A_SetUnitMove = 1,
  A_SetUnitAttack = 2,
  A_SetUnitState = 3,
  A_SetTriggerState = 4,
  A_SetGameState = 5,
  A_SetUnitRevive = 6,
  A_SetUnitProgress = 7,
  A_SendUIEvent = 8,
  A_SetUnitGroupState = 9,
  A_SetUnitTroop = 10,
  A_CreateUnit = 11,
  A_ModifyUnitGroup = 12,
  A_ModifyUnitAttr = 13,
  A_SetVariable = 14,
  A_ModifyVariable = 15
};
bool TriggerActionType_IsValid(int value);
const TriggerActionType TriggerActionType_MIN = A_SetUnitMove;
const TriggerActionType TriggerActionType_MAX = A_ModifyVariable;
const int TriggerActionType_ARRAYSIZE = TriggerActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TriggerActionType_descriptor();
inline const ::std::string& TriggerActionType_Name(TriggerActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerActionType_descriptor(), value);
}
inline bool TriggerActionType_Parse(
    const ::std::string& name, TriggerActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerActionType>(
    TriggerActionType_descriptor(), name, value);
}
enum SkillShapeType {
  SKILL_SHAPE_NULL = 0,
  SKILL_SHAPE_CIRCLE = 1,
  SKILL_SHAPE_RECT = 2,
  SKILL_SHAPE_FAN = 3,
  SKILL_SHAPE_ALL = 9
};
bool SkillShapeType_IsValid(int value);
const SkillShapeType SkillShapeType_MIN = SKILL_SHAPE_NULL;
const SkillShapeType SkillShapeType_MAX = SKILL_SHAPE_ALL;
const int SkillShapeType_ARRAYSIZE = SkillShapeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillShapeType_descriptor();
inline const ::std::string& SkillShapeType_Name(SkillShapeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillShapeType_descriptor(), value);
}
inline bool SkillShapeType_Parse(
    const ::std::string& name, SkillShapeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillShapeType>(
    SkillShapeType_descriptor(), name, value);
}
enum SkillType {
  SKILL_TYPE_ATTACK = 0,
  SKILL_TYPE_COMMON = 1
};
bool SkillType_IsValid(int value);
const SkillType SkillType_MIN = SKILL_TYPE_ATTACK;
const SkillType SkillType_MAX = SKILL_TYPE_COMMON;
const int SkillType_ARRAYSIZE = SkillType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillType_descriptor();
inline const ::std::string& SkillType_Name(SkillType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillType_descriptor(), value);
}
inline bool SkillType_Parse(
    const ::std::string& name, SkillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillType>(
    SkillType_descriptor(), name, value);
}
enum BuffType {
  BUFF_HURT = 1000,
  BUFF_HP = 1001,
  BUFF_ATTACK = 1004,
  BUFF_DEFANCE = 1005,
  BUFF_CIRT = 1006,
  BUFF_ANTICIRT = 1007,
  BUFF_HIT = 1008,
  BUFF_MISS = 1009,
  BUFF_ATTACKPERIOD = 1010,
  BUFF_MOVEPERIOD = 1011,
  BUFF_INVISIBLE = 1020,
  BUFF_SHIELD = 1021,
  BUFF_TAUNT = 1022,
  BUFF_CREATE = 1030,
  BUFF_CREATE_EXTEND = 1031
};
bool BuffType_IsValid(int value);
const BuffType BuffType_MIN = BUFF_HURT;
const BuffType BuffType_MAX = BUFF_CREATE_EXTEND;
const int BuffType_ARRAYSIZE = BuffType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuffType_descriptor();
inline const ::std::string& BuffType_Name(BuffType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuffType_descriptor(), value);
}
inline bool BuffType_Parse(
    const ::std::string& name, BuffType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuffType>(
    BuffType_descriptor(), name, value);
}
enum DamageType {
  DMG_NORMAL = 1,
  DMG_MISS = 2,
  DMG_CRIT = 3,
  DMG_SKILL = 4
};
bool DamageType_IsValid(int value);
const DamageType DamageType_MIN = DMG_NORMAL;
const DamageType DamageType_MAX = DMG_SKILL;
const int DamageType_ARRAYSIZE = DamageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DamageType_descriptor();
inline const ::std::string& DamageType_Name(DamageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DamageType_descriptor(), value);
}
inline bool DamageType_Parse(
    const ::std::string& name, DamageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DamageType>(
    DamageType_descriptor(), name, value);
}
// ===================================================================

class SkillShape : public ::google::protobuf::Message {
 public:
  SkillShape();
  virtual ~SkillShape();

  SkillShape(const SkillShape& from);

  inline SkillShape& operator=(const SkillShape& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillShape& default_instance();

  void Swap(SkillShape* other);

  // implements Message ----------------------------------------------

  SkillShape* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillShape& from);
  void MergeFrom(const SkillShape& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 shapeType = 1;
  inline bool has_shapetype() const;
  inline void clear_shapetype();
  static const int kShapeTypeFieldNumber = 1;
  inline ::google::protobuf::int32 shapetype() const;
  inline void set_shapetype(::google::protobuf::int32 value);

  // optional int32 width = 2;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 3;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 3;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional int32 range = 4;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 4;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);

  // optional int32 angle = 5;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 5;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillShape)
 private:
  inline void set_has_shapetype();
  inline void clear_has_shapetype();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_range();
  inline void clear_has_range();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 shapetype_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 range_;
  ::google::protobuf::int32 angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static SkillShape* default_instance_;
};
// -------------------------------------------------------------------

class UnitSize : public ::google::protobuf::Message {
 public:
  UnitSize();
  virtual ~UnitSize();

  UnitSize(const UnitSize& from);

  inline UnitSize& operator=(const UnitSize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitSize& default_instance();

  void Swap(UnitSize* other);

  // implements Message ----------------------------------------------

  UnitSize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitSize& from);
  void MergeFrom(const UnitSize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // required int32 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UnitSize)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static UnitSize* default_instance_;
};
// -------------------------------------------------------------------

class UnitPos : public ::google::protobuf::Message {
 public:
  UnitPos();
  virtual ~UnitPos();

  UnitPos(const UnitPos& from);

  inline UnitPos& operator=(const UnitPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitPos& default_instance();

  void Swap(UnitPos* other);

  // implements Message ----------------------------------------------

  UnitPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitPos& from);
  void MergeFrom(const UnitPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UnitPos)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static UnitPos* default_instance_;
};
// -------------------------------------------------------------------

class UnitAttr : public ::google::protobuf::Message {
 public:
  UnitAttr();
  virtual ~UnitAttr();

  UnitAttr(const UnitAttr& from);

  inline UnitAttr& operator=(const UnitAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitAttr& default_instance();

  void Swap(UnitAttr* other);

  // implements Message ----------------------------------------------

  UnitAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitAttr& from);
  void MergeFrom(const UnitAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 unitHp = 1;
  inline bool has_unithp() const;
  inline void clear_unithp();
  static const int kUnitHpFieldNumber = 1;
  inline ::google::protobuf::int32 unithp() const;
  inline void set_unithp(::google::protobuf::int32 value);

  // optional int32 unitAttack = 2;
  inline bool has_unitattack() const;
  inline void clear_unitattack();
  static const int kUnitAttackFieldNumber = 2;
  inline ::google::protobuf::int32 unitattack() const;
  inline void set_unitattack(::google::protobuf::int32 value);

  // optional int32 unitDefence = 3;
  inline bool has_unitdefence() const;
  inline void clear_unitdefence();
  static const int kUnitDefenceFieldNumber = 3;
  inline ::google::protobuf::int32 unitdefence() const;
  inline void set_unitdefence(::google::protobuf::int32 value);

  // optional int32 unitHit = 4;
  inline bool has_unithit() const;
  inline void clear_unithit();
  static const int kUnitHitFieldNumber = 4;
  inline ::google::protobuf::int32 unithit() const;
  inline void set_unithit(::google::protobuf::int32 value);

  // optional int32 unitMiss = 5;
  inline bool has_unitmiss() const;
  inline void clear_unitmiss();
  static const int kUnitMissFieldNumber = 5;
  inline ::google::protobuf::int32 unitmiss() const;
  inline void set_unitmiss(::google::protobuf::int32 value);

  // optional int32 unitCrit = 6;
  inline bool has_unitcrit() const;
  inline void clear_unitcrit();
  static const int kUnitCritFieldNumber = 6;
  inline ::google::protobuf::int32 unitcrit() const;
  inline void set_unitcrit(::google::protobuf::int32 value);

  // optional int32 unitAntiCrit = 7;
  inline bool has_unitanticrit() const;
  inline void clear_unitanticrit();
  static const int kUnitAntiCritFieldNumber = 7;
  inline ::google::protobuf::int32 unitanticrit() const;
  inline void set_unitanticrit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UnitAttr)
 private:
  inline void set_has_unithp();
  inline void clear_has_unithp();
  inline void set_has_unitattack();
  inline void clear_has_unitattack();
  inline void set_has_unitdefence();
  inline void clear_has_unitdefence();
  inline void set_has_unithit();
  inline void clear_has_unithit();
  inline void set_has_unitmiss();
  inline void clear_has_unitmiss();
  inline void set_has_unitcrit();
  inline void clear_has_unitcrit();
  inline void set_has_unitanticrit();
  inline void clear_has_unitanticrit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 unithp_;
  ::google::protobuf::int32 unitattack_;
  ::google::protobuf::int32 unitdefence_;
  ::google::protobuf::int32 unithit_;
  ::google::protobuf::int32 unitmiss_;
  ::google::protobuf::int32 unitcrit_;
  ::google::protobuf::int32 unitanticrit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static UnitAttr* default_instance_;
};
// -------------------------------------------------------------------

class UnitData : public ::google::protobuf::Message {
 public:
  UnitData();
  virtual ~UnitData();

  UnitData(const UnitData& from);

  inline UnitData& operator=(const UnitData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitData& default_instance();

  void Swap(UnitData* other);

  // implements Message ----------------------------------------------

  UnitData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitData& from);
  void MergeFrom(const UnitData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional int32 monsterId = 5;
  inline bool has_monsterid() const;
  inline void clear_monsterid();
  static const int kMonsterIdFieldNumber = 5;
  inline ::google::protobuf::int32 monsterid() const;
  inline void set_monsterid(::google::protobuf::int32 value);

  // optional .UnitAttr unitAttr = 6;
  inline bool has_unitattr() const;
  inline void clear_unitattr();
  static const int kUnitAttrFieldNumber = 6;
  inline const ::UnitAttr& unitattr() const;
  inline ::UnitAttr* mutable_unitattr();
  inline ::UnitAttr* release_unitattr();
  inline void set_allocated_unitattr(::UnitAttr* unitattr);

  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 troopType = 8;
  inline bool has_trooptype() const;
  inline void clear_trooptype();
  static const int kTroopTypeFieldNumber = 8;
  inline ::google::protobuf::int32 trooptype() const;
  inline void set_trooptype(::google::protobuf::int32 value);

  // optional int32 groupId = 9;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 9;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // optional int32 extendState = 10;
  inline bool has_extendstate() const;
  inline void clear_extendstate();
  static const int kExtendStateFieldNumber = 10;
  inline ::google::protobuf::int32 extendstate() const;
  inline void set_extendstate(::google::protobuf::int32 value);

  // optional string playerId = 11;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 11;
  inline const ::std::string& playerid() const;
  inline void set_playerid(const ::std::string& value);
  inline void set_playerid(const char* value);
  inline void set_playerid(const char* value, size_t size);
  inline ::std::string* mutable_playerid();
  inline ::std::string* release_playerid();
  inline void set_allocated_playerid(::std::string* playerid);

  // optional .UnitPos pos = 12;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 12;
  inline const ::UnitPos& pos() const;
  inline ::UnitPos* mutable_pos();
  inline ::UnitPos* release_pos();
  inline void set_allocated_pos(::UnitPos* pos);

  // repeated .SkillData skillDatas = 13;
  inline int skilldatas_size() const;
  inline void clear_skilldatas();
  static const int kSkillDatasFieldNumber = 13;
  inline const ::SkillData& skilldatas(int index) const;
  inline ::SkillData* mutable_skilldatas(int index);
  inline ::SkillData* add_skilldatas();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillData >&
      skilldatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillData >*
      mutable_skilldatas();

  // repeated .KillData killDatas = 14;
  inline int killdatas_size() const;
  inline void clear_killdatas();
  static const int kKillDatasFieldNumber = 14;
  inline const ::KillData& killdatas(int index) const;
  inline ::KillData* mutable_killdatas(int index);
  inline ::KillData* add_killdatas();
  inline const ::google::protobuf::RepeatedPtrField< ::KillData >&
      killdatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::KillData >*
      mutable_killdatas();

  // @@protoc_insertion_point(class_scope:UnitData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_monsterid();
  inline void clear_has_monsterid();
  inline void set_has_unitattr();
  inline void clear_has_unitattr();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_trooptype();
  inline void clear_has_trooptype();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_extendstate();
  inline void clear_has_extendstate();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 hp_;
  ::UnitAttr* unitattr_;
  ::google::protobuf::int32 monsterid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 trooptype_;
  ::google::protobuf::int32 groupid_;
  ::std::string* playerid_;
  ::UnitPos* pos_;
  ::google::protobuf::RepeatedPtrField< ::SkillData > skilldatas_;
  ::google::protobuf::RepeatedPtrField< ::KillData > killdatas_;
  ::google::protobuf::int32 extendstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static UnitData* default_instance_;
};
// -------------------------------------------------------------------

class KillData : public ::google::protobuf::Message {
 public:
  KillData();
  virtual ~KillData();

  KillData(const KillData& from);

  inline KillData& operator=(const KillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillData& default_instance();

  void Swap(KillData* other);

  // implements Message ----------------------------------------------

  KillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillData& from);
  void MergeFrom(const KillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KillData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static KillData* default_instance_;
};
// -------------------------------------------------------------------

class SkillData : public ::google::protobuf::Message {
 public:
  SkillData();
  virtual ~SkillData();

  SkillData(const SkillData& from);

  inline SkillData& operator=(const SkillData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillData& default_instance();

  void Swap(SkillData* other);

  // implements Message ----------------------------------------------

  SkillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillData& from);
  void MergeFrom(const SkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static SkillData* default_instance_;
};
// -------------------------------------------------------------------

class BFMapCfg : public ::google::protobuf::Message {
 public:
  BFMapCfg();
  virtual ~BFMapCfg();

  BFMapCfg(const BFMapCfg& from);

  inline BFMapCfg& operator=(const BFMapCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFMapCfg& default_instance();

  void Swap(BFMapCfg* other);

  // implements Message ----------------------------------------------

  BFMapCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFMapCfg& from);
  void MergeFrom(const BFMapCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 width = 2;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // required int32 height = 3;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 3;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // required int32 tileWidth = 4;
  inline bool has_tilewidth() const;
  inline void clear_tilewidth();
  static const int kTileWidthFieldNumber = 4;
  inline ::google::protobuf::int32 tilewidth() const;
  inline void set_tilewidth(::google::protobuf::int32 value);

  // required int32 tileHeight = 5;
  inline bool has_tileheight() const;
  inline void clear_tileheight();
  static const int kTileHeightFieldNumber = 5;
  inline ::google::protobuf::int32 tileheight() const;
  inline void set_tileheight(::google::protobuf::int32 value);

  // required .UnitPos atkPos = 10;
  inline bool has_atkpos() const;
  inline void clear_atkpos();
  static const int kAtkPosFieldNumber = 10;
  inline const ::UnitPos& atkpos() const;
  inline ::UnitPos* mutable_atkpos();
  inline ::UnitPos* release_atkpos();
  inline void set_allocated_atkpos(::UnitPos* atkpos);

  // required .UnitPos defPos = 11;
  inline bool has_defpos() const;
  inline void clear_defpos();
  static const int kDefPosFieldNumber = 11;
  inline const ::UnitPos& defpos() const;
  inline ::UnitPos* mutable_defpos();
  inline ::UnitPos* release_defpos();
  inline void set_allocated_defpos(::UnitPos* defpos);

  // optional .UnitPos warPos = 12;
  inline bool has_warpos() const;
  inline void clear_warpos();
  static const int kWarPosFieldNumber = 12;
  inline const ::UnitPos& warpos() const;
  inline ::UnitPos* mutable_warpos();
  inline ::UnitPos* release_warpos();
  inline void set_allocated_warpos(::UnitPos* warpos);

  // optional int32 hoverTime = 13;
  inline bool has_hovertime() const;
  inline void clear_hovertime();
  static const int kHoverTimeFieldNumber = 13;
  inline ::google::protobuf::int32 hovertime() const;
  inline void set_hovertime(::google::protobuf::int32 value);

  // optional int32 maxFindStep = 14;
  inline bool has_maxfindstep() const;
  inline void clear_maxfindstep();
  static const int kMaxFindStepFieldNumber = 14;
  inline ::google::protobuf::int32 maxfindstep() const;
  inline void set_maxfindstep(::google::protobuf::int32 value);

  // repeated int32 datas = 20;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 20;
  inline ::google::protobuf::int32 datas(int index) const;
  inline void set_datas(int index, ::google::protobuf::int32 value);
  inline void add_datas(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      datas() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_datas();

  // repeated .UnitPos navmeshes = 21;
  inline int navmeshes_size() const;
  inline void clear_navmeshes();
  static const int kNavmeshesFieldNumber = 21;
  inline const ::UnitPos& navmeshes(int index) const;
  inline ::UnitPos* mutable_navmeshes(int index);
  inline ::UnitPos* add_navmeshes();
  inline const ::google::protobuf::RepeatedPtrField< ::UnitPos >&
      navmeshes() const;
  inline ::google::protobuf::RepeatedPtrField< ::UnitPos >*
      mutable_navmeshes();

  // @@protoc_insertion_point(class_scope:BFMapCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_tilewidth();
  inline void clear_has_tilewidth();
  inline void set_has_tileheight();
  inline void clear_has_tileheight();
  inline void set_has_atkpos();
  inline void clear_has_atkpos();
  inline void set_has_defpos();
  inline void clear_has_defpos();
  inline void set_has_warpos();
  inline void clear_has_warpos();
  inline void set_has_hovertime();
  inline void clear_has_hovertime();
  inline void set_has_maxfindstep();
  inline void clear_has_maxfindstep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 tilewidth_;
  ::UnitPos* atkpos_;
  ::UnitPos* defpos_;
  ::google::protobuf::int32 tileheight_;
  ::google::protobuf::int32 hovertime_;
  ::UnitPos* warpos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > datas_;
  ::google::protobuf::RepeatedPtrField< ::UnitPos > navmeshes_;
  ::google::protobuf::int32 maxfindstep_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BFMapCfg* default_instance_;
};
// -------------------------------------------------------------------

class BFMissionCfg : public ::google::protobuf::Message {
 public:
  BFMissionCfg();
  virtual ~BFMissionCfg();

  BFMissionCfg(const BFMissionCfg& from);

  inline BFMissionCfg& operator=(const BFMissionCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFMissionCfg& default_instance();

  void Swap(BFMissionCfg* other);

  // implements Message ----------------------------------------------

  BFMissionCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFMissionCfg& from);
  void MergeFrom(const BFMissionCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 mapId = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // required int32 timeLimit = 4;
  inline bool has_timelimit() const;
  inline void clear_timelimit();
  static const int kTimeLimitFieldNumber = 4;
  inline ::google::protobuf::int32 timelimit() const;
  inline void set_timelimit(::google::protobuf::int32 value);

  // required int32 atkWarningY = 6;
  inline bool has_atkwarningy() const;
  inline void clear_atkwarningy();
  static const int kAtkWarningYFieldNumber = 6;
  inline ::google::protobuf::int32 atkwarningy() const;
  inline void set_atkwarningy(::google::protobuf::int32 value);

  // required int32 defWarningY = 7;
  inline bool has_defwarningy() const;
  inline void clear_defwarningy();
  static const int kDefWarningYFieldNumber = 7;
  inline ::google::protobuf::int32 defwarningy() const;
  inline void set_defwarningy(::google::protobuf::int32 value);

  // repeated int32 atkTargetItems = 11;
  inline int atktargetitems_size() const;
  inline void clear_atktargetitems();
  static const int kAtkTargetItemsFieldNumber = 11;
  inline ::google::protobuf::int32 atktargetitems(int index) const;
  inline void set_atktargetitems(int index, ::google::protobuf::int32 value);
  inline void add_atktargetitems(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      atktargetitems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_atktargetitems();

  // repeated int32 defTargetItems = 12;
  inline int deftargetitems_size() const;
  inline void clear_deftargetitems();
  static const int kDefTargetItemsFieldNumber = 12;
  inline ::google::protobuf::int32 deftargetitems(int index) const;
  inline void set_deftargetitems(int index, ::google::protobuf::int32 value);
  inline void add_deftargetitems(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      deftargetitems() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_deftargetitems();

  // repeated .MissionUnit atkUnits = 13;
  inline int atkunits_size() const;
  inline void clear_atkunits();
  static const int kAtkUnitsFieldNumber = 13;
  inline const ::MissionUnit& atkunits(int index) const;
  inline ::MissionUnit* mutable_atkunits(int index);
  inline ::MissionUnit* add_atkunits();
  inline const ::google::protobuf::RepeatedPtrField< ::MissionUnit >&
      atkunits() const;
  inline ::google::protobuf::RepeatedPtrField< ::MissionUnit >*
      mutable_atkunits();

  // repeated .MissionUnit defUnits = 14;
  inline int defunits_size() const;
  inline void clear_defunits();
  static const int kDefUnitsFieldNumber = 14;
  inline const ::MissionUnit& defunits(int index) const;
  inline ::MissionUnit* mutable_defunits(int index);
  inline ::MissionUnit* add_defunits();
  inline const ::google::protobuf::RepeatedPtrField< ::MissionUnit >&
      defunits() const;
  inline ::google::protobuf::RepeatedPtrField< ::MissionUnit >*
      mutable_defunits();

  // repeated .DeployRange deployRangeList = 15;
  inline int deployrangelist_size() const;
  inline void clear_deployrangelist();
  static const int kDeployRangeListFieldNumber = 15;
  inline const ::DeployRange& deployrangelist(int index) const;
  inline ::DeployRange* mutable_deployrangelist(int index);
  inline ::DeployRange* add_deployrangelist();
  inline const ::google::protobuf::RepeatedPtrField< ::DeployRange >&
      deployrangelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::DeployRange >*
      mutable_deployrangelist();

  // @@protoc_insertion_point(class_scope:BFMissionCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_timelimit();
  inline void clear_has_timelimit();
  inline void set_has_atkwarningy();
  inline void clear_has_atkwarningy();
  inline void set_has_defwarningy();
  inline void clear_has_defwarningy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 timelimit_;
  ::google::protobuf::int32 atkwarningy_;
  ::google::protobuf::int32 defwarningy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > atktargetitems_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > deftargetitems_;
  ::google::protobuf::RepeatedPtrField< ::MissionUnit > atkunits_;
  ::google::protobuf::RepeatedPtrField< ::MissionUnit > defunits_;
  ::google::protobuf::RepeatedPtrField< ::DeployRange > deployrangelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BFMissionCfg* default_instance_;
};
// -------------------------------------------------------------------

class DeployRange : public ::google::protobuf::Message {
 public:
  DeployRange();
  virtual ~DeployRange();

  DeployRange(const DeployRange& from);

  inline DeployRange& operator=(const DeployRange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeployRange& default_instance();

  void Swap(DeployRange* other);

  // implements Message ----------------------------------------------

  DeployRange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeployRange& from);
  void MergeFrom(const DeployRange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reserved = 1;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 1;
  inline ::google::protobuf::int32 reserved() const;
  inline void set_reserved(::google::protobuf::int32 value);

  // required .UnitPos rmin = 2;
  inline bool has_rmin() const;
  inline void clear_rmin();
  static const int kRminFieldNumber = 2;
  inline const ::UnitPos& rmin() const;
  inline ::UnitPos* mutable_rmin();
  inline ::UnitPos* release_rmin();
  inline void set_allocated_rmin(::UnitPos* rmin);

  // required .UnitPos rmax = 3;
  inline bool has_rmax() const;
  inline void clear_rmax();
  static const int kRmaxFieldNumber = 3;
  inline const ::UnitPos& rmax() const;
  inline ::UnitPos* mutable_rmax();
  inline ::UnitPos* release_rmax();
  inline void set_allocated_rmax(::UnitPos* rmax);

  // @@protoc_insertion_point(class_scope:DeployRange)
 private:
  inline void set_has_reserved();
  inline void clear_has_reserved();
  inline void set_has_rmin();
  inline void clear_has_rmin();
  inline void set_has_rmax();
  inline void clear_has_rmax();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UnitPos* rmin_;
  ::UnitPos* rmax_;
  ::google::protobuf::int32 reserved_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static DeployRange* default_instance_;
};
// -------------------------------------------------------------------

class MissionUnit : public ::google::protobuf::Message {
 public:
  MissionUnit();
  virtual ~MissionUnit();

  MissionUnit(const MissionUnit& from);

  inline MissionUnit& operator=(const MissionUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionUnit& default_instance();

  void Swap(MissionUnit* other);

  // implements Message ----------------------------------------------

  MissionUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionUnit& from);
  void MergeFrom(const MissionUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 objId = 2;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // required int32 groupId = 3;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // required .UnitPos pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::UnitPos& pos() const;
  inline ::UnitPos* mutable_pos();
  inline ::UnitPos* release_pos();
  inline void set_allocated_pos(::UnitPos* pos);

  // required int32 initDir = 5;
  inline bool has_initdir() const;
  inline void clear_initdir();
  static const int kInitDirFieldNumber = 5;
  inline ::google::protobuf::int32 initdir() const;
  inline void set_initdir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MissionUnit)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_initdir();
  inline void clear_has_initdir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 objid_;
  ::UnitPos* pos_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 initdir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static MissionUnit* default_instance_;
};
// -------------------------------------------------------------------

class BFUnitCfg : public ::google::protobuf::Message {
 public:
  BFUnitCfg();
  virtual ~BFUnitCfg();

  BFUnitCfg(const BFUnitCfg& from);

  inline BFUnitCfg& operator=(const BFUnitCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFUnitCfg& default_instance();

  void Swap(BFUnitCfg* other);

  // implements Message ----------------------------------------------

  BFUnitCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFUnitCfg& from);
  void MergeFrom(const BFUnitCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required .UnitSize size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline const ::UnitSize& size() const;
  inline ::UnitSize* mutable_size();
  inline ::UnitSize* release_size();
  inline void set_allocated_size(::UnitSize* size);

  // required int32 posPrior = 4;
  inline bool has_posprior() const;
  inline void clear_posprior();
  static const int kPosPriorFieldNumber = 4;
  inline ::google::protobuf::int32 posprior() const;
  inline void set_posprior(::google::protobuf::int32 value);

  // required int32 viewRange = 5;
  inline bool has_viewrange() const;
  inline void clear_viewrange();
  static const int kViewRangeFieldNumber = 5;
  inline ::google::protobuf::int32 viewrange() const;
  inline void set_viewrange(::google::protobuf::int32 value);

  // required int32 trackRange = 6;
  inline bool has_trackrange() const;
  inline void clear_trackrange();
  static const int kTrackRangeFieldNumber = 6;
  inline ::google::protobuf::int32 trackrange() const;
  inline void set_trackrange(::google::protobuf::int32 value);

  // required int32 idlePeriod = 10;
  inline bool has_idleperiod() const;
  inline void clear_idleperiod();
  static const int kIdlePeriodFieldNumber = 10;
  inline ::google::protobuf::int32 idleperiod() const;
  inline void set_idleperiod(::google::protobuf::int32 value);

  // required int32 movePeriod = 11;
  inline bool has_moveperiod() const;
  inline void clear_moveperiod();
  static const int kMovePeriodFieldNumber = 11;
  inline ::google::protobuf::int32 moveperiod() const;
  inline void set_moveperiod(::google::protobuf::int32 value);

  // optional int32 turnPeriod = 12;
  inline bool has_turnperiod() const;
  inline void clear_turnperiod();
  static const int kTurnPeriodFieldNumber = 12;
  inline ::google::protobuf::int32 turnperiod() const;
  inline void set_turnperiod(::google::protobuf::int32 value);

  // optional int32 moveStep = 13;
  inline bool has_movestep() const;
  inline void clear_movestep();
  static const int kMoveStepFieldNumber = 13;
  inline ::google::protobuf::int32 movestep() const;
  inline void set_movestep(::google::protobuf::int32 value);

  // optional int32 freeFly = 14;
  inline bool has_freefly() const;
  inline void clear_freefly();
  static const int kFreeFlyFieldNumber = 14;
  inline ::google::protobuf::int32 freefly() const;
  inline void set_freefly(::google::protobuf::int32 value);

  // repeated .SkillData skillDatas = 20;
  inline int skilldatas_size() const;
  inline void clear_skilldatas();
  static const int kSkillDatasFieldNumber = 20;
  inline const ::SkillData& skilldatas(int index) const;
  inline ::SkillData* mutable_skilldatas(int index);
  inline ::SkillData* add_skilldatas();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillData >&
      skilldatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillData >*
      mutable_skilldatas();

  // @@protoc_insertion_point(class_scope:BFUnitCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_posprior();
  inline void clear_has_posprior();
  inline void set_has_viewrange();
  inline void clear_has_viewrange();
  inline void set_has_trackrange();
  inline void clear_has_trackrange();
  inline void set_has_idleperiod();
  inline void clear_has_idleperiod();
  inline void set_has_moveperiod();
  inline void clear_has_moveperiod();
  inline void set_has_turnperiod();
  inline void clear_has_turnperiod();
  inline void set_has_movestep();
  inline void clear_has_movestep();
  inline void set_has_freefly();
  inline void clear_has_freefly();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::UnitSize* size_;
  ::google::protobuf::int32 posprior_;
  ::google::protobuf::int32 viewrange_;
  ::google::protobuf::int32 trackrange_;
  ::google::protobuf::int32 idleperiod_;
  ::google::protobuf::int32 moveperiod_;
  ::google::protobuf::int32 turnperiod_;
  ::google::protobuf::int32 movestep_;
  ::google::protobuf::int32 freefly_;
  ::google::protobuf::RepeatedPtrField< ::SkillData > skilldatas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BFUnitCfg* default_instance_;
};
// -------------------------------------------------------------------

class BFMonsterCfg : public ::google::protobuf::Message {
 public:
  BFMonsterCfg();
  virtual ~BFMonsterCfg();

  BFMonsterCfg(const BFMonsterCfg& from);

  inline BFMonsterCfg& operator=(const BFMonsterCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFMonsterCfg& default_instance();

  void Swap(BFMonsterCfg* other);

  // implements Message ----------------------------------------------

  BFMonsterCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFMonsterCfg& from);
  void MergeFrom(const BFMonsterCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required .UnitAttr unitAttr = 3;
  inline bool has_unitattr() const;
  inline void clear_unitattr();
  static const int kUnitAttrFieldNumber = 3;
  inline const ::UnitAttr& unitattr() const;
  inline ::UnitAttr* mutable_unitattr();
  inline ::UnitAttr* release_unitattr();
  inline void set_allocated_unitattr(::UnitAttr* unitattr);

  // repeated .SkillData skillDatas = 4;
  inline int skilldatas_size() const;
  inline void clear_skilldatas();
  static const int kSkillDatasFieldNumber = 4;
  inline const ::SkillData& skilldatas(int index) const;
  inline ::SkillData* mutable_skilldatas(int index);
  inline ::SkillData* add_skilldatas();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillData >&
      skilldatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillData >*
      mutable_skilldatas();

  // @@protoc_insertion_point(class_scope:BFMonsterCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_unitattr();
  inline void clear_has_unitattr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 itemid_;
  ::UnitAttr* unitattr_;
  ::google::protobuf::RepeatedPtrField< ::SkillData > skilldatas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BFMonsterCfg* default_instance_;
};
// -------------------------------------------------------------------

class BFSkillCfg : public ::google::protobuf::Message {
 public:
  BFSkillCfg();
  virtual ~BFSkillCfg();

  BFSkillCfg(const BFSkillCfg& from);

  inline BFSkillCfg& operator=(const BFSkillCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFSkillCfg& default_instance();

  void Swap(BFSkillCfg* other);

  // implements Message ----------------------------------------------

  BFSkillCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFSkillCfg& from);
  void MergeFrom(const BFSkillCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 triggerType = 3;
  inline bool has_triggertype() const;
  inline void clear_triggertype();
  static const int kTriggerTypeFieldNumber = 3;
  inline ::google::protobuf::int32 triggertype() const;
  inline void set_triggertype(::google::protobuf::int32 value);

  // optional int32 castCheckType = 4;
  inline bool has_castchecktype() const;
  inline void clear_castchecktype();
  static const int kCastCheckTypeFieldNumber = 4;
  inline ::google::protobuf::int32 castchecktype() const;
  inline void set_castchecktype(::google::protobuf::int32 value);

  // optional int32 duration = 5;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 5;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // required int32 skillCd = 6;
  inline bool has_skillcd() const;
  inline void clear_skillcd();
  static const int kSkillCdFieldNumber = 6;
  inline ::google::protobuf::int32 skillcd() const;
  inline void set_skillcd(::google::protobuf::int32 value);

  // optional int32 cdTeam = 7;
  inline bool has_cdteam() const;
  inline void clear_cdteam();
  static const int kCdTeamFieldNumber = 7;
  inline ::google::protobuf::int32 cdteam() const;
  inline void set_cdteam(::google::protobuf::int32 value);

  // required int32 affectCamp = 10;
  inline bool has_affectcamp() const;
  inline void clear_affectcamp();
  static const int kAffectCampFieldNumber = 10;
  inline ::google::protobuf::int32 affectcamp() const;
  inline void set_affectcamp(::google::protobuf::int32 value);

  // required int32 attackDisMin = 11;
  inline bool has_attackdismin() const;
  inline void clear_attackdismin();
  static const int kAttackDisMinFieldNumber = 11;
  inline ::google::protobuf::int32 attackdismin() const;
  inline void set_attackdismin(::google::protobuf::int32 value);

  // required int32 attackDisLow = 12;
  inline bool has_attackdislow() const;
  inline void clear_attackdislow();
  static const int kAttackDisLowFieldNumber = 12;
  inline ::google::protobuf::int32 attackdislow() const;
  inline void set_attackdislow(::google::protobuf::int32 value);

  // required int32 attackDisUp = 13;
  inline bool has_attackdisup() const;
  inline void clear_attackdisup();
  static const int kAttackDisUpFieldNumber = 13;
  inline ::google::protobuf::int32 attackdisup() const;
  inline void set_attackdisup(::google::protobuf::int32 value);

  // optional int32 waitTime = 14;
  inline bool has_waittime() const;
  inline void clear_waittime();
  static const int kWaitTimeFieldNumber = 14;
  inline ::google::protobuf::int32 waittime() const;
  inline void set_waittime(::google::protobuf::int32 value);

  // optional int32 lastTime = 15;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 15;
  inline ::google::protobuf::int32 lasttime() const;
  inline void set_lasttime(::google::protobuf::int32 value);

  // optional int32 bulletSpeed = 16;
  inline bool has_bulletspeed() const;
  inline void clear_bulletspeed();
  static const int kBulletSpeedFieldNumber = 16;
  inline ::google::protobuf::int32 bulletspeed() const;
  inline void set_bulletspeed(::google::protobuf::int32 value);

  // required .SkillShape shape = 20;
  inline bool has_shape() const;
  inline void clear_shape();
  static const int kShapeFieldNumber = 20;
  inline const ::SkillShape& shape() const;
  inline ::SkillShape* mutable_shape();
  inline ::SkillShape* release_shape();
  inline void set_allocated_shape(::SkillShape* shape);

  // repeated int32 enemyIds = 21;
  inline int enemyids_size() const;
  inline void clear_enemyids();
  static const int kEnemyIdsFieldNumber = 21;
  inline ::google::protobuf::int32 enemyids(int index) const;
  inline void set_enemyids(int index, ::google::protobuf::int32 value);
  inline void add_enemyids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enemyids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enemyids();

  // repeated int32 enemyTypes = 22;
  inline int enemytypes_size() const;
  inline void clear_enemytypes();
  static const int kEnemyTypesFieldNumber = 22;
  inline ::google::protobuf::int32 enemytypes(int index) const;
  inline void set_enemytypes(int index, ::google::protobuf::int32 value);
  inline void add_enemytypes(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enemytypes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enemytypes();

  // repeated int32 buffIds = 23;
  inline int buffids_size() const;
  inline void clear_buffids();
  static const int kBuffIdsFieldNumber = 23;
  inline ::google::protobuf::int32 buffids(int index) const;
  inline void set_buffids(int index, ::google::protobuf::int32 value);
  inline void add_buffids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buffids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buffids();

  // required int32 damageCnt = 24;
  inline bool has_damagecnt() const;
  inline void clear_damagecnt();
  static const int kDamageCntFieldNumber = 24;
  inline ::google::protobuf::int32 damagecnt() const;
  inline void set_damagecnt(::google::protobuf::int32 value);

  // optional int32 damagePer = 25;
  inline bool has_damageper() const;
  inline void clear_damageper();
  static const int kDamagePerFieldNumber = 25;
  inline ::google::protobuf::int32 damageper() const;
  inline void set_damageper(::google::protobuf::int32 value);

  // optional int32 postSkill = 30;
  inline bool has_postskill() const;
  inline void clear_postskill();
  static const int kPostSkillFieldNumber = 30;
  inline ::google::protobuf::int32 postskill() const;
  inline void set_postskill(::google::protobuf::int32 value);

  // optional int32 postTime = 31;
  inline bool has_posttime() const;
  inline void clear_posttime();
  static const int kPostTimeFieldNumber = 31;
  inline ::google::protobuf::int32 posttime() const;
  inline void set_posttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BFSkillCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_triggertype();
  inline void clear_has_triggertype();
  inline void set_has_castchecktype();
  inline void clear_has_castchecktype();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_skillcd();
  inline void clear_has_skillcd();
  inline void set_has_cdteam();
  inline void clear_has_cdteam();
  inline void set_has_affectcamp();
  inline void clear_has_affectcamp();
  inline void set_has_attackdismin();
  inline void clear_has_attackdismin();
  inline void set_has_attackdislow();
  inline void clear_has_attackdislow();
  inline void set_has_attackdisup();
  inline void clear_has_attackdisup();
  inline void set_has_waittime();
  inline void clear_has_waittime();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_bulletspeed();
  inline void clear_has_bulletspeed();
  inline void set_has_shape();
  inline void clear_has_shape();
  inline void set_has_damagecnt();
  inline void clear_has_damagecnt();
  inline void set_has_damageper();
  inline void clear_has_damageper();
  inline void set_has_postskill();
  inline void clear_has_postskill();
  inline void set_has_posttime();
  inline void clear_has_posttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 triggertype_;
  ::google::protobuf::int32 castchecktype_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 skillcd_;
  ::google::protobuf::int32 cdteam_;
  ::google::protobuf::int32 affectcamp_;
  ::google::protobuf::int32 attackdismin_;
  ::google::protobuf::int32 attackdislow_;
  ::google::protobuf::int32 attackdisup_;
  ::google::protobuf::int32 waittime_;
  ::google::protobuf::int32 lasttime_;
  ::google::protobuf::int32 bulletspeed_;
  ::SkillShape* shape_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enemyids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enemytypes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buffids_;
  ::google::protobuf::int32 damagecnt_;
  ::google::protobuf::int32 damageper_;
  ::google::protobuf::int32 postskill_;
  ::google::protobuf::int32 posttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BFSkillCfg* default_instance_;
};
// -------------------------------------------------------------------

class BFBuffCfg : public ::google::protobuf::Message {
 public:
  BFBuffCfg();
  virtual ~BFBuffCfg();

  BFBuffCfg(const BFBuffCfg& from);

  inline BFBuffCfg& operator=(const BFBuffCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BFBuffCfg& default_instance();

  void Swap(BFBuffCfg* other);

  // implements Message ----------------------------------------------

  BFBuffCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BFBuffCfg& from);
  void MergeFrom(const BFBuffCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 valueType = 3;
  inline bool has_valuetype() const;
  inline void clear_valuetype();
  static const int kValueTypeFieldNumber = 3;
  inline ::google::protobuf::int32 valuetype() const;
  inline void set_valuetype(::google::protobuf::int32 value);

  // required int32 duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional int32 createUnitId = 10;
  inline bool has_createunitid() const;
  inline void clear_createunitid();
  static const int kCreateUnitIdFieldNumber = 10;
  inline ::google::protobuf::int32 createunitid() const;
  inline void set_createunitid(::google::protobuf::int32 value);

  // optional int32 createUnitCnt = 11;
  inline bool has_createunitcnt() const;
  inline void clear_createunitcnt();
  static const int kCreateUnitCntFieldNumber = 11;
  inline ::google::protobuf::int32 createunitcnt() const;
  inline void set_createunitcnt(::google::protobuf::int32 value);

  // repeated .BuffDmgCalc dmgCalc = 20;
  inline int dmgcalc_size() const;
  inline void clear_dmgcalc();
  static const int kDmgCalcFieldNumber = 20;
  inline const ::BuffDmgCalc& dmgcalc(int index) const;
  inline ::BuffDmgCalc* mutable_dmgcalc(int index);
  inline ::BuffDmgCalc* add_dmgcalc();
  inline const ::google::protobuf::RepeatedPtrField< ::BuffDmgCalc >&
      dmgcalc() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuffDmgCalc >*
      mutable_dmgcalc();

  // @@protoc_insertion_point(class_scope:BFBuffCfg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_valuetype();
  inline void clear_has_valuetype();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_createunitid();
  inline void clear_has_createunitid();
  inline void set_has_createunitcnt();
  inline void clear_has_createunitcnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 valuetype_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 createunitid_;
  ::google::protobuf::int32 createunitcnt_;
  ::google::protobuf::RepeatedPtrField< ::BuffDmgCalc > dmgcalc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BFBuffCfg* default_instance_;
};
// -------------------------------------------------------------------

class BuffDmgCalc : public ::google::protobuf::Message {
 public:
  BuffDmgCalc();
  virtual ~BuffDmgCalc();

  BuffDmgCalc(const BuffDmgCalc& from);

  inline BuffDmgCalc& operator=(const BuffDmgCalc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffDmgCalc& default_instance();

  void Swap(BuffDmgCalc* other);

  // implements Message ----------------------------------------------

  BuffDmgCalc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffDmgCalc& from);
  void MergeFrom(const BuffDmgCalc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required float dmgParam1 = 2;
  inline bool has_dmgparam1() const;
  inline void clear_dmgparam1();
  static const int kDmgParam1FieldNumber = 2;
  inline float dmgparam1() const;
  inline void set_dmgparam1(float value);

  // required float dmgParam2 = 3;
  inline bool has_dmgparam2() const;
  inline void clear_dmgparam2();
  static const int kDmgParam2FieldNumber = 3;
  inline float dmgparam2() const;
  inline void set_dmgparam2(float value);

  // required float dmgParam3 = 4;
  inline bool has_dmgparam3() const;
  inline void clear_dmgparam3();
  static const int kDmgParam3FieldNumber = 4;
  inline float dmgparam3() const;
  inline void set_dmgparam3(float value);

  // @@protoc_insertion_point(class_scope:BuffDmgCalc)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_dmgparam1();
  inline void clear_has_dmgparam1();
  inline void set_has_dmgparam2();
  inline void clear_has_dmgparam2();
  inline void set_has_dmgparam3();
  inline void clear_has_dmgparam3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  float dmgparam1_;
  float dmgparam2_;
  float dmgparam3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleCfg_2eproto();
  friend void protobuf_AssignDesc_BattleCfg_2eproto();
  friend void protobuf_ShutdownFile_BattleCfg_2eproto();

  void InitAsDefaultInstance();
  static BuffDmgCalc* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillShape

// required int32 shapeType = 1;
inline bool SkillShape::has_shapetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillShape::set_has_shapetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillShape::clear_has_shapetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillShape::clear_shapetype() {
  shapetype_ = 0;
  clear_has_shapetype();
}
inline ::google::protobuf::int32 SkillShape::shapetype() const {
  return shapetype_;
}
inline void SkillShape::set_shapetype(::google::protobuf::int32 value) {
  set_has_shapetype();
  shapetype_ = value;
}

// optional int32 width = 2;
inline bool SkillShape::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillShape::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillShape::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillShape::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 SkillShape::width() const {
  return width_;
}
inline void SkillShape::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// optional int32 height = 3;
inline bool SkillShape::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillShape::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillShape::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillShape::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 SkillShape::height() const {
  return height_;
}
inline void SkillShape::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// optional int32 range = 4;
inline bool SkillShape::has_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillShape::set_has_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillShape::clear_has_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillShape::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline ::google::protobuf::int32 SkillShape::range() const {
  return range_;
}
inline void SkillShape::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
}

// optional int32 angle = 5;
inline bool SkillShape::has_angle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillShape::set_has_angle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillShape::clear_has_angle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillShape::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 SkillShape::angle() const {
  return angle_;
}
inline void SkillShape::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// UnitSize

// required int32 width = 1;
inline bool UnitSize::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitSize::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitSize::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitSize::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 UnitSize::width() const {
  return width_;
}
inline void UnitSize::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// required int32 height = 2;
inline bool UnitSize::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitSize::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitSize::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitSize::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 UnitSize::height() const {
  return height_;
}
inline void UnitSize::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// -------------------------------------------------------------------

// UnitPos

// required int32 x = 1;
inline bool UnitPos::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitPos::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitPos::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitPos::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 UnitPos::x() const {
  return x_;
}
inline void UnitPos::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 2;
inline bool UnitPos::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitPos::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitPos::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitPos::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 UnitPos::y() const {
  return y_;
}
inline void UnitPos::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// UnitAttr

// optional int32 unitHp = 1;
inline bool UnitAttr::has_unithp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitAttr::set_has_unithp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitAttr::clear_has_unithp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitAttr::clear_unithp() {
  unithp_ = 0;
  clear_has_unithp();
}
inline ::google::protobuf::int32 UnitAttr::unithp() const {
  return unithp_;
}
inline void UnitAttr::set_unithp(::google::protobuf::int32 value) {
  set_has_unithp();
  unithp_ = value;
}

// optional int32 unitAttack = 2;
inline bool UnitAttr::has_unitattack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitAttr::set_has_unitattack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitAttr::clear_has_unitattack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitAttr::clear_unitattack() {
  unitattack_ = 0;
  clear_has_unitattack();
}
inline ::google::protobuf::int32 UnitAttr::unitattack() const {
  return unitattack_;
}
inline void UnitAttr::set_unitattack(::google::protobuf::int32 value) {
  set_has_unitattack();
  unitattack_ = value;
}

// optional int32 unitDefence = 3;
inline bool UnitAttr::has_unitdefence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnitAttr::set_has_unitdefence() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnitAttr::clear_has_unitdefence() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnitAttr::clear_unitdefence() {
  unitdefence_ = 0;
  clear_has_unitdefence();
}
inline ::google::protobuf::int32 UnitAttr::unitdefence() const {
  return unitdefence_;
}
inline void UnitAttr::set_unitdefence(::google::protobuf::int32 value) {
  set_has_unitdefence();
  unitdefence_ = value;
}

// optional int32 unitHit = 4;
inline bool UnitAttr::has_unithit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnitAttr::set_has_unithit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnitAttr::clear_has_unithit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnitAttr::clear_unithit() {
  unithit_ = 0;
  clear_has_unithit();
}
inline ::google::protobuf::int32 UnitAttr::unithit() const {
  return unithit_;
}
inline void UnitAttr::set_unithit(::google::protobuf::int32 value) {
  set_has_unithit();
  unithit_ = value;
}

// optional int32 unitMiss = 5;
inline bool UnitAttr::has_unitmiss() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnitAttr::set_has_unitmiss() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnitAttr::clear_has_unitmiss() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnitAttr::clear_unitmiss() {
  unitmiss_ = 0;
  clear_has_unitmiss();
}
inline ::google::protobuf::int32 UnitAttr::unitmiss() const {
  return unitmiss_;
}
inline void UnitAttr::set_unitmiss(::google::protobuf::int32 value) {
  set_has_unitmiss();
  unitmiss_ = value;
}

// optional int32 unitCrit = 6;
inline bool UnitAttr::has_unitcrit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnitAttr::set_has_unitcrit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnitAttr::clear_has_unitcrit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnitAttr::clear_unitcrit() {
  unitcrit_ = 0;
  clear_has_unitcrit();
}
inline ::google::protobuf::int32 UnitAttr::unitcrit() const {
  return unitcrit_;
}
inline void UnitAttr::set_unitcrit(::google::protobuf::int32 value) {
  set_has_unitcrit();
  unitcrit_ = value;
}

// optional int32 unitAntiCrit = 7;
inline bool UnitAttr::has_unitanticrit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UnitAttr::set_has_unitanticrit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UnitAttr::clear_has_unitanticrit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UnitAttr::clear_unitanticrit() {
  unitanticrit_ = 0;
  clear_has_unitanticrit();
}
inline ::google::protobuf::int32 UnitAttr::unitanticrit() const {
  return unitanticrit_;
}
inline void UnitAttr::set_unitanticrit(::google::protobuf::int32 value) {
  set_has_unitanticrit();
  unitanticrit_ = value;
}

// -------------------------------------------------------------------

// UnitData

// required int32 id = 1;
inline bool UnitData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnitData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnitData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnitData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UnitData::id() const {
  return id_;
}
inline void UnitData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 itemId = 2;
inline bool UnitData::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnitData::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnitData::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnitData::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 UnitData::itemid() const {
  return itemid_;
}
inline void UnitData::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 count = 3;
inline bool UnitData::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnitData::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnitData::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnitData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 UnitData::count() const {
  return count_;
}
inline void UnitData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 hp = 4;
inline bool UnitData::has_hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnitData::set_has_hp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnitData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnitData::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 UnitData::hp() const {
  return hp_;
}
inline void UnitData::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// optional int32 monsterId = 5;
inline bool UnitData::has_monsterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnitData::set_has_monsterid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnitData::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnitData::clear_monsterid() {
  monsterid_ = 0;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 UnitData::monsterid() const {
  return monsterid_;
}
inline void UnitData::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
}

// optional .UnitAttr unitAttr = 6;
inline bool UnitData::has_unitattr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnitData::set_has_unitattr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnitData::clear_has_unitattr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnitData::clear_unitattr() {
  if (unitattr_ != NULL) unitattr_->::UnitAttr::Clear();
  clear_has_unitattr();
}
inline const ::UnitAttr& UnitData::unitattr() const {
  return unitattr_ != NULL ? *unitattr_ : *default_instance_->unitattr_;
}
inline ::UnitAttr* UnitData::mutable_unitattr() {
  set_has_unitattr();
  if (unitattr_ == NULL) unitattr_ = new ::UnitAttr;
  return unitattr_;
}
inline ::UnitAttr* UnitData::release_unitattr() {
  clear_has_unitattr();
  ::UnitAttr* temp = unitattr_;
  unitattr_ = NULL;
  return temp;
}
inline void UnitData::set_allocated_unitattr(::UnitAttr* unitattr) {
  delete unitattr_;
  unitattr_ = unitattr;
  if (unitattr) {
    set_has_unitattr();
  } else {
    clear_has_unitattr();
  }
}

// optional int32 level = 7;
inline bool UnitData::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UnitData::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UnitData::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UnitData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 UnitData::level() const {
  return level_;
}
inline void UnitData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 troopType = 8;
inline bool UnitData::has_trooptype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UnitData::set_has_trooptype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UnitData::clear_has_trooptype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UnitData::clear_trooptype() {
  trooptype_ = 0;
  clear_has_trooptype();
}
inline ::google::protobuf::int32 UnitData::trooptype() const {
  return trooptype_;
}
inline void UnitData::set_trooptype(::google::protobuf::int32 value) {
  set_has_trooptype();
  trooptype_ = value;
}

// optional int32 groupId = 9;
inline bool UnitData::has_groupid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UnitData::set_has_groupid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UnitData::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UnitData::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 UnitData::groupid() const {
  return groupid_;
}
inline void UnitData::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// optional int32 extendState = 10;
inline bool UnitData::has_extendstate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UnitData::set_has_extendstate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UnitData::clear_has_extendstate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UnitData::clear_extendstate() {
  extendstate_ = 0;
  clear_has_extendstate();
}
inline ::google::protobuf::int32 UnitData::extendstate() const {
  return extendstate_;
}
inline void UnitData::set_extendstate(::google::protobuf::int32 value) {
  set_has_extendstate();
  extendstate_ = value;
}

// optional string playerId = 11;
inline bool UnitData::has_playerid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UnitData::set_has_playerid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UnitData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UnitData::clear_playerid() {
  if (playerid_ != &::google::protobuf::internal::kEmptyString) {
    playerid_->clear();
  }
  clear_has_playerid();
}
inline const ::std::string& UnitData::playerid() const {
  return *playerid_;
}
inline void UnitData::set_playerid(const ::std::string& value) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(value);
}
inline void UnitData::set_playerid(const char* value) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(value);
}
inline void UnitData::set_playerid(const char* value, size_t size) {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  playerid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UnitData::mutable_playerid() {
  set_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    playerid_ = new ::std::string;
  }
  return playerid_;
}
inline ::std::string* UnitData::release_playerid() {
  clear_has_playerid();
  if (playerid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playerid_;
    playerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UnitData::set_allocated_playerid(::std::string* playerid) {
  if (playerid_ != &::google::protobuf::internal::kEmptyString) {
    delete playerid_;
  }
  if (playerid) {
    set_has_playerid();
    playerid_ = playerid;
  } else {
    clear_has_playerid();
    playerid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .UnitPos pos = 12;
inline bool UnitData::has_pos() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UnitData::set_has_pos() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UnitData::clear_has_pos() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UnitData::clear_pos() {
  if (pos_ != NULL) pos_->::UnitPos::Clear();
  clear_has_pos();
}
inline const ::UnitPos& UnitData::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::UnitPos* UnitData::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::UnitPos;
  return pos_;
}
inline ::UnitPos* UnitData::release_pos() {
  clear_has_pos();
  ::UnitPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void UnitData::set_allocated_pos(::UnitPos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// repeated .SkillData skillDatas = 13;
inline int UnitData::skilldatas_size() const {
  return skilldatas_.size();
}
inline void UnitData::clear_skilldatas() {
  skilldatas_.Clear();
}
inline const ::SkillData& UnitData::skilldatas(int index) const {
  return skilldatas_.Get(index);
}
inline ::SkillData* UnitData::mutable_skilldatas(int index) {
  return skilldatas_.Mutable(index);
}
inline ::SkillData* UnitData::add_skilldatas() {
  return skilldatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillData >&
UnitData::skilldatas() const {
  return skilldatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillData >*
UnitData::mutable_skilldatas() {
  return &skilldatas_;
}

// repeated .KillData killDatas = 14;
inline int UnitData::killdatas_size() const {
  return killdatas_.size();
}
inline void UnitData::clear_killdatas() {
  killdatas_.Clear();
}
inline const ::KillData& UnitData::killdatas(int index) const {
  return killdatas_.Get(index);
}
inline ::KillData* UnitData::mutable_killdatas(int index) {
  return killdatas_.Mutable(index);
}
inline ::KillData* UnitData::add_killdatas() {
  return killdatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KillData >&
UnitData::killdatas() const {
  return killdatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::KillData >*
UnitData::mutable_killdatas() {
  return &killdatas_;
}

// -------------------------------------------------------------------

// KillData

// required int32 id = 1;
inline bool KillData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 KillData::id() const {
  return id_;
}
inline void KillData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 count = 2;
inline bool KillData::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KillData::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KillData::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KillData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 KillData::count() const {
  return count_;
}
inline void KillData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// SkillData

// required int32 id = 1;
inline bool SkillData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillData::id() const {
  return id_;
}
inline void SkillData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 level = 2;
inline bool SkillData::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillData::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillData::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SkillData::level() const {
  return level_;
}
inline void SkillData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// BFMapCfg

// required int32 id = 1;
inline bool BFMapCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFMapCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFMapCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFMapCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BFMapCfg::id() const {
  return id_;
}
inline void BFMapCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 width = 2;
inline bool BFMapCfg::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFMapCfg::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFMapCfg::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFMapCfg::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BFMapCfg::width() const {
  return width_;
}
inline void BFMapCfg::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// required int32 height = 3;
inline bool BFMapCfg::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFMapCfg::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFMapCfg::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFMapCfg::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BFMapCfg::height() const {
  return height_;
}
inline void BFMapCfg::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// required int32 tileWidth = 4;
inline bool BFMapCfg::has_tilewidth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BFMapCfg::set_has_tilewidth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BFMapCfg::clear_has_tilewidth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BFMapCfg::clear_tilewidth() {
  tilewidth_ = 0;
  clear_has_tilewidth();
}
inline ::google::protobuf::int32 BFMapCfg::tilewidth() const {
  return tilewidth_;
}
inline void BFMapCfg::set_tilewidth(::google::protobuf::int32 value) {
  set_has_tilewidth();
  tilewidth_ = value;
}

// required int32 tileHeight = 5;
inline bool BFMapCfg::has_tileheight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BFMapCfg::set_has_tileheight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BFMapCfg::clear_has_tileheight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BFMapCfg::clear_tileheight() {
  tileheight_ = 0;
  clear_has_tileheight();
}
inline ::google::protobuf::int32 BFMapCfg::tileheight() const {
  return tileheight_;
}
inline void BFMapCfg::set_tileheight(::google::protobuf::int32 value) {
  set_has_tileheight();
  tileheight_ = value;
}

// required .UnitPos atkPos = 10;
inline bool BFMapCfg::has_atkpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BFMapCfg::set_has_atkpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BFMapCfg::clear_has_atkpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BFMapCfg::clear_atkpos() {
  if (atkpos_ != NULL) atkpos_->::UnitPos::Clear();
  clear_has_atkpos();
}
inline const ::UnitPos& BFMapCfg::atkpos() const {
  return atkpos_ != NULL ? *atkpos_ : *default_instance_->atkpos_;
}
inline ::UnitPos* BFMapCfg::mutable_atkpos() {
  set_has_atkpos();
  if (atkpos_ == NULL) atkpos_ = new ::UnitPos;
  return atkpos_;
}
inline ::UnitPos* BFMapCfg::release_atkpos() {
  clear_has_atkpos();
  ::UnitPos* temp = atkpos_;
  atkpos_ = NULL;
  return temp;
}
inline void BFMapCfg::set_allocated_atkpos(::UnitPos* atkpos) {
  delete atkpos_;
  atkpos_ = atkpos;
  if (atkpos) {
    set_has_atkpos();
  } else {
    clear_has_atkpos();
  }
}

// required .UnitPos defPos = 11;
inline bool BFMapCfg::has_defpos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BFMapCfg::set_has_defpos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BFMapCfg::clear_has_defpos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BFMapCfg::clear_defpos() {
  if (defpos_ != NULL) defpos_->::UnitPos::Clear();
  clear_has_defpos();
}
inline const ::UnitPos& BFMapCfg::defpos() const {
  return defpos_ != NULL ? *defpos_ : *default_instance_->defpos_;
}
inline ::UnitPos* BFMapCfg::mutable_defpos() {
  set_has_defpos();
  if (defpos_ == NULL) defpos_ = new ::UnitPos;
  return defpos_;
}
inline ::UnitPos* BFMapCfg::release_defpos() {
  clear_has_defpos();
  ::UnitPos* temp = defpos_;
  defpos_ = NULL;
  return temp;
}
inline void BFMapCfg::set_allocated_defpos(::UnitPos* defpos) {
  delete defpos_;
  defpos_ = defpos;
  if (defpos) {
    set_has_defpos();
  } else {
    clear_has_defpos();
  }
}

// optional .UnitPos warPos = 12;
inline bool BFMapCfg::has_warpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BFMapCfg::set_has_warpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BFMapCfg::clear_has_warpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BFMapCfg::clear_warpos() {
  if (warpos_ != NULL) warpos_->::UnitPos::Clear();
  clear_has_warpos();
}
inline const ::UnitPos& BFMapCfg::warpos() const {
  return warpos_ != NULL ? *warpos_ : *default_instance_->warpos_;
}
inline ::UnitPos* BFMapCfg::mutable_warpos() {
  set_has_warpos();
  if (warpos_ == NULL) warpos_ = new ::UnitPos;
  return warpos_;
}
inline ::UnitPos* BFMapCfg::release_warpos() {
  clear_has_warpos();
  ::UnitPos* temp = warpos_;
  warpos_ = NULL;
  return temp;
}
inline void BFMapCfg::set_allocated_warpos(::UnitPos* warpos) {
  delete warpos_;
  warpos_ = warpos;
  if (warpos) {
    set_has_warpos();
  } else {
    clear_has_warpos();
  }
}

// optional int32 hoverTime = 13;
inline bool BFMapCfg::has_hovertime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BFMapCfg::set_has_hovertime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BFMapCfg::clear_has_hovertime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BFMapCfg::clear_hovertime() {
  hovertime_ = 0;
  clear_has_hovertime();
}
inline ::google::protobuf::int32 BFMapCfg::hovertime() const {
  return hovertime_;
}
inline void BFMapCfg::set_hovertime(::google::protobuf::int32 value) {
  set_has_hovertime();
  hovertime_ = value;
}

// optional int32 maxFindStep = 14;
inline bool BFMapCfg::has_maxfindstep() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BFMapCfg::set_has_maxfindstep() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BFMapCfg::clear_has_maxfindstep() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BFMapCfg::clear_maxfindstep() {
  maxfindstep_ = 0;
  clear_has_maxfindstep();
}
inline ::google::protobuf::int32 BFMapCfg::maxfindstep() const {
  return maxfindstep_;
}
inline void BFMapCfg::set_maxfindstep(::google::protobuf::int32 value) {
  set_has_maxfindstep();
  maxfindstep_ = value;
}

// repeated int32 datas = 20;
inline int BFMapCfg::datas_size() const {
  return datas_.size();
}
inline void BFMapCfg::clear_datas() {
  datas_.Clear();
}
inline ::google::protobuf::int32 BFMapCfg::datas(int index) const {
  return datas_.Get(index);
}
inline void BFMapCfg::set_datas(int index, ::google::protobuf::int32 value) {
  datas_.Set(index, value);
}
inline void BFMapCfg::add_datas(::google::protobuf::int32 value) {
  datas_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BFMapCfg::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BFMapCfg::mutable_datas() {
  return &datas_;
}

// repeated .UnitPos navmeshes = 21;
inline int BFMapCfg::navmeshes_size() const {
  return navmeshes_.size();
}
inline void BFMapCfg::clear_navmeshes() {
  navmeshes_.Clear();
}
inline const ::UnitPos& BFMapCfg::navmeshes(int index) const {
  return navmeshes_.Get(index);
}
inline ::UnitPos* BFMapCfg::mutable_navmeshes(int index) {
  return navmeshes_.Mutable(index);
}
inline ::UnitPos* BFMapCfg::add_navmeshes() {
  return navmeshes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UnitPos >&
BFMapCfg::navmeshes() const {
  return navmeshes_;
}
inline ::google::protobuf::RepeatedPtrField< ::UnitPos >*
BFMapCfg::mutable_navmeshes() {
  return &navmeshes_;
}

// -------------------------------------------------------------------

// BFMissionCfg

// required int32 id = 1;
inline bool BFMissionCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFMissionCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFMissionCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFMissionCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BFMissionCfg::id() const {
  return id_;
}
inline void BFMissionCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool BFMissionCfg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFMissionCfg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFMissionCfg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFMissionCfg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BFMissionCfg::type() const {
  return type_;
}
inline void BFMissionCfg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 mapId = 3;
inline bool BFMissionCfg::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFMissionCfg::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFMissionCfg::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFMissionCfg::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 BFMissionCfg::mapid() const {
  return mapid_;
}
inline void BFMissionCfg::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required int32 timeLimit = 4;
inline bool BFMissionCfg::has_timelimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BFMissionCfg::set_has_timelimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BFMissionCfg::clear_has_timelimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BFMissionCfg::clear_timelimit() {
  timelimit_ = 0;
  clear_has_timelimit();
}
inline ::google::protobuf::int32 BFMissionCfg::timelimit() const {
  return timelimit_;
}
inline void BFMissionCfg::set_timelimit(::google::protobuf::int32 value) {
  set_has_timelimit();
  timelimit_ = value;
}

// required int32 atkWarningY = 6;
inline bool BFMissionCfg::has_atkwarningy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BFMissionCfg::set_has_atkwarningy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BFMissionCfg::clear_has_atkwarningy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BFMissionCfg::clear_atkwarningy() {
  atkwarningy_ = 0;
  clear_has_atkwarningy();
}
inline ::google::protobuf::int32 BFMissionCfg::atkwarningy() const {
  return atkwarningy_;
}
inline void BFMissionCfg::set_atkwarningy(::google::protobuf::int32 value) {
  set_has_atkwarningy();
  atkwarningy_ = value;
}

// required int32 defWarningY = 7;
inline bool BFMissionCfg::has_defwarningy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BFMissionCfg::set_has_defwarningy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BFMissionCfg::clear_has_defwarningy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BFMissionCfg::clear_defwarningy() {
  defwarningy_ = 0;
  clear_has_defwarningy();
}
inline ::google::protobuf::int32 BFMissionCfg::defwarningy() const {
  return defwarningy_;
}
inline void BFMissionCfg::set_defwarningy(::google::protobuf::int32 value) {
  set_has_defwarningy();
  defwarningy_ = value;
}

// repeated int32 atkTargetItems = 11;
inline int BFMissionCfg::atktargetitems_size() const {
  return atktargetitems_.size();
}
inline void BFMissionCfg::clear_atktargetitems() {
  atktargetitems_.Clear();
}
inline ::google::protobuf::int32 BFMissionCfg::atktargetitems(int index) const {
  return atktargetitems_.Get(index);
}
inline void BFMissionCfg::set_atktargetitems(int index, ::google::protobuf::int32 value) {
  atktargetitems_.Set(index, value);
}
inline void BFMissionCfg::add_atktargetitems(::google::protobuf::int32 value) {
  atktargetitems_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BFMissionCfg::atktargetitems() const {
  return atktargetitems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BFMissionCfg::mutable_atktargetitems() {
  return &atktargetitems_;
}

// repeated int32 defTargetItems = 12;
inline int BFMissionCfg::deftargetitems_size() const {
  return deftargetitems_.size();
}
inline void BFMissionCfg::clear_deftargetitems() {
  deftargetitems_.Clear();
}
inline ::google::protobuf::int32 BFMissionCfg::deftargetitems(int index) const {
  return deftargetitems_.Get(index);
}
inline void BFMissionCfg::set_deftargetitems(int index, ::google::protobuf::int32 value) {
  deftargetitems_.Set(index, value);
}
inline void BFMissionCfg::add_deftargetitems(::google::protobuf::int32 value) {
  deftargetitems_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BFMissionCfg::deftargetitems() const {
  return deftargetitems_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BFMissionCfg::mutable_deftargetitems() {
  return &deftargetitems_;
}

// repeated .MissionUnit atkUnits = 13;
inline int BFMissionCfg::atkunits_size() const {
  return atkunits_.size();
}
inline void BFMissionCfg::clear_atkunits() {
  atkunits_.Clear();
}
inline const ::MissionUnit& BFMissionCfg::atkunits(int index) const {
  return atkunits_.Get(index);
}
inline ::MissionUnit* BFMissionCfg::mutable_atkunits(int index) {
  return atkunits_.Mutable(index);
}
inline ::MissionUnit* BFMissionCfg::add_atkunits() {
  return atkunits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MissionUnit >&
BFMissionCfg::atkunits() const {
  return atkunits_;
}
inline ::google::protobuf::RepeatedPtrField< ::MissionUnit >*
BFMissionCfg::mutable_atkunits() {
  return &atkunits_;
}

// repeated .MissionUnit defUnits = 14;
inline int BFMissionCfg::defunits_size() const {
  return defunits_.size();
}
inline void BFMissionCfg::clear_defunits() {
  defunits_.Clear();
}
inline const ::MissionUnit& BFMissionCfg::defunits(int index) const {
  return defunits_.Get(index);
}
inline ::MissionUnit* BFMissionCfg::mutable_defunits(int index) {
  return defunits_.Mutable(index);
}
inline ::MissionUnit* BFMissionCfg::add_defunits() {
  return defunits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MissionUnit >&
BFMissionCfg::defunits() const {
  return defunits_;
}
inline ::google::protobuf::RepeatedPtrField< ::MissionUnit >*
BFMissionCfg::mutable_defunits() {
  return &defunits_;
}

// repeated .DeployRange deployRangeList = 15;
inline int BFMissionCfg::deployrangelist_size() const {
  return deployrangelist_.size();
}
inline void BFMissionCfg::clear_deployrangelist() {
  deployrangelist_.Clear();
}
inline const ::DeployRange& BFMissionCfg::deployrangelist(int index) const {
  return deployrangelist_.Get(index);
}
inline ::DeployRange* BFMissionCfg::mutable_deployrangelist(int index) {
  return deployrangelist_.Mutable(index);
}
inline ::DeployRange* BFMissionCfg::add_deployrangelist() {
  return deployrangelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DeployRange >&
BFMissionCfg::deployrangelist() const {
  return deployrangelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::DeployRange >*
BFMissionCfg::mutable_deployrangelist() {
  return &deployrangelist_;
}

// -------------------------------------------------------------------

// DeployRange

// required int32 reserved = 1;
inline bool DeployRange::has_reserved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeployRange::set_has_reserved() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeployRange::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeployRange::clear_reserved() {
  reserved_ = 0;
  clear_has_reserved();
}
inline ::google::protobuf::int32 DeployRange::reserved() const {
  return reserved_;
}
inline void DeployRange::set_reserved(::google::protobuf::int32 value) {
  set_has_reserved();
  reserved_ = value;
}

// required .UnitPos rmin = 2;
inline bool DeployRange::has_rmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeployRange::set_has_rmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeployRange::clear_has_rmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeployRange::clear_rmin() {
  if (rmin_ != NULL) rmin_->::UnitPos::Clear();
  clear_has_rmin();
}
inline const ::UnitPos& DeployRange::rmin() const {
  return rmin_ != NULL ? *rmin_ : *default_instance_->rmin_;
}
inline ::UnitPos* DeployRange::mutable_rmin() {
  set_has_rmin();
  if (rmin_ == NULL) rmin_ = new ::UnitPos;
  return rmin_;
}
inline ::UnitPos* DeployRange::release_rmin() {
  clear_has_rmin();
  ::UnitPos* temp = rmin_;
  rmin_ = NULL;
  return temp;
}
inline void DeployRange::set_allocated_rmin(::UnitPos* rmin) {
  delete rmin_;
  rmin_ = rmin;
  if (rmin) {
    set_has_rmin();
  } else {
    clear_has_rmin();
  }
}

// required .UnitPos rmax = 3;
inline bool DeployRange::has_rmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeployRange::set_has_rmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeployRange::clear_has_rmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeployRange::clear_rmax() {
  if (rmax_ != NULL) rmax_->::UnitPos::Clear();
  clear_has_rmax();
}
inline const ::UnitPos& DeployRange::rmax() const {
  return rmax_ != NULL ? *rmax_ : *default_instance_->rmax_;
}
inline ::UnitPos* DeployRange::mutable_rmax() {
  set_has_rmax();
  if (rmax_ == NULL) rmax_ = new ::UnitPos;
  return rmax_;
}
inline ::UnitPos* DeployRange::release_rmax() {
  clear_has_rmax();
  ::UnitPos* temp = rmax_;
  rmax_ = NULL;
  return temp;
}
inline void DeployRange::set_allocated_rmax(::UnitPos* rmax) {
  delete rmax_;
  rmax_ = rmax;
  if (rmax) {
    set_has_rmax();
  } else {
    clear_has_rmax();
  }
}

// -------------------------------------------------------------------

// MissionUnit

// required int32 id = 1;
inline bool MissionUnit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionUnit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionUnit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionUnit::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MissionUnit::id() const {
  return id_;
}
inline void MissionUnit::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 objId = 2;
inline bool MissionUnit::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MissionUnit::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MissionUnit::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MissionUnit::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 MissionUnit::objid() const {
  return objid_;
}
inline void MissionUnit::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// required int32 groupId = 3;
inline bool MissionUnit::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MissionUnit::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MissionUnit::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MissionUnit::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 MissionUnit::groupid() const {
  return groupid_;
}
inline void MissionUnit::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
}

// required .UnitPos pos = 4;
inline bool MissionUnit::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MissionUnit::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MissionUnit::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MissionUnit::clear_pos() {
  if (pos_ != NULL) pos_->::UnitPos::Clear();
  clear_has_pos();
}
inline const ::UnitPos& MissionUnit::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::UnitPos* MissionUnit::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::UnitPos;
  return pos_;
}
inline ::UnitPos* MissionUnit::release_pos() {
  clear_has_pos();
  ::UnitPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MissionUnit::set_allocated_pos(::UnitPos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// required int32 initDir = 5;
inline bool MissionUnit::has_initdir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MissionUnit::set_has_initdir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MissionUnit::clear_has_initdir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MissionUnit::clear_initdir() {
  initdir_ = 0;
  clear_has_initdir();
}
inline ::google::protobuf::int32 MissionUnit::initdir() const {
  return initdir_;
}
inline void MissionUnit::set_initdir(::google::protobuf::int32 value) {
  set_has_initdir();
  initdir_ = value;
}

// -------------------------------------------------------------------

// BFUnitCfg

// required int32 id = 1;
inline bool BFUnitCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFUnitCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFUnitCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFUnitCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BFUnitCfg::id() const {
  return id_;
}
inline void BFUnitCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool BFUnitCfg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFUnitCfg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFUnitCfg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFUnitCfg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BFUnitCfg::type() const {
  return type_;
}
inline void BFUnitCfg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required .UnitSize size = 3;
inline bool BFUnitCfg::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFUnitCfg::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFUnitCfg::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFUnitCfg::clear_size() {
  if (size_ != NULL) size_->::UnitSize::Clear();
  clear_has_size();
}
inline const ::UnitSize& BFUnitCfg::size() const {
  return size_ != NULL ? *size_ : *default_instance_->size_;
}
inline ::UnitSize* BFUnitCfg::mutable_size() {
  set_has_size();
  if (size_ == NULL) size_ = new ::UnitSize;
  return size_;
}
inline ::UnitSize* BFUnitCfg::release_size() {
  clear_has_size();
  ::UnitSize* temp = size_;
  size_ = NULL;
  return temp;
}
inline void BFUnitCfg::set_allocated_size(::UnitSize* size) {
  delete size_;
  size_ = size;
  if (size) {
    set_has_size();
  } else {
    clear_has_size();
  }
}

// required int32 posPrior = 4;
inline bool BFUnitCfg::has_posprior() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BFUnitCfg::set_has_posprior() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BFUnitCfg::clear_has_posprior() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BFUnitCfg::clear_posprior() {
  posprior_ = 0;
  clear_has_posprior();
}
inline ::google::protobuf::int32 BFUnitCfg::posprior() const {
  return posprior_;
}
inline void BFUnitCfg::set_posprior(::google::protobuf::int32 value) {
  set_has_posprior();
  posprior_ = value;
}

// required int32 viewRange = 5;
inline bool BFUnitCfg::has_viewrange() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BFUnitCfg::set_has_viewrange() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BFUnitCfg::clear_has_viewrange() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BFUnitCfg::clear_viewrange() {
  viewrange_ = 0;
  clear_has_viewrange();
}
inline ::google::protobuf::int32 BFUnitCfg::viewrange() const {
  return viewrange_;
}
inline void BFUnitCfg::set_viewrange(::google::protobuf::int32 value) {
  set_has_viewrange();
  viewrange_ = value;
}

// required int32 trackRange = 6;
inline bool BFUnitCfg::has_trackrange() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BFUnitCfg::set_has_trackrange() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BFUnitCfg::clear_has_trackrange() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BFUnitCfg::clear_trackrange() {
  trackrange_ = 0;
  clear_has_trackrange();
}
inline ::google::protobuf::int32 BFUnitCfg::trackrange() const {
  return trackrange_;
}
inline void BFUnitCfg::set_trackrange(::google::protobuf::int32 value) {
  set_has_trackrange();
  trackrange_ = value;
}

// required int32 idlePeriod = 10;
inline bool BFUnitCfg::has_idleperiod() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BFUnitCfg::set_has_idleperiod() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BFUnitCfg::clear_has_idleperiod() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BFUnitCfg::clear_idleperiod() {
  idleperiod_ = 0;
  clear_has_idleperiod();
}
inline ::google::protobuf::int32 BFUnitCfg::idleperiod() const {
  return idleperiod_;
}
inline void BFUnitCfg::set_idleperiod(::google::protobuf::int32 value) {
  set_has_idleperiod();
  idleperiod_ = value;
}

// required int32 movePeriod = 11;
inline bool BFUnitCfg::has_moveperiod() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BFUnitCfg::set_has_moveperiod() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BFUnitCfg::clear_has_moveperiod() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BFUnitCfg::clear_moveperiod() {
  moveperiod_ = 0;
  clear_has_moveperiod();
}
inline ::google::protobuf::int32 BFUnitCfg::moveperiod() const {
  return moveperiod_;
}
inline void BFUnitCfg::set_moveperiod(::google::protobuf::int32 value) {
  set_has_moveperiod();
  moveperiod_ = value;
}

// optional int32 turnPeriod = 12;
inline bool BFUnitCfg::has_turnperiod() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BFUnitCfg::set_has_turnperiod() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BFUnitCfg::clear_has_turnperiod() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BFUnitCfg::clear_turnperiod() {
  turnperiod_ = 0;
  clear_has_turnperiod();
}
inline ::google::protobuf::int32 BFUnitCfg::turnperiod() const {
  return turnperiod_;
}
inline void BFUnitCfg::set_turnperiod(::google::protobuf::int32 value) {
  set_has_turnperiod();
  turnperiod_ = value;
}

// optional int32 moveStep = 13;
inline bool BFUnitCfg::has_movestep() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BFUnitCfg::set_has_movestep() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BFUnitCfg::clear_has_movestep() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BFUnitCfg::clear_movestep() {
  movestep_ = 0;
  clear_has_movestep();
}
inline ::google::protobuf::int32 BFUnitCfg::movestep() const {
  return movestep_;
}
inline void BFUnitCfg::set_movestep(::google::protobuf::int32 value) {
  set_has_movestep();
  movestep_ = value;
}

// optional int32 freeFly = 14;
inline bool BFUnitCfg::has_freefly() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BFUnitCfg::set_has_freefly() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BFUnitCfg::clear_has_freefly() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BFUnitCfg::clear_freefly() {
  freefly_ = 0;
  clear_has_freefly();
}
inline ::google::protobuf::int32 BFUnitCfg::freefly() const {
  return freefly_;
}
inline void BFUnitCfg::set_freefly(::google::protobuf::int32 value) {
  set_has_freefly();
  freefly_ = value;
}

// repeated .SkillData skillDatas = 20;
inline int BFUnitCfg::skilldatas_size() const {
  return skilldatas_.size();
}
inline void BFUnitCfg::clear_skilldatas() {
  skilldatas_.Clear();
}
inline const ::SkillData& BFUnitCfg::skilldatas(int index) const {
  return skilldatas_.Get(index);
}
inline ::SkillData* BFUnitCfg::mutable_skilldatas(int index) {
  return skilldatas_.Mutable(index);
}
inline ::SkillData* BFUnitCfg::add_skilldatas() {
  return skilldatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillData >&
BFUnitCfg::skilldatas() const {
  return skilldatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillData >*
BFUnitCfg::mutable_skilldatas() {
  return &skilldatas_;
}

// -------------------------------------------------------------------

// BFMonsterCfg

// required int32 id = 1;
inline bool BFMonsterCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFMonsterCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFMonsterCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFMonsterCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BFMonsterCfg::id() const {
  return id_;
}
inline void BFMonsterCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 itemId = 2;
inline bool BFMonsterCfg::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFMonsterCfg::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFMonsterCfg::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFMonsterCfg::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 BFMonsterCfg::itemid() const {
  return itemid_;
}
inline void BFMonsterCfg::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required .UnitAttr unitAttr = 3;
inline bool BFMonsterCfg::has_unitattr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFMonsterCfg::set_has_unitattr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFMonsterCfg::clear_has_unitattr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFMonsterCfg::clear_unitattr() {
  if (unitattr_ != NULL) unitattr_->::UnitAttr::Clear();
  clear_has_unitattr();
}
inline const ::UnitAttr& BFMonsterCfg::unitattr() const {
  return unitattr_ != NULL ? *unitattr_ : *default_instance_->unitattr_;
}
inline ::UnitAttr* BFMonsterCfg::mutable_unitattr() {
  set_has_unitattr();
  if (unitattr_ == NULL) unitattr_ = new ::UnitAttr;
  return unitattr_;
}
inline ::UnitAttr* BFMonsterCfg::release_unitattr() {
  clear_has_unitattr();
  ::UnitAttr* temp = unitattr_;
  unitattr_ = NULL;
  return temp;
}
inline void BFMonsterCfg::set_allocated_unitattr(::UnitAttr* unitattr) {
  delete unitattr_;
  unitattr_ = unitattr;
  if (unitattr) {
    set_has_unitattr();
  } else {
    clear_has_unitattr();
  }
}

// repeated .SkillData skillDatas = 4;
inline int BFMonsterCfg::skilldatas_size() const {
  return skilldatas_.size();
}
inline void BFMonsterCfg::clear_skilldatas() {
  skilldatas_.Clear();
}
inline const ::SkillData& BFMonsterCfg::skilldatas(int index) const {
  return skilldatas_.Get(index);
}
inline ::SkillData* BFMonsterCfg::mutable_skilldatas(int index) {
  return skilldatas_.Mutable(index);
}
inline ::SkillData* BFMonsterCfg::add_skilldatas() {
  return skilldatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillData >&
BFMonsterCfg::skilldatas() const {
  return skilldatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillData >*
BFMonsterCfg::mutable_skilldatas() {
  return &skilldatas_;
}

// -------------------------------------------------------------------

// BFSkillCfg

// required int32 id = 1;
inline bool BFSkillCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFSkillCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFSkillCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFSkillCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BFSkillCfg::id() const {
  return id_;
}
inline void BFSkillCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2;
inline bool BFSkillCfg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFSkillCfg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFSkillCfg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFSkillCfg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BFSkillCfg::type() const {
  return type_;
}
inline void BFSkillCfg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 triggerType = 3;
inline bool BFSkillCfg::has_triggertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFSkillCfg::set_has_triggertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFSkillCfg::clear_has_triggertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFSkillCfg::clear_triggertype() {
  triggertype_ = 0;
  clear_has_triggertype();
}
inline ::google::protobuf::int32 BFSkillCfg::triggertype() const {
  return triggertype_;
}
inline void BFSkillCfg::set_triggertype(::google::protobuf::int32 value) {
  set_has_triggertype();
  triggertype_ = value;
}

// optional int32 castCheckType = 4;
inline bool BFSkillCfg::has_castchecktype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BFSkillCfg::set_has_castchecktype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BFSkillCfg::clear_has_castchecktype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BFSkillCfg::clear_castchecktype() {
  castchecktype_ = 0;
  clear_has_castchecktype();
}
inline ::google::protobuf::int32 BFSkillCfg::castchecktype() const {
  return castchecktype_;
}
inline void BFSkillCfg::set_castchecktype(::google::protobuf::int32 value) {
  set_has_castchecktype();
  castchecktype_ = value;
}

// optional int32 duration = 5;
inline bool BFSkillCfg::has_duration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BFSkillCfg::set_has_duration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BFSkillCfg::clear_has_duration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BFSkillCfg::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 BFSkillCfg::duration() const {
  return duration_;
}
inline void BFSkillCfg::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// required int32 skillCd = 6;
inline bool BFSkillCfg::has_skillcd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BFSkillCfg::set_has_skillcd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BFSkillCfg::clear_has_skillcd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BFSkillCfg::clear_skillcd() {
  skillcd_ = 0;
  clear_has_skillcd();
}
inline ::google::protobuf::int32 BFSkillCfg::skillcd() const {
  return skillcd_;
}
inline void BFSkillCfg::set_skillcd(::google::protobuf::int32 value) {
  set_has_skillcd();
  skillcd_ = value;
}

// optional int32 cdTeam = 7;
inline bool BFSkillCfg::has_cdteam() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BFSkillCfg::set_has_cdteam() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BFSkillCfg::clear_has_cdteam() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BFSkillCfg::clear_cdteam() {
  cdteam_ = 0;
  clear_has_cdteam();
}
inline ::google::protobuf::int32 BFSkillCfg::cdteam() const {
  return cdteam_;
}
inline void BFSkillCfg::set_cdteam(::google::protobuf::int32 value) {
  set_has_cdteam();
  cdteam_ = value;
}

// required int32 affectCamp = 10;
inline bool BFSkillCfg::has_affectcamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BFSkillCfg::set_has_affectcamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BFSkillCfg::clear_has_affectcamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BFSkillCfg::clear_affectcamp() {
  affectcamp_ = 0;
  clear_has_affectcamp();
}
inline ::google::protobuf::int32 BFSkillCfg::affectcamp() const {
  return affectcamp_;
}
inline void BFSkillCfg::set_affectcamp(::google::protobuf::int32 value) {
  set_has_affectcamp();
  affectcamp_ = value;
}

// required int32 attackDisMin = 11;
inline bool BFSkillCfg::has_attackdismin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BFSkillCfg::set_has_attackdismin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BFSkillCfg::clear_has_attackdismin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BFSkillCfg::clear_attackdismin() {
  attackdismin_ = 0;
  clear_has_attackdismin();
}
inline ::google::protobuf::int32 BFSkillCfg::attackdismin() const {
  return attackdismin_;
}
inline void BFSkillCfg::set_attackdismin(::google::protobuf::int32 value) {
  set_has_attackdismin();
  attackdismin_ = value;
}

// required int32 attackDisLow = 12;
inline bool BFSkillCfg::has_attackdislow() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BFSkillCfg::set_has_attackdislow() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BFSkillCfg::clear_has_attackdislow() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BFSkillCfg::clear_attackdislow() {
  attackdislow_ = 0;
  clear_has_attackdislow();
}
inline ::google::protobuf::int32 BFSkillCfg::attackdislow() const {
  return attackdislow_;
}
inline void BFSkillCfg::set_attackdislow(::google::protobuf::int32 value) {
  set_has_attackdislow();
  attackdislow_ = value;
}

// required int32 attackDisUp = 13;
inline bool BFSkillCfg::has_attackdisup() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BFSkillCfg::set_has_attackdisup() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BFSkillCfg::clear_has_attackdisup() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BFSkillCfg::clear_attackdisup() {
  attackdisup_ = 0;
  clear_has_attackdisup();
}
inline ::google::protobuf::int32 BFSkillCfg::attackdisup() const {
  return attackdisup_;
}
inline void BFSkillCfg::set_attackdisup(::google::protobuf::int32 value) {
  set_has_attackdisup();
  attackdisup_ = value;
}

// optional int32 waitTime = 14;
inline bool BFSkillCfg::has_waittime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BFSkillCfg::set_has_waittime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BFSkillCfg::clear_has_waittime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BFSkillCfg::clear_waittime() {
  waittime_ = 0;
  clear_has_waittime();
}
inline ::google::protobuf::int32 BFSkillCfg::waittime() const {
  return waittime_;
}
inline void BFSkillCfg::set_waittime(::google::protobuf::int32 value) {
  set_has_waittime();
  waittime_ = value;
}

// optional int32 lastTime = 15;
inline bool BFSkillCfg::has_lasttime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BFSkillCfg::set_has_lasttime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BFSkillCfg::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BFSkillCfg::clear_lasttime() {
  lasttime_ = 0;
  clear_has_lasttime();
}
inline ::google::protobuf::int32 BFSkillCfg::lasttime() const {
  return lasttime_;
}
inline void BFSkillCfg::set_lasttime(::google::protobuf::int32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional int32 bulletSpeed = 16;
inline bool BFSkillCfg::has_bulletspeed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BFSkillCfg::set_has_bulletspeed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BFSkillCfg::clear_has_bulletspeed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BFSkillCfg::clear_bulletspeed() {
  bulletspeed_ = 0;
  clear_has_bulletspeed();
}
inline ::google::protobuf::int32 BFSkillCfg::bulletspeed() const {
  return bulletspeed_;
}
inline void BFSkillCfg::set_bulletspeed(::google::protobuf::int32 value) {
  set_has_bulletspeed();
  bulletspeed_ = value;
}

// required .SkillShape shape = 20;
inline bool BFSkillCfg::has_shape() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BFSkillCfg::set_has_shape() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BFSkillCfg::clear_has_shape() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BFSkillCfg::clear_shape() {
  if (shape_ != NULL) shape_->::SkillShape::Clear();
  clear_has_shape();
}
inline const ::SkillShape& BFSkillCfg::shape() const {
  return shape_ != NULL ? *shape_ : *default_instance_->shape_;
}
inline ::SkillShape* BFSkillCfg::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) shape_ = new ::SkillShape;
  return shape_;
}
inline ::SkillShape* BFSkillCfg::release_shape() {
  clear_has_shape();
  ::SkillShape* temp = shape_;
  shape_ = NULL;
  return temp;
}
inline void BFSkillCfg::set_allocated_shape(::SkillShape* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
}

// repeated int32 enemyIds = 21;
inline int BFSkillCfg::enemyids_size() const {
  return enemyids_.size();
}
inline void BFSkillCfg::clear_enemyids() {
  enemyids_.Clear();
}
inline ::google::protobuf::int32 BFSkillCfg::enemyids(int index) const {
  return enemyids_.Get(index);
}
inline void BFSkillCfg::set_enemyids(int index, ::google::protobuf::int32 value) {
  enemyids_.Set(index, value);
}
inline void BFSkillCfg::add_enemyids(::google::protobuf::int32 value) {
  enemyids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BFSkillCfg::enemyids() const {
  return enemyids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BFSkillCfg::mutable_enemyids() {
  return &enemyids_;
}

// repeated int32 enemyTypes = 22;
inline int BFSkillCfg::enemytypes_size() const {
  return enemytypes_.size();
}
inline void BFSkillCfg::clear_enemytypes() {
  enemytypes_.Clear();
}
inline ::google::protobuf::int32 BFSkillCfg::enemytypes(int index) const {
  return enemytypes_.Get(index);
}
inline void BFSkillCfg::set_enemytypes(int index, ::google::protobuf::int32 value) {
  enemytypes_.Set(index, value);
}
inline void BFSkillCfg::add_enemytypes(::google::protobuf::int32 value) {
  enemytypes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BFSkillCfg::enemytypes() const {
  return enemytypes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BFSkillCfg::mutable_enemytypes() {
  return &enemytypes_;
}

// repeated int32 buffIds = 23;
inline int BFSkillCfg::buffids_size() const {
  return buffids_.size();
}
inline void BFSkillCfg::clear_buffids() {
  buffids_.Clear();
}
inline ::google::protobuf::int32 BFSkillCfg::buffids(int index) const {
  return buffids_.Get(index);
}
inline void BFSkillCfg::set_buffids(int index, ::google::protobuf::int32 value) {
  buffids_.Set(index, value);
}
inline void BFSkillCfg::add_buffids(::google::protobuf::int32 value) {
  buffids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BFSkillCfg::buffids() const {
  return buffids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BFSkillCfg::mutable_buffids() {
  return &buffids_;
}

// required int32 damageCnt = 24;
inline bool BFSkillCfg::has_damagecnt() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BFSkillCfg::set_has_damagecnt() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BFSkillCfg::clear_has_damagecnt() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BFSkillCfg::clear_damagecnt() {
  damagecnt_ = 0;
  clear_has_damagecnt();
}
inline ::google::protobuf::int32 BFSkillCfg::damagecnt() const {
  return damagecnt_;
}
inline void BFSkillCfg::set_damagecnt(::google::protobuf::int32 value) {
  set_has_damagecnt();
  damagecnt_ = value;
}

// optional int32 damagePer = 25;
inline bool BFSkillCfg::has_damageper() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BFSkillCfg::set_has_damageper() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BFSkillCfg::clear_has_damageper() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BFSkillCfg::clear_damageper() {
  damageper_ = 0;
  clear_has_damageper();
}
inline ::google::protobuf::int32 BFSkillCfg::damageper() const {
  return damageper_;
}
inline void BFSkillCfg::set_damageper(::google::protobuf::int32 value) {
  set_has_damageper();
  damageper_ = value;
}

// optional int32 postSkill = 30;
inline bool BFSkillCfg::has_postskill() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BFSkillCfg::set_has_postskill() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BFSkillCfg::clear_has_postskill() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BFSkillCfg::clear_postskill() {
  postskill_ = 0;
  clear_has_postskill();
}
inline ::google::protobuf::int32 BFSkillCfg::postskill() const {
  return postskill_;
}
inline void BFSkillCfg::set_postskill(::google::protobuf::int32 value) {
  set_has_postskill();
  postskill_ = value;
}

// optional int32 postTime = 31;
inline bool BFSkillCfg::has_posttime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BFSkillCfg::set_has_posttime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BFSkillCfg::clear_has_posttime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BFSkillCfg::clear_posttime() {
  posttime_ = 0;
  clear_has_posttime();
}
inline ::google::protobuf::int32 BFSkillCfg::posttime() const {
  return posttime_;
}
inline void BFSkillCfg::set_posttime(::google::protobuf::int32 value) {
  set_has_posttime();
  posttime_ = value;
}

// -------------------------------------------------------------------

// BFBuffCfg

// required int32 id = 1;
inline bool BFBuffCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BFBuffCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BFBuffCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BFBuffCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BFBuffCfg::id() const {
  return id_;
}
inline void BFBuffCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool BFBuffCfg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BFBuffCfg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BFBuffCfg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BFBuffCfg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BFBuffCfg::type() const {
  return type_;
}
inline void BFBuffCfg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 valueType = 3;
inline bool BFBuffCfg::has_valuetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BFBuffCfg::set_has_valuetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BFBuffCfg::clear_has_valuetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BFBuffCfg::clear_valuetype() {
  valuetype_ = 0;
  clear_has_valuetype();
}
inline ::google::protobuf::int32 BFBuffCfg::valuetype() const {
  return valuetype_;
}
inline void BFBuffCfg::set_valuetype(::google::protobuf::int32 value) {
  set_has_valuetype();
  valuetype_ = value;
}

// required int32 duration = 4;
inline bool BFBuffCfg::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BFBuffCfg::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BFBuffCfg::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BFBuffCfg::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 BFBuffCfg::duration() const {
  return duration_;
}
inline void BFBuffCfg::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional int32 createUnitId = 10;
inline bool BFBuffCfg::has_createunitid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BFBuffCfg::set_has_createunitid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BFBuffCfg::clear_has_createunitid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BFBuffCfg::clear_createunitid() {
  createunitid_ = 0;
  clear_has_createunitid();
}
inline ::google::protobuf::int32 BFBuffCfg::createunitid() const {
  return createunitid_;
}
inline void BFBuffCfg::set_createunitid(::google::protobuf::int32 value) {
  set_has_createunitid();
  createunitid_ = value;
}

// optional int32 createUnitCnt = 11;
inline bool BFBuffCfg::has_createunitcnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BFBuffCfg::set_has_createunitcnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BFBuffCfg::clear_has_createunitcnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BFBuffCfg::clear_createunitcnt() {
  createunitcnt_ = 0;
  clear_has_createunitcnt();
}
inline ::google::protobuf::int32 BFBuffCfg::createunitcnt() const {
  return createunitcnt_;
}
inline void BFBuffCfg::set_createunitcnt(::google::protobuf::int32 value) {
  set_has_createunitcnt();
  createunitcnt_ = value;
}

// repeated .BuffDmgCalc dmgCalc = 20;
inline int BFBuffCfg::dmgcalc_size() const {
  return dmgcalc_.size();
}
inline void BFBuffCfg::clear_dmgcalc() {
  dmgcalc_.Clear();
}
inline const ::BuffDmgCalc& BFBuffCfg::dmgcalc(int index) const {
  return dmgcalc_.Get(index);
}
inline ::BuffDmgCalc* BFBuffCfg::mutable_dmgcalc(int index) {
  return dmgcalc_.Mutable(index);
}
inline ::BuffDmgCalc* BFBuffCfg::add_dmgcalc() {
  return dmgcalc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuffDmgCalc >&
BFBuffCfg::dmgcalc() const {
  return dmgcalc_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuffDmgCalc >*
BFBuffCfg::mutable_dmgcalc() {
  return &dmgcalc_;
}

// -------------------------------------------------------------------

// BuffDmgCalc

// required int32 level = 1;
inline bool BuffDmgCalc::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffDmgCalc::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffDmgCalc::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffDmgCalc::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 BuffDmgCalc::level() const {
  return level_;
}
inline void BuffDmgCalc::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required float dmgParam1 = 2;
inline bool BuffDmgCalc::has_dmgparam1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffDmgCalc::set_has_dmgparam1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffDmgCalc::clear_has_dmgparam1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffDmgCalc::clear_dmgparam1() {
  dmgparam1_ = 0;
  clear_has_dmgparam1();
}
inline float BuffDmgCalc::dmgparam1() const {
  return dmgparam1_;
}
inline void BuffDmgCalc::set_dmgparam1(float value) {
  set_has_dmgparam1();
  dmgparam1_ = value;
}

// required float dmgParam2 = 3;
inline bool BuffDmgCalc::has_dmgparam2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffDmgCalc::set_has_dmgparam2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffDmgCalc::clear_has_dmgparam2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffDmgCalc::clear_dmgparam2() {
  dmgparam2_ = 0;
  clear_has_dmgparam2();
}
inline float BuffDmgCalc::dmgparam2() const {
  return dmgparam2_;
}
inline void BuffDmgCalc::set_dmgparam2(float value) {
  set_has_dmgparam2();
  dmgparam2_ = value;
}

// required float dmgParam3 = 4;
inline bool BuffDmgCalc::has_dmgparam3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffDmgCalc::set_has_dmgparam3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffDmgCalc::clear_has_dmgparam3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffDmgCalc::clear_dmgparam3() {
  dmgparam3_ = 0;
  clear_has_dmgparam3();
}
inline float BuffDmgCalc::dmgparam3() const {
  return dmgparam3_;
}
inline void BuffDmgCalc::set_dmgparam3(float value) {
  set_has_dmgparam3();
  dmgparam3_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BFConst>() {
  return ::BFConst_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BFCfgType>() {
  return ::BFCfgType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MissionType>() {
  return ::MissionType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ValueType>() {
  return ::ValueType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UnitType>() {
  return ::UnitType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SkillTrigType>() {
  return ::SkillTrigType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SkillCampType>() {
  return ::SkillCampType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CastCheckType>() {
  return ::CastCheckType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ModifyUnitAttrType>() {
  return ::ModifyUnitAttrType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TriggerActionType>() {
  return ::TriggerActionType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SkillShapeType>() {
  return ::SkillShapeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SkillType>() {
  return ::SkillType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BuffType>() {
  return ::BuffType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DamageType>() {
  return ::DamageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleCfg_2eproto__INCLUDED
