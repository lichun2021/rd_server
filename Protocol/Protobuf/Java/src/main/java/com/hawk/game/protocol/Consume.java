// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Consume.proto

package com.hawk.game.protocol;

public final class Consume {
  private Consume() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SyncAttrInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gold = 1;
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 水晶
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 水晶
     * </pre>
     */
    int getGold();

    // optional int32 coin = 2;
    /**
     * <code>optional int32 coin = 2;</code>
     *
     * <pre>
     * 银元
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional int32 coin = 2;</code>
     *
     * <pre>
     * 银元
     * </pre>
     */
    int getCoin();

    // optional int64 goldore = 4;
    /**
     * <code>optional int64 goldore = 4;</code>
     *
     * <pre>
     * 金矿
     * </pre>
     */
    boolean hasGoldore();
    /**
     * <code>optional int64 goldore = 4;</code>
     *
     * <pre>
     * 金矿
     * </pre>
     */
    long getGoldore();

    // optional int64 oil = 5;
    /**
     * <code>optional int64 oil = 5;</code>
     *
     * <pre>
     * 石油
     * </pre>
     */
    boolean hasOil();
    /**
     * <code>optional int64 oil = 5;</code>
     *
     * <pre>
     * 石油
     * </pre>
     */
    long getOil();

    // optional int64 steel = 6;
    /**
     * <code>optional int64 steel = 6;</code>
     *
     * <pre>
     * 铀矿
     * </pre>
     */
    boolean hasSteel();
    /**
     * <code>optional int64 steel = 6;</code>
     *
     * <pre>
     * 铀矿
     * </pre>
     */
    long getSteel();

    // optional int64 tombarthite = 7;
    /**
     * <code>optional int64 tombarthite = 7;</code>
     *
     * <pre>
     * 合金
     * </pre>
     */
    boolean hasTombarthite();
    /**
     * <code>optional int64 tombarthite = 7;</code>
     *
     * <pre>
     * 合金
     * </pre>
     */
    long getTombarthite();

    // optional int32 level = 8;
    /**
     * <code>optional int32 level = 8;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 8;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    int getLevel();

    // optional int32 exp = 9;
    /**
     * <code>optional int32 exp = 9;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional int32 exp = 9;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    int getExp();

    // optional int32 vipLevel = 10;
    /**
     * <code>optional int32 vipLevel = 10;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    boolean hasVipLevel();
    /**
     * <code>optional int32 vipLevel = 10;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    int getVipLevel();

    // optional int64 electric = 11;
    /**
     * <code>optional int64 electric = 11;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    boolean hasElectric();
    /**
     * <code>optional int64 electric = 11;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    long getElectric();

    // optional int64 electricMax = 12;
    /**
     * <code>optional int64 electricMax = 12;</code>
     *
     * <pre>
     * 电力上限
     * </pre>
     */
    boolean hasElectricMax();
    /**
     * <code>optional int64 electricMax = 12;</code>
     *
     * <pre>
     * 电力上限
     * </pre>
     */
    long getElectricMax();

    // optional int32 vit = 13;
    /**
     * <code>optional int32 vit = 13;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    boolean hasVit();
    /**
     * <code>optional int32 vit = 13;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    int getVit();

    // optional int32 guildContribution = 14;
    /**
     * <code>optional int32 guildContribution = 14;</code>
     *
     * <pre>
     * 联盟贡献
     * </pre>
     */
    boolean hasGuildContribution();
    /**
     * <code>optional int32 guildContribution = 14;</code>
     *
     * <pre>
     * 联盟贡献
     * </pre>
     */
    int getGuildContribution();

    // optional int64 recruits = 15;
    /**
     * <code>optional int64 recruits = 15;</code>
     *
     * <pre>
     * 新兵
     * </pre>
     */
    boolean hasRecruits();
    /**
     * <code>optional int64 recruits = 15;</code>
     *
     * <pre>
     * 新兵
     * </pre>
     */
    long getRecruits();

    // optional int32 diamond = 16;
    /**
     * <code>optional int32 diamond = 16;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    boolean hasDiamond();
    /**
     * <code>optional int32 diamond = 16;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    int getDiamond();

    // optional int32 vipExp = 17;
    /**
     * <code>optional int32 vipExp = 17;</code>
     *
     * <pre>
     * vip经验
     * </pre>
     */
    boolean hasVipExp();
    /**
     * <code>optional int32 vipExp = 17;</code>
     *
     * <pre>
     * vip经验
     * </pre>
     */
    int getVipExp();

    // optional int64 goldoreUnsafe = 21;
    /**
     * <code>optional int64 goldoreUnsafe = 21;</code>
     *
     * <pre>
     * 金矿(非受保护)
     * </pre>
     */
    boolean hasGoldoreUnsafe();
    /**
     * <code>optional int64 goldoreUnsafe = 21;</code>
     *
     * <pre>
     * 金矿(非受保护)
     * </pre>
     */
    long getGoldoreUnsafe();

    // optional int64 oilUnsafe = 22;
    /**
     * <code>optional int64 oilUnsafe = 22;</code>
     *
     * <pre>
     * 石油(非受保护)
     * </pre>
     */
    boolean hasOilUnsafe();
    /**
     * <code>optional int64 oilUnsafe = 22;</code>
     *
     * <pre>
     * 石油(非受保护)
     * </pre>
     */
    long getOilUnsafe();

    // optional int64 tombarthiteUnsafe = 23;
    /**
     * <code>optional int64 tombarthiteUnsafe = 23;</code>
     *
     * <pre>
     * 合金(非受保护)
     * </pre>
     */
    boolean hasTombarthiteUnsafe();
    /**
     * <code>optional int64 tombarthiteUnsafe = 23;</code>
     *
     * <pre>
     * 合金(非受保护)
     * </pre>
     */
    long getTombarthiteUnsafe();

    // optional int64 steelUnsafe = 24;
    /**
     * <code>optional int64 steelUnsafe = 24;</code>
     *
     * <pre>
     * 铀矿(非受保护)
     * </pre>
     */
    boolean hasSteelUnsafe();
    /**
     * <code>optional int64 steelUnsafe = 24;</code>
     *
     * <pre>
     * 铀矿(非受保护)
     * </pre>
     */
    long getSteelUnsafe();

    // optional int64 goldoreNotEnough = 25;
    /**
     * <code>optional int64 goldoreNotEnough = 25;</code>
     *
     * <pre>
     * 金矿不足数量
     * </pre>
     */
    boolean hasGoldoreNotEnough();
    /**
     * <code>optional int64 goldoreNotEnough = 25;</code>
     *
     * <pre>
     * 金矿不足数量
     * </pre>
     */
    long getGoldoreNotEnough();

    // optional int64 oilNotEnough = 26;
    /**
     * <code>optional int64 oilNotEnough = 26;</code>
     *
     * <pre>
     * 石油不足数量
     * </pre>
     */
    boolean hasOilNotEnough();
    /**
     * <code>optional int64 oilNotEnough = 26;</code>
     *
     * <pre>
     * 石油不足数量
     * </pre>
     */
    long getOilNotEnough();

    // optional int64 tombarthiteNotEnough = 27;
    /**
     * <code>optional int64 tombarthiteNotEnough = 27;</code>
     *
     * <pre>
     * 合金不足数量
     * </pre>
     */
    boolean hasTombarthiteNotEnough();
    /**
     * <code>optional int64 tombarthiteNotEnough = 27;</code>
     *
     * <pre>
     * 合金不足数量
     * </pre>
     */
    long getTombarthiteNotEnough();

    // optional int64 steelNotEnough = 28;
    /**
     * <code>optional int64 steelNotEnough = 28;</code>
     *
     * <pre>
     * 铀矿不足数量
     * </pre>
     */
    boolean hasSteelNotEnough();
    /**
     * <code>optional int64 steelNotEnough = 28;</code>
     *
     * <pre>
     * 铀矿不足数量
     * </pre>
     */
    long getSteelNotEnough();

    // optional int64 fuelNotEnough = 29;
    /**
     * <code>optional int64 fuelNotEnough = 29;</code>
     *
     * <pre>
     * 钢材不足数量
     * </pre>
     */
    boolean hasFuelNotEnough();
    /**
     * <code>optional int64 fuelNotEnough = 29;</code>
     *
     * <pre>
     * 钢材不足数量
     * </pre>
     */
    long getFuelNotEnough();

    // optional int64 militaryScore = 30;
    /**
     * <code>optional int64 militaryScore = 30;</code>
     *
     * <pre>
     * 军演积分
     * </pre>
     */
    boolean hasMilitaryScore();
    /**
     * <code>optional int64 militaryScore = 30;</code>
     *
     * <pre>
     * 军演积分
     * </pre>
     */
    long getMilitaryScore();

    // optional int64 cyborgScore = 31;
    /**
     * <code>optional int64 cyborgScore = 31;</code>
     *
     * <pre>
     * 赛博积分
     * </pre>
     */
    boolean hasCyborgScore();
    /**
     * <code>optional int64 cyborgScore = 31;</code>
     *
     * <pre>
     * 赛博积分
     * </pre>
     */
    long getCyborgScore();

    // optional int64 dyzzScore = 32;
    /**
     * <code>optional int64 dyzzScore = 32;</code>
     *
     * <pre>
     * 达雅积分
     * </pre>
     */
    boolean hasDyzzScore();
    /**
     * <code>optional int64 dyzzScore = 32;</code>
     *
     * <pre>
     * 达雅积分
     * </pre>
     */
    long getDyzzScore();
  }
  /**
   * Protobuf type {@code SyncAttrInfo}
   */
  public static final class SyncAttrInfo extends
      com.google.protobuf.GeneratedMessage
      implements SyncAttrInfoOrBuilder {
    // Use SyncAttrInfo.newBuilder() to construct.
    private SyncAttrInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SyncAttrInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SyncAttrInfo defaultInstance;
    public static SyncAttrInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SyncAttrInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SyncAttrInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gold_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              coin_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              goldore_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              oil_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              steel_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              tombarthite_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              level_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              exp_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              vipLevel_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              electric_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              electricMax_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              vit_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              guildContribution_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              recruits_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              diamond_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              vipExp_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00010000;
              goldoreUnsafe_ = input.readInt64();
              break;
            }
            case 176: {
              bitField0_ |= 0x00020000;
              oilUnsafe_ = input.readInt64();
              break;
            }
            case 184: {
              bitField0_ |= 0x00040000;
              tombarthiteUnsafe_ = input.readInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00080000;
              steelUnsafe_ = input.readInt64();
              break;
            }
            case 200: {
              bitField0_ |= 0x00100000;
              goldoreNotEnough_ = input.readInt64();
              break;
            }
            case 208: {
              bitField0_ |= 0x00200000;
              oilNotEnough_ = input.readInt64();
              break;
            }
            case 216: {
              bitField0_ |= 0x00400000;
              tombarthiteNotEnough_ = input.readInt64();
              break;
            }
            case 224: {
              bitField0_ |= 0x00800000;
              steelNotEnough_ = input.readInt64();
              break;
            }
            case 232: {
              bitField0_ |= 0x01000000;
              fuelNotEnough_ = input.readInt64();
              break;
            }
            case 240: {
              bitField0_ |= 0x02000000;
              militaryScore_ = input.readInt64();
              break;
            }
            case 248: {
              bitField0_ |= 0x04000000;
              cyborgScore_ = input.readInt64();
              break;
            }
            case 256: {
              bitField0_ |= 0x08000000;
              dyzzScore_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.Consume.internal_static_SyncAttrInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.Consume.internal_static_SyncAttrInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.Consume.SyncAttrInfo.class, com.hawk.game.protocol.Consume.SyncAttrInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SyncAttrInfo> PARSER =
        new com.google.protobuf.AbstractParser<SyncAttrInfo>() {
      public SyncAttrInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SyncAttrInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SyncAttrInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gold = 1;
    public static final int GOLD_FIELD_NUMBER = 1;
    private int gold_;
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 水晶
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gold = 1;</code>
     *
     * <pre>
     * 水晶
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional int32 coin = 2;
    public static final int COIN_FIELD_NUMBER = 2;
    private int coin_;
    /**
     * <code>optional int32 coin = 2;</code>
     *
     * <pre>
     * 银元
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 coin = 2;</code>
     *
     * <pre>
     * 银元
     * </pre>
     */
    public int getCoin() {
      return coin_;
    }

    // optional int64 goldore = 4;
    public static final int GOLDORE_FIELD_NUMBER = 4;
    private long goldore_;
    /**
     * <code>optional int64 goldore = 4;</code>
     *
     * <pre>
     * 金矿
     * </pre>
     */
    public boolean hasGoldore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 goldore = 4;</code>
     *
     * <pre>
     * 金矿
     * </pre>
     */
    public long getGoldore() {
      return goldore_;
    }

    // optional int64 oil = 5;
    public static final int OIL_FIELD_NUMBER = 5;
    private long oil_;
    /**
     * <code>optional int64 oil = 5;</code>
     *
     * <pre>
     * 石油
     * </pre>
     */
    public boolean hasOil() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 oil = 5;</code>
     *
     * <pre>
     * 石油
     * </pre>
     */
    public long getOil() {
      return oil_;
    }

    // optional int64 steel = 6;
    public static final int STEEL_FIELD_NUMBER = 6;
    private long steel_;
    /**
     * <code>optional int64 steel = 6;</code>
     *
     * <pre>
     * 铀矿
     * </pre>
     */
    public boolean hasSteel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 steel = 6;</code>
     *
     * <pre>
     * 铀矿
     * </pre>
     */
    public long getSteel() {
      return steel_;
    }

    // optional int64 tombarthite = 7;
    public static final int TOMBARTHITE_FIELD_NUMBER = 7;
    private long tombarthite_;
    /**
     * <code>optional int64 tombarthite = 7;</code>
     *
     * <pre>
     * 合金
     * </pre>
     */
    public boolean hasTombarthite() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 tombarthite = 7;</code>
     *
     * <pre>
     * 合金
     * </pre>
     */
    public long getTombarthite() {
      return tombarthite_;
    }

    // optional int32 level = 8;
    public static final int LEVEL_FIELD_NUMBER = 8;
    private int level_;
    /**
     * <code>optional int32 level = 8;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 level = 8;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // optional int32 exp = 9;
    public static final int EXP_FIELD_NUMBER = 9;
    private int exp_;
    /**
     * <code>optional int32 exp = 9;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 exp = 9;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    // optional int32 vipLevel = 10;
    public static final int VIPLEVEL_FIELD_NUMBER = 10;
    private int vipLevel_;
    /**
     * <code>optional int32 vipLevel = 10;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public boolean hasVipLevel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 vipLevel = 10;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public int getVipLevel() {
      return vipLevel_;
    }

    // optional int64 electric = 11;
    public static final int ELECTRIC_FIELD_NUMBER = 11;
    private long electric_;
    /**
     * <code>optional int64 electric = 11;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    public boolean hasElectric() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 electric = 11;</code>
     *
     * <pre>
     * 电力
     * </pre>
     */
    public long getElectric() {
      return electric_;
    }

    // optional int64 electricMax = 12;
    public static final int ELECTRICMAX_FIELD_NUMBER = 12;
    private long electricMax_;
    /**
     * <code>optional int64 electricMax = 12;</code>
     *
     * <pre>
     * 电力上限
     * </pre>
     */
    public boolean hasElectricMax() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 electricMax = 12;</code>
     *
     * <pre>
     * 电力上限
     * </pre>
     */
    public long getElectricMax() {
      return electricMax_;
    }

    // optional int32 vit = 13;
    public static final int VIT_FIELD_NUMBER = 13;
    private int vit_;
    /**
     * <code>optional int32 vit = 13;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    public boolean hasVit() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 vit = 13;</code>
     *
     * <pre>
     * 体力
     * </pre>
     */
    public int getVit() {
      return vit_;
    }

    // optional int32 guildContribution = 14;
    public static final int GUILDCONTRIBUTION_FIELD_NUMBER = 14;
    private int guildContribution_;
    /**
     * <code>optional int32 guildContribution = 14;</code>
     *
     * <pre>
     * 联盟贡献
     * </pre>
     */
    public boolean hasGuildContribution() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 guildContribution = 14;</code>
     *
     * <pre>
     * 联盟贡献
     * </pre>
     */
    public int getGuildContribution() {
      return guildContribution_;
    }

    // optional int64 recruits = 15;
    public static final int RECRUITS_FIELD_NUMBER = 15;
    private long recruits_;
    /**
     * <code>optional int64 recruits = 15;</code>
     *
     * <pre>
     * 新兵
     * </pre>
     */
    public boolean hasRecruits() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 recruits = 15;</code>
     *
     * <pre>
     * 新兵
     * </pre>
     */
    public long getRecruits() {
      return recruits_;
    }

    // optional int32 diamond = 16;
    public static final int DIAMOND_FIELD_NUMBER = 16;
    private int diamond_;
    /**
     * <code>optional int32 diamond = 16;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public boolean hasDiamond() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 diamond = 16;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public int getDiamond() {
      return diamond_;
    }

    // optional int32 vipExp = 17;
    public static final int VIPEXP_FIELD_NUMBER = 17;
    private int vipExp_;
    /**
     * <code>optional int32 vipExp = 17;</code>
     *
     * <pre>
     * vip经验
     * </pre>
     */
    public boolean hasVipExp() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 vipExp = 17;</code>
     *
     * <pre>
     * vip经验
     * </pre>
     */
    public int getVipExp() {
      return vipExp_;
    }

    // optional int64 goldoreUnsafe = 21;
    public static final int GOLDOREUNSAFE_FIELD_NUMBER = 21;
    private long goldoreUnsafe_;
    /**
     * <code>optional int64 goldoreUnsafe = 21;</code>
     *
     * <pre>
     * 金矿(非受保护)
     * </pre>
     */
    public boolean hasGoldoreUnsafe() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 goldoreUnsafe = 21;</code>
     *
     * <pre>
     * 金矿(非受保护)
     * </pre>
     */
    public long getGoldoreUnsafe() {
      return goldoreUnsafe_;
    }

    // optional int64 oilUnsafe = 22;
    public static final int OILUNSAFE_FIELD_NUMBER = 22;
    private long oilUnsafe_;
    /**
     * <code>optional int64 oilUnsafe = 22;</code>
     *
     * <pre>
     * 石油(非受保护)
     * </pre>
     */
    public boolean hasOilUnsafe() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 oilUnsafe = 22;</code>
     *
     * <pre>
     * 石油(非受保护)
     * </pre>
     */
    public long getOilUnsafe() {
      return oilUnsafe_;
    }

    // optional int64 tombarthiteUnsafe = 23;
    public static final int TOMBARTHITEUNSAFE_FIELD_NUMBER = 23;
    private long tombarthiteUnsafe_;
    /**
     * <code>optional int64 tombarthiteUnsafe = 23;</code>
     *
     * <pre>
     * 合金(非受保护)
     * </pre>
     */
    public boolean hasTombarthiteUnsafe() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 tombarthiteUnsafe = 23;</code>
     *
     * <pre>
     * 合金(非受保护)
     * </pre>
     */
    public long getTombarthiteUnsafe() {
      return tombarthiteUnsafe_;
    }

    // optional int64 steelUnsafe = 24;
    public static final int STEELUNSAFE_FIELD_NUMBER = 24;
    private long steelUnsafe_;
    /**
     * <code>optional int64 steelUnsafe = 24;</code>
     *
     * <pre>
     * 铀矿(非受保护)
     * </pre>
     */
    public boolean hasSteelUnsafe() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 steelUnsafe = 24;</code>
     *
     * <pre>
     * 铀矿(非受保护)
     * </pre>
     */
    public long getSteelUnsafe() {
      return steelUnsafe_;
    }

    // optional int64 goldoreNotEnough = 25;
    public static final int GOLDORENOTENOUGH_FIELD_NUMBER = 25;
    private long goldoreNotEnough_;
    /**
     * <code>optional int64 goldoreNotEnough = 25;</code>
     *
     * <pre>
     * 金矿不足数量
     * </pre>
     */
    public boolean hasGoldoreNotEnough() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 goldoreNotEnough = 25;</code>
     *
     * <pre>
     * 金矿不足数量
     * </pre>
     */
    public long getGoldoreNotEnough() {
      return goldoreNotEnough_;
    }

    // optional int64 oilNotEnough = 26;
    public static final int OILNOTENOUGH_FIELD_NUMBER = 26;
    private long oilNotEnough_;
    /**
     * <code>optional int64 oilNotEnough = 26;</code>
     *
     * <pre>
     * 石油不足数量
     * </pre>
     */
    public boolean hasOilNotEnough() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 oilNotEnough = 26;</code>
     *
     * <pre>
     * 石油不足数量
     * </pre>
     */
    public long getOilNotEnough() {
      return oilNotEnough_;
    }

    // optional int64 tombarthiteNotEnough = 27;
    public static final int TOMBARTHITENOTENOUGH_FIELD_NUMBER = 27;
    private long tombarthiteNotEnough_;
    /**
     * <code>optional int64 tombarthiteNotEnough = 27;</code>
     *
     * <pre>
     * 合金不足数量
     * </pre>
     */
    public boolean hasTombarthiteNotEnough() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 tombarthiteNotEnough = 27;</code>
     *
     * <pre>
     * 合金不足数量
     * </pre>
     */
    public long getTombarthiteNotEnough() {
      return tombarthiteNotEnough_;
    }

    // optional int64 steelNotEnough = 28;
    public static final int STEELNOTENOUGH_FIELD_NUMBER = 28;
    private long steelNotEnough_;
    /**
     * <code>optional int64 steelNotEnough = 28;</code>
     *
     * <pre>
     * 铀矿不足数量
     * </pre>
     */
    public boolean hasSteelNotEnough() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 steelNotEnough = 28;</code>
     *
     * <pre>
     * 铀矿不足数量
     * </pre>
     */
    public long getSteelNotEnough() {
      return steelNotEnough_;
    }

    // optional int64 fuelNotEnough = 29;
    public static final int FUELNOTENOUGH_FIELD_NUMBER = 29;
    private long fuelNotEnough_;
    /**
     * <code>optional int64 fuelNotEnough = 29;</code>
     *
     * <pre>
     * 钢材不足数量
     * </pre>
     */
    public boolean hasFuelNotEnough() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 fuelNotEnough = 29;</code>
     *
     * <pre>
     * 钢材不足数量
     * </pre>
     */
    public long getFuelNotEnough() {
      return fuelNotEnough_;
    }

    // optional int64 militaryScore = 30;
    public static final int MILITARYSCORE_FIELD_NUMBER = 30;
    private long militaryScore_;
    /**
     * <code>optional int64 militaryScore = 30;</code>
     *
     * <pre>
     * 军演积分
     * </pre>
     */
    public boolean hasMilitaryScore() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 militaryScore = 30;</code>
     *
     * <pre>
     * 军演积分
     * </pre>
     */
    public long getMilitaryScore() {
      return militaryScore_;
    }

    // optional int64 cyborgScore = 31;
    public static final int CYBORGSCORE_FIELD_NUMBER = 31;
    private long cyborgScore_;
    /**
     * <code>optional int64 cyborgScore = 31;</code>
     *
     * <pre>
     * 赛博积分
     * </pre>
     */
    public boolean hasCyborgScore() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 cyborgScore = 31;</code>
     *
     * <pre>
     * 赛博积分
     * </pre>
     */
    public long getCyborgScore() {
      return cyborgScore_;
    }

    // optional int64 dyzzScore = 32;
    public static final int DYZZSCORE_FIELD_NUMBER = 32;
    private long dyzzScore_;
    /**
     * <code>optional int64 dyzzScore = 32;</code>
     *
     * <pre>
     * 达雅积分
     * </pre>
     */
    public boolean hasDyzzScore() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 dyzzScore = 32;</code>
     *
     * <pre>
     * 达雅积分
     * </pre>
     */
    public long getDyzzScore() {
      return dyzzScore_;
    }

    private void initFields() {
      gold_ = 0;
      coin_ = 0;
      goldore_ = 0L;
      oil_ = 0L;
      steel_ = 0L;
      tombarthite_ = 0L;
      level_ = 0;
      exp_ = 0;
      vipLevel_ = 0;
      electric_ = 0L;
      electricMax_ = 0L;
      vit_ = 0;
      guildContribution_ = 0;
      recruits_ = 0L;
      diamond_ = 0;
      vipExp_ = 0;
      goldoreUnsafe_ = 0L;
      oilUnsafe_ = 0L;
      tombarthiteUnsafe_ = 0L;
      steelUnsafe_ = 0L;
      goldoreNotEnough_ = 0L;
      oilNotEnough_ = 0L;
      tombarthiteNotEnough_ = 0L;
      steelNotEnough_ = 0L;
      fuelNotEnough_ = 0L;
      militaryScore_ = 0L;
      cyborgScore_ = 0L;
      dyzzScore_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, coin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, goldore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, oil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, steel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, tombarthite_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, level_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, exp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, vipLevel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(11, electric_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(12, electricMax_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, vit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, guildContribution_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(15, recruits_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(16, diamond_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(17, vipExp_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(21, goldoreUnsafe_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(22, oilUnsafe_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(23, tombarthiteUnsafe_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(24, steelUnsafe_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(25, goldoreNotEnough_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(26, oilNotEnough_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(27, tombarthiteNotEnough_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(28, steelNotEnough_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(29, fuelNotEnough_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(30, militaryScore_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(31, cyborgScore_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(32, dyzzScore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, coin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, goldore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, oil_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, steel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, tombarthite_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, level_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, exp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, vipLevel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, electric_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, electricMax_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, vit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, guildContribution_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, recruits_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, diamond_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, vipExp_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, goldoreUnsafe_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, oilUnsafe_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, tombarthiteUnsafe_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, steelUnsafe_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, goldoreNotEnough_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, oilNotEnough_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(27, tombarthiteNotEnough_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(28, steelNotEnough_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(29, fuelNotEnough_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(30, militaryScore_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, cyborgScore_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(32, dyzzScore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.Consume.SyncAttrInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.Consume.SyncAttrInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncAttrInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.Consume.internal_static_SyncAttrInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.Consume.internal_static_SyncAttrInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.Consume.SyncAttrInfo.class, com.hawk.game.protocol.Consume.SyncAttrInfo.Builder.class);
      }

      // Construct using com.hawk.game.protocol.Consume.SyncAttrInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        coin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goldore_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        oil_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        steel_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        tombarthite_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        vipLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        electric_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        electricMax_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        vit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        guildContribution_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        recruits_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        diamond_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        vipExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        goldoreUnsafe_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        oilUnsafe_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        tombarthiteUnsafe_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        steelUnsafe_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        goldoreNotEnough_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        oilNotEnough_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        tombarthiteNotEnough_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        steelNotEnough_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        fuelNotEnough_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        militaryScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x02000000);
        cyborgScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x04000000);
        dyzzScore_ = 0L;
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.Consume.internal_static_SyncAttrInfo_descriptor;
      }

      public com.hawk.game.protocol.Consume.SyncAttrInfo getDefaultInstanceForType() {
        return com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
      }

      public com.hawk.game.protocol.Consume.SyncAttrInfo build() {
        com.hawk.game.protocol.Consume.SyncAttrInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.Consume.SyncAttrInfo buildPartial() {
        com.hawk.game.protocol.Consume.SyncAttrInfo result = new com.hawk.game.protocol.Consume.SyncAttrInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.goldore_ = goldore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.oil_ = oil_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.steel_ = steel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tombarthite_ = tombarthite_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vipLevel_ = vipLevel_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.electric_ = electric_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.electricMax_ = electricMax_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vit_ = vit_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.guildContribution_ = guildContribution_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.recruits_ = recruits_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.diamond_ = diamond_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.vipExp_ = vipExp_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.goldoreUnsafe_ = goldoreUnsafe_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.oilUnsafe_ = oilUnsafe_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tombarthiteUnsafe_ = tombarthiteUnsafe_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.steelUnsafe_ = steelUnsafe_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.goldoreNotEnough_ = goldoreNotEnough_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.oilNotEnough_ = oilNotEnough_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tombarthiteNotEnough_ = tombarthiteNotEnough_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.steelNotEnough_ = steelNotEnough_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.fuelNotEnough_ = fuelNotEnough_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.militaryScore_ = militaryScore_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.cyborgScore_ = cyborgScore_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.dyzzScore_ = dyzzScore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.Consume.SyncAttrInfo) {
          return mergeFrom((com.hawk.game.protocol.Consume.SyncAttrInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.Consume.SyncAttrInfo other) {
        if (other == com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance()) return this;
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasGoldore()) {
          setGoldore(other.getGoldore());
        }
        if (other.hasOil()) {
          setOil(other.getOil());
        }
        if (other.hasSteel()) {
          setSteel(other.getSteel());
        }
        if (other.hasTombarthite()) {
          setTombarthite(other.getTombarthite());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasVipLevel()) {
          setVipLevel(other.getVipLevel());
        }
        if (other.hasElectric()) {
          setElectric(other.getElectric());
        }
        if (other.hasElectricMax()) {
          setElectricMax(other.getElectricMax());
        }
        if (other.hasVit()) {
          setVit(other.getVit());
        }
        if (other.hasGuildContribution()) {
          setGuildContribution(other.getGuildContribution());
        }
        if (other.hasRecruits()) {
          setRecruits(other.getRecruits());
        }
        if (other.hasDiamond()) {
          setDiamond(other.getDiamond());
        }
        if (other.hasVipExp()) {
          setVipExp(other.getVipExp());
        }
        if (other.hasGoldoreUnsafe()) {
          setGoldoreUnsafe(other.getGoldoreUnsafe());
        }
        if (other.hasOilUnsafe()) {
          setOilUnsafe(other.getOilUnsafe());
        }
        if (other.hasTombarthiteUnsafe()) {
          setTombarthiteUnsafe(other.getTombarthiteUnsafe());
        }
        if (other.hasSteelUnsafe()) {
          setSteelUnsafe(other.getSteelUnsafe());
        }
        if (other.hasGoldoreNotEnough()) {
          setGoldoreNotEnough(other.getGoldoreNotEnough());
        }
        if (other.hasOilNotEnough()) {
          setOilNotEnough(other.getOilNotEnough());
        }
        if (other.hasTombarthiteNotEnough()) {
          setTombarthiteNotEnough(other.getTombarthiteNotEnough());
        }
        if (other.hasSteelNotEnough()) {
          setSteelNotEnough(other.getSteelNotEnough());
        }
        if (other.hasFuelNotEnough()) {
          setFuelNotEnough(other.getFuelNotEnough());
        }
        if (other.hasMilitaryScore()) {
          setMilitaryScore(other.getMilitaryScore());
        }
        if (other.hasCyborgScore()) {
          setCyborgScore(other.getCyborgScore());
        }
        if (other.hasDyzzScore()) {
          setDyzzScore(other.getDyzzScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.Consume.SyncAttrInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.Consume.SyncAttrInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gold = 1;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 水晶
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 水晶
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 水晶
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000001;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 1;</code>
       *
       * <pre>
       * 水晶
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional int32 coin = 2;
      private int coin_ ;
      /**
       * <code>optional int32 coin = 2;</code>
       *
       * <pre>
       * 银元
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 coin = 2;</code>
       *
       * <pre>
       * 银元
       * </pre>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <code>optional int32 coin = 2;</code>
       *
       * <pre>
       * 银元
       * </pre>
       */
      public Builder setCoin(int value) {
        bitField0_ |= 0x00000002;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 coin = 2;</code>
       *
       * <pre>
       * 银元
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        coin_ = 0;
        onChanged();
        return this;
      }

      // optional int64 goldore = 4;
      private long goldore_ ;
      /**
       * <code>optional int64 goldore = 4;</code>
       *
       * <pre>
       * 金矿
       * </pre>
       */
      public boolean hasGoldore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 goldore = 4;</code>
       *
       * <pre>
       * 金矿
       * </pre>
       */
      public long getGoldore() {
        return goldore_;
      }
      /**
       * <code>optional int64 goldore = 4;</code>
       *
       * <pre>
       * 金矿
       * </pre>
       */
      public Builder setGoldore(long value) {
        bitField0_ |= 0x00000004;
        goldore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 goldore = 4;</code>
       *
       * <pre>
       * 金矿
       * </pre>
       */
      public Builder clearGoldore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        goldore_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 oil = 5;
      private long oil_ ;
      /**
       * <code>optional int64 oil = 5;</code>
       *
       * <pre>
       * 石油
       * </pre>
       */
      public boolean hasOil() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 oil = 5;</code>
       *
       * <pre>
       * 石油
       * </pre>
       */
      public long getOil() {
        return oil_;
      }
      /**
       * <code>optional int64 oil = 5;</code>
       *
       * <pre>
       * 石油
       * </pre>
       */
      public Builder setOil(long value) {
        bitField0_ |= 0x00000008;
        oil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oil = 5;</code>
       *
       * <pre>
       * 石油
       * </pre>
       */
      public Builder clearOil() {
        bitField0_ = (bitField0_ & ~0x00000008);
        oil_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 steel = 6;
      private long steel_ ;
      /**
       * <code>optional int64 steel = 6;</code>
       *
       * <pre>
       * 铀矿
       * </pre>
       */
      public boolean hasSteel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 steel = 6;</code>
       *
       * <pre>
       * 铀矿
       * </pre>
       */
      public long getSteel() {
        return steel_;
      }
      /**
       * <code>optional int64 steel = 6;</code>
       *
       * <pre>
       * 铀矿
       * </pre>
       */
      public Builder setSteel(long value) {
        bitField0_ |= 0x00000010;
        steel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 steel = 6;</code>
       *
       * <pre>
       * 铀矿
       * </pre>
       */
      public Builder clearSteel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        steel_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 tombarthite = 7;
      private long tombarthite_ ;
      /**
       * <code>optional int64 tombarthite = 7;</code>
       *
       * <pre>
       * 合金
       * </pre>
       */
      public boolean hasTombarthite() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 tombarthite = 7;</code>
       *
       * <pre>
       * 合金
       * </pre>
       */
      public long getTombarthite() {
        return tombarthite_;
      }
      /**
       * <code>optional int64 tombarthite = 7;</code>
       *
       * <pre>
       * 合金
       * </pre>
       */
      public Builder setTombarthite(long value) {
        bitField0_ |= 0x00000020;
        tombarthite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tombarthite = 7;</code>
       *
       * <pre>
       * 合金
       * </pre>
       */
      public Builder clearTombarthite() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tombarthite_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 level = 8;
      private int level_ ;
      /**
       * <code>optional int32 level = 8;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 level = 8;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 8;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000040;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 8;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        level_ = 0;
        onChanged();
        return this;
      }

      // optional int32 exp = 9;
      private int exp_ ;
      /**
       * <code>optional int32 exp = 9;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 exp = 9;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional int32 exp = 9;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000080;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exp = 9;</code>
       *
       * <pre>
       * 经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vipLevel = 10;
      private int vipLevel_ ;
      /**
       * <code>optional int32 vipLevel = 10;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public boolean hasVipLevel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 vipLevel = 10;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public int getVipLevel() {
        return vipLevel_;
      }
      /**
       * <code>optional int32 vipLevel = 10;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder setVipLevel(int value) {
        bitField0_ |= 0x00000100;
        vipLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipLevel = 10;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder clearVipLevel() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vipLevel_ = 0;
        onChanged();
        return this;
      }

      // optional int64 electric = 11;
      private long electric_ ;
      /**
       * <code>optional int64 electric = 11;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public boolean hasElectric() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 electric = 11;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public long getElectric() {
        return electric_;
      }
      /**
       * <code>optional int64 electric = 11;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public Builder setElectric(long value) {
        bitField0_ |= 0x00000200;
        electric_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 electric = 11;</code>
       *
       * <pre>
       * 电力
       * </pre>
       */
      public Builder clearElectric() {
        bitField0_ = (bitField0_ & ~0x00000200);
        electric_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 electricMax = 12;
      private long electricMax_ ;
      /**
       * <code>optional int64 electricMax = 12;</code>
       *
       * <pre>
       * 电力上限
       * </pre>
       */
      public boolean hasElectricMax() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 electricMax = 12;</code>
       *
       * <pre>
       * 电力上限
       * </pre>
       */
      public long getElectricMax() {
        return electricMax_;
      }
      /**
       * <code>optional int64 electricMax = 12;</code>
       *
       * <pre>
       * 电力上限
       * </pre>
       */
      public Builder setElectricMax(long value) {
        bitField0_ |= 0x00000400;
        electricMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 electricMax = 12;</code>
       *
       * <pre>
       * 电力上限
       * </pre>
       */
      public Builder clearElectricMax() {
        bitField0_ = (bitField0_ & ~0x00000400);
        electricMax_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 vit = 13;
      private int vit_ ;
      /**
       * <code>optional int32 vit = 13;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public boolean hasVit() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 vit = 13;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public int getVit() {
        return vit_;
      }
      /**
       * <code>optional int32 vit = 13;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public Builder setVit(int value) {
        bitField0_ |= 0x00000800;
        vit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vit = 13;</code>
       *
       * <pre>
       * 体力
       * </pre>
       */
      public Builder clearVit() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 guildContribution = 14;
      private int guildContribution_ ;
      /**
       * <code>optional int32 guildContribution = 14;</code>
       *
       * <pre>
       * 联盟贡献
       * </pre>
       */
      public boolean hasGuildContribution() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 guildContribution = 14;</code>
       *
       * <pre>
       * 联盟贡献
       * </pre>
       */
      public int getGuildContribution() {
        return guildContribution_;
      }
      /**
       * <code>optional int32 guildContribution = 14;</code>
       *
       * <pre>
       * 联盟贡献
       * </pre>
       */
      public Builder setGuildContribution(int value) {
        bitField0_ |= 0x00001000;
        guildContribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 guildContribution = 14;</code>
       *
       * <pre>
       * 联盟贡献
       * </pre>
       */
      public Builder clearGuildContribution() {
        bitField0_ = (bitField0_ & ~0x00001000);
        guildContribution_ = 0;
        onChanged();
        return this;
      }

      // optional int64 recruits = 15;
      private long recruits_ ;
      /**
       * <code>optional int64 recruits = 15;</code>
       *
       * <pre>
       * 新兵
       * </pre>
       */
      public boolean hasRecruits() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 recruits = 15;</code>
       *
       * <pre>
       * 新兵
       * </pre>
       */
      public long getRecruits() {
        return recruits_;
      }
      /**
       * <code>optional int64 recruits = 15;</code>
       *
       * <pre>
       * 新兵
       * </pre>
       */
      public Builder setRecruits(long value) {
        bitField0_ |= 0x00002000;
        recruits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 recruits = 15;</code>
       *
       * <pre>
       * 新兵
       * </pre>
       */
      public Builder clearRecruits() {
        bitField0_ = (bitField0_ & ~0x00002000);
        recruits_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 diamond = 16;
      private int diamond_ ;
      /**
       * <code>optional int32 diamond = 16;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public boolean hasDiamond() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 diamond = 16;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public int getDiamond() {
        return diamond_;
      }
      /**
       * <code>optional int32 diamond = 16;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public Builder setDiamond(int value) {
        bitField0_ |= 0x00004000;
        diamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 diamond = 16;</code>
       *
       * <pre>
       * 钻石
       * </pre>
       */
      public Builder clearDiamond() {
        bitField0_ = (bitField0_ & ~0x00004000);
        diamond_ = 0;
        onChanged();
        return this;
      }

      // optional int32 vipExp = 17;
      private int vipExp_ ;
      /**
       * <code>optional int32 vipExp = 17;</code>
       *
       * <pre>
       * vip经验
       * </pre>
       */
      public boolean hasVipExp() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 vipExp = 17;</code>
       *
       * <pre>
       * vip经验
       * </pre>
       */
      public int getVipExp() {
        return vipExp_;
      }
      /**
       * <code>optional int32 vipExp = 17;</code>
       *
       * <pre>
       * vip经验
       * </pre>
       */
      public Builder setVipExp(int value) {
        bitField0_ |= 0x00008000;
        vipExp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipExp = 17;</code>
       *
       * <pre>
       * vip经验
       * </pre>
       */
      public Builder clearVipExp() {
        bitField0_ = (bitField0_ & ~0x00008000);
        vipExp_ = 0;
        onChanged();
        return this;
      }

      // optional int64 goldoreUnsafe = 21;
      private long goldoreUnsafe_ ;
      /**
       * <code>optional int64 goldoreUnsafe = 21;</code>
       *
       * <pre>
       * 金矿(非受保护)
       * </pre>
       */
      public boolean hasGoldoreUnsafe() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 goldoreUnsafe = 21;</code>
       *
       * <pre>
       * 金矿(非受保护)
       * </pre>
       */
      public long getGoldoreUnsafe() {
        return goldoreUnsafe_;
      }
      /**
       * <code>optional int64 goldoreUnsafe = 21;</code>
       *
       * <pre>
       * 金矿(非受保护)
       * </pre>
       */
      public Builder setGoldoreUnsafe(long value) {
        bitField0_ |= 0x00010000;
        goldoreUnsafe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 goldoreUnsafe = 21;</code>
       *
       * <pre>
       * 金矿(非受保护)
       * </pre>
       */
      public Builder clearGoldoreUnsafe() {
        bitField0_ = (bitField0_ & ~0x00010000);
        goldoreUnsafe_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 oilUnsafe = 22;
      private long oilUnsafe_ ;
      /**
       * <code>optional int64 oilUnsafe = 22;</code>
       *
       * <pre>
       * 石油(非受保护)
       * </pre>
       */
      public boolean hasOilUnsafe() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 oilUnsafe = 22;</code>
       *
       * <pre>
       * 石油(非受保护)
       * </pre>
       */
      public long getOilUnsafe() {
        return oilUnsafe_;
      }
      /**
       * <code>optional int64 oilUnsafe = 22;</code>
       *
       * <pre>
       * 石油(非受保护)
       * </pre>
       */
      public Builder setOilUnsafe(long value) {
        bitField0_ |= 0x00020000;
        oilUnsafe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oilUnsafe = 22;</code>
       *
       * <pre>
       * 石油(非受保护)
       * </pre>
       */
      public Builder clearOilUnsafe() {
        bitField0_ = (bitField0_ & ~0x00020000);
        oilUnsafe_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 tombarthiteUnsafe = 23;
      private long tombarthiteUnsafe_ ;
      /**
       * <code>optional int64 tombarthiteUnsafe = 23;</code>
       *
       * <pre>
       * 合金(非受保护)
       * </pre>
       */
      public boolean hasTombarthiteUnsafe() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 tombarthiteUnsafe = 23;</code>
       *
       * <pre>
       * 合金(非受保护)
       * </pre>
       */
      public long getTombarthiteUnsafe() {
        return tombarthiteUnsafe_;
      }
      /**
       * <code>optional int64 tombarthiteUnsafe = 23;</code>
       *
       * <pre>
       * 合金(非受保护)
       * </pre>
       */
      public Builder setTombarthiteUnsafe(long value) {
        bitField0_ |= 0x00040000;
        tombarthiteUnsafe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tombarthiteUnsafe = 23;</code>
       *
       * <pre>
       * 合金(非受保护)
       * </pre>
       */
      public Builder clearTombarthiteUnsafe() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tombarthiteUnsafe_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 steelUnsafe = 24;
      private long steelUnsafe_ ;
      /**
       * <code>optional int64 steelUnsafe = 24;</code>
       *
       * <pre>
       * 铀矿(非受保护)
       * </pre>
       */
      public boolean hasSteelUnsafe() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 steelUnsafe = 24;</code>
       *
       * <pre>
       * 铀矿(非受保护)
       * </pre>
       */
      public long getSteelUnsafe() {
        return steelUnsafe_;
      }
      /**
       * <code>optional int64 steelUnsafe = 24;</code>
       *
       * <pre>
       * 铀矿(非受保护)
       * </pre>
       */
      public Builder setSteelUnsafe(long value) {
        bitField0_ |= 0x00080000;
        steelUnsafe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 steelUnsafe = 24;</code>
       *
       * <pre>
       * 铀矿(非受保护)
       * </pre>
       */
      public Builder clearSteelUnsafe() {
        bitField0_ = (bitField0_ & ~0x00080000);
        steelUnsafe_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 goldoreNotEnough = 25;
      private long goldoreNotEnough_ ;
      /**
       * <code>optional int64 goldoreNotEnough = 25;</code>
       *
       * <pre>
       * 金矿不足数量
       * </pre>
       */
      public boolean hasGoldoreNotEnough() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 goldoreNotEnough = 25;</code>
       *
       * <pre>
       * 金矿不足数量
       * </pre>
       */
      public long getGoldoreNotEnough() {
        return goldoreNotEnough_;
      }
      /**
       * <code>optional int64 goldoreNotEnough = 25;</code>
       *
       * <pre>
       * 金矿不足数量
       * </pre>
       */
      public Builder setGoldoreNotEnough(long value) {
        bitField0_ |= 0x00100000;
        goldoreNotEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 goldoreNotEnough = 25;</code>
       *
       * <pre>
       * 金矿不足数量
       * </pre>
       */
      public Builder clearGoldoreNotEnough() {
        bitField0_ = (bitField0_ & ~0x00100000);
        goldoreNotEnough_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 oilNotEnough = 26;
      private long oilNotEnough_ ;
      /**
       * <code>optional int64 oilNotEnough = 26;</code>
       *
       * <pre>
       * 石油不足数量
       * </pre>
       */
      public boolean hasOilNotEnough() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 oilNotEnough = 26;</code>
       *
       * <pre>
       * 石油不足数量
       * </pre>
       */
      public long getOilNotEnough() {
        return oilNotEnough_;
      }
      /**
       * <code>optional int64 oilNotEnough = 26;</code>
       *
       * <pre>
       * 石油不足数量
       * </pre>
       */
      public Builder setOilNotEnough(long value) {
        bitField0_ |= 0x00200000;
        oilNotEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 oilNotEnough = 26;</code>
       *
       * <pre>
       * 石油不足数量
       * </pre>
       */
      public Builder clearOilNotEnough() {
        bitField0_ = (bitField0_ & ~0x00200000);
        oilNotEnough_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 tombarthiteNotEnough = 27;
      private long tombarthiteNotEnough_ ;
      /**
       * <code>optional int64 tombarthiteNotEnough = 27;</code>
       *
       * <pre>
       * 合金不足数量
       * </pre>
       */
      public boolean hasTombarthiteNotEnough() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 tombarthiteNotEnough = 27;</code>
       *
       * <pre>
       * 合金不足数量
       * </pre>
       */
      public long getTombarthiteNotEnough() {
        return tombarthiteNotEnough_;
      }
      /**
       * <code>optional int64 tombarthiteNotEnough = 27;</code>
       *
       * <pre>
       * 合金不足数量
       * </pre>
       */
      public Builder setTombarthiteNotEnough(long value) {
        bitField0_ |= 0x00400000;
        tombarthiteNotEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tombarthiteNotEnough = 27;</code>
       *
       * <pre>
       * 合金不足数量
       * </pre>
       */
      public Builder clearTombarthiteNotEnough() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tombarthiteNotEnough_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 steelNotEnough = 28;
      private long steelNotEnough_ ;
      /**
       * <code>optional int64 steelNotEnough = 28;</code>
       *
       * <pre>
       * 铀矿不足数量
       * </pre>
       */
      public boolean hasSteelNotEnough() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 steelNotEnough = 28;</code>
       *
       * <pre>
       * 铀矿不足数量
       * </pre>
       */
      public long getSteelNotEnough() {
        return steelNotEnough_;
      }
      /**
       * <code>optional int64 steelNotEnough = 28;</code>
       *
       * <pre>
       * 铀矿不足数量
       * </pre>
       */
      public Builder setSteelNotEnough(long value) {
        bitField0_ |= 0x00800000;
        steelNotEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 steelNotEnough = 28;</code>
       *
       * <pre>
       * 铀矿不足数量
       * </pre>
       */
      public Builder clearSteelNotEnough() {
        bitField0_ = (bitField0_ & ~0x00800000);
        steelNotEnough_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 fuelNotEnough = 29;
      private long fuelNotEnough_ ;
      /**
       * <code>optional int64 fuelNotEnough = 29;</code>
       *
       * <pre>
       * 钢材不足数量
       * </pre>
       */
      public boolean hasFuelNotEnough() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 fuelNotEnough = 29;</code>
       *
       * <pre>
       * 钢材不足数量
       * </pre>
       */
      public long getFuelNotEnough() {
        return fuelNotEnough_;
      }
      /**
       * <code>optional int64 fuelNotEnough = 29;</code>
       *
       * <pre>
       * 钢材不足数量
       * </pre>
       */
      public Builder setFuelNotEnough(long value) {
        bitField0_ |= 0x01000000;
        fuelNotEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fuelNotEnough = 29;</code>
       *
       * <pre>
       * 钢材不足数量
       * </pre>
       */
      public Builder clearFuelNotEnough() {
        bitField0_ = (bitField0_ & ~0x01000000);
        fuelNotEnough_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 militaryScore = 30;
      private long militaryScore_ ;
      /**
       * <code>optional int64 militaryScore = 30;</code>
       *
       * <pre>
       * 军演积分
       * </pre>
       */
      public boolean hasMilitaryScore() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 militaryScore = 30;</code>
       *
       * <pre>
       * 军演积分
       * </pre>
       */
      public long getMilitaryScore() {
        return militaryScore_;
      }
      /**
       * <code>optional int64 militaryScore = 30;</code>
       *
       * <pre>
       * 军演积分
       * </pre>
       */
      public Builder setMilitaryScore(long value) {
        bitField0_ |= 0x02000000;
        militaryScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 militaryScore = 30;</code>
       *
       * <pre>
       * 军演积分
       * </pre>
       */
      public Builder clearMilitaryScore() {
        bitField0_ = (bitField0_ & ~0x02000000);
        militaryScore_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 cyborgScore = 31;
      private long cyborgScore_ ;
      /**
       * <code>optional int64 cyborgScore = 31;</code>
       *
       * <pre>
       * 赛博积分
       * </pre>
       */
      public boolean hasCyborgScore() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 cyborgScore = 31;</code>
       *
       * <pre>
       * 赛博积分
       * </pre>
       */
      public long getCyborgScore() {
        return cyborgScore_;
      }
      /**
       * <code>optional int64 cyborgScore = 31;</code>
       *
       * <pre>
       * 赛博积分
       * </pre>
       */
      public Builder setCyborgScore(long value) {
        bitField0_ |= 0x04000000;
        cyborgScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 cyborgScore = 31;</code>
       *
       * <pre>
       * 赛博积分
       * </pre>
       */
      public Builder clearCyborgScore() {
        bitField0_ = (bitField0_ & ~0x04000000);
        cyborgScore_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 dyzzScore = 32;
      private long dyzzScore_ ;
      /**
       * <code>optional int64 dyzzScore = 32;</code>
       *
       * <pre>
       * 达雅积分
       * </pre>
       */
      public boolean hasDyzzScore() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 dyzzScore = 32;</code>
       *
       * <pre>
       * 达雅积分
       * </pre>
       */
      public long getDyzzScore() {
        return dyzzScore_;
      }
      /**
       * <code>optional int64 dyzzScore = 32;</code>
       *
       * <pre>
       * 达雅积分
       * </pre>
       */
      public Builder setDyzzScore(long value) {
        bitField0_ |= 0x08000000;
        dyzzScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 dyzzScore = 32;</code>
       *
       * <pre>
       * 达雅积分
       * </pre>
       */
      public Builder clearDyzzScore() {
        bitField0_ = (bitField0_ & ~0x08000000);
        dyzzScore_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SyncAttrInfo)
    }

    static {
      defaultInstance = new SyncAttrInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SyncAttrInfo)
  }

  public interface ConsumeItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see	ItemType.changeType
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see	ItemType.changeType
     * </pre>
     */
    int getType();

    // required string id = 2;
    /**
     * <code>required string id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required string id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // required int32 itemId = 3;
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    int getItemId();

    // optional int32 count = 4;
    /**
     * <code>optional int32 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象数量
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional int32 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象数量
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code ConsumeItem}
   *
   * <pre>
   * 推送道具	装备 角色的需要移除的Id的列表
   * </pre>
   */
  public static final class ConsumeItem extends
      com.google.protobuf.GeneratedMessage
      implements ConsumeItemOrBuilder {
    // Use ConsumeItem.newBuilder() to construct.
    private ConsumeItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConsumeItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConsumeItem defaultInstance;
    public static ConsumeItem getDefaultInstance() {
      return defaultInstance;
    }

    public ConsumeItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConsumeItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              id_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              count_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.Consume.internal_static_ConsumeItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.Consume.internal_static_ConsumeItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.Consume.ConsumeItem.class, com.hawk.game.protocol.Consume.ConsumeItem.Builder.class);
    }

    public static com.google.protobuf.Parser<ConsumeItem> PARSER =
        new com.google.protobuf.AbstractParser<ConsumeItem>() {
      public ConsumeItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConsumeItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConsumeItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see	ItemType.changeType
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     * 类型  @see	ItemType.changeType
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.Object id_;
    /**
     * <code>required string id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 2;</code>
     *
     * <pre>
     * 唯一Id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 itemId = 3;
    public static final int ITEMID_FIELD_NUMBER = 3;
    private int itemId_;
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 itemId = 3;</code>
     *
     * <pre>
     * 物品编号
     * </pre>
     */
    public int getItemId() {
      return itemId_;
    }

    // optional int32 count = 4;
    public static final int COUNT_FIELD_NUMBER = 4;
    private int count_;
    /**
     * <code>optional int32 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象数量
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 count = 4;</code>
     *
     * <pre>
     * 实体对象直接移除对象数量
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      type_ = 0;
      id_ = "";
      itemId_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, itemId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.Consume.ConsumeItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.Consume.ConsumeItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ConsumeItem}
     *
     * <pre>
     * 推送道具	装备 角色的需要移除的Id的列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.Consume.ConsumeItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.Consume.internal_static_ConsumeItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.Consume.internal_static_ConsumeItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.Consume.ConsumeItem.class, com.hawk.game.protocol.Consume.ConsumeItem.Builder.class);
      }

      // Construct using com.hawk.game.protocol.Consume.ConsumeItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.Consume.internal_static_ConsumeItem_descriptor;
      }

      public com.hawk.game.protocol.Consume.ConsumeItem getDefaultInstanceForType() {
        return com.hawk.game.protocol.Consume.ConsumeItem.getDefaultInstance();
      }

      public com.hawk.game.protocol.Consume.ConsumeItem build() {
        com.hawk.game.protocol.Consume.ConsumeItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.Consume.ConsumeItem buildPartial() {
        com.hawk.game.protocol.Consume.ConsumeItem result = new com.hawk.game.protocol.Consume.ConsumeItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.Consume.ConsumeItem) {
          return mergeFrom((com.hawk.game.protocol.Consume.ConsumeItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.Consume.ConsumeItem other) {
        if (other == com.hawk.game.protocol.Consume.ConsumeItem.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasId()) {
          bitField0_ |= 0x00000002;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasItemId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.Consume.ConsumeItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.Consume.ConsumeItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see	ItemType.changeType
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see	ItemType.changeType
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see	ItemType.changeType
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       * 类型  @see	ItemType.changeType
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // required string id = 2;
      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 2;</code>
       *
       * <pre>
       * 唯一Id
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }

      // required int32 itemId = 3;
      private int itemId_ ;
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000004;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemId = 3;</code>
       *
       * <pre>
       * 物品编号
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 count = 4;
      private int count_ ;
      /**
       * <code>optional int32 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象数量
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象数量
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional int32 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象数量
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000008;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 count = 4;</code>
       *
       * <pre>
       * 实体对象直接移除对象数量
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ConsumeItem)
    }

    static {
      defaultInstance = new ConsumeItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ConsumeItem)
  }

  public interface HPConsumeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .SyncAttrInfo attrInfo = 1;
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    boolean hasAttrInfo();
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    com.hawk.game.protocol.Consume.SyncAttrInfo getAttrInfo();
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder getAttrInfoOrBuilder();

    // repeated .ConsumeItem consumeItem = 2;
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.Consume.ConsumeItem> 
        getConsumeItemList();
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    com.hawk.game.protocol.Consume.ConsumeItem getConsumeItem(int index);
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    int getConsumeItemCount();
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.Consume.ConsumeItemOrBuilder> 
        getConsumeItemOrBuilderList();
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    com.hawk.game.protocol.Consume.ConsumeItemOrBuilder getConsumeItemOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HPConsumeInfo}
   *
   * <pre>
   * 经常发生变动的值主动推送给前端
   * </pre>
   */
  public static final class HPConsumeInfo extends
      com.google.protobuf.GeneratedMessage
      implements HPConsumeInfoOrBuilder {
    // Use HPConsumeInfo.newBuilder() to construct.
    private HPConsumeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HPConsumeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HPConsumeInfo defaultInstance;
    public static HPConsumeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HPConsumeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HPConsumeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.hawk.game.protocol.Consume.SyncAttrInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = attrInfo_.toBuilder();
              }
              attrInfo_ = input.readMessage(com.hawk.game.protocol.Consume.SyncAttrInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attrInfo_);
                attrInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                consumeItem_ = new java.util.ArrayList<com.hawk.game.protocol.Consume.ConsumeItem>();
                mutable_bitField0_ |= 0x00000002;
              }
              consumeItem_.add(input.readMessage(com.hawk.game.protocol.Consume.ConsumeItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          consumeItem_ = java.util.Collections.unmodifiableList(consumeItem_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.Consume.internal_static_HPConsumeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.Consume.internal_static_HPConsumeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.Consume.HPConsumeInfo.class, com.hawk.game.protocol.Consume.HPConsumeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HPConsumeInfo> PARSER =
        new com.google.protobuf.AbstractParser<HPConsumeInfo>() {
      public HPConsumeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HPConsumeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HPConsumeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .SyncAttrInfo attrInfo = 1;
    public static final int ATTRINFO_FIELD_NUMBER = 1;
    private com.hawk.game.protocol.Consume.SyncAttrInfo attrInfo_;
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    public boolean hasAttrInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    public com.hawk.game.protocol.Consume.SyncAttrInfo getAttrInfo() {
      return attrInfo_;
    }
    /**
     * <code>optional .SyncAttrInfo attrInfo = 1;</code>
     *
     * <pre>
     * 玩家基本信息
     * </pre>
     */
    public com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder getAttrInfoOrBuilder() {
      return attrInfo_;
    }

    // repeated .ConsumeItem consumeItem = 2;
    public static final int CONSUMEITEM_FIELD_NUMBER = 2;
    private java.util.List<com.hawk.game.protocol.Consume.ConsumeItem> consumeItem_;
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.Consume.ConsumeItem> getConsumeItemList() {
      return consumeItem_;
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.Consume.ConsumeItemOrBuilder> 
        getConsumeItemOrBuilderList() {
      return consumeItem_;
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public int getConsumeItemCount() {
      return consumeItem_.size();
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public com.hawk.game.protocol.Consume.ConsumeItem getConsumeItem(int index) {
      return consumeItem_.get(index);
    }
    /**
     * <code>repeated .ConsumeItem consumeItem = 2;</code>
     *
     * <pre>
     * 实体对象移除的推送 
     * </pre>
     */
    public com.hawk.game.protocol.Consume.ConsumeItemOrBuilder getConsumeItemOrBuilder(
        int index) {
      return consumeItem_.get(index);
    }

    private void initFields() {
      attrInfo_ = com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
      consumeItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getConsumeItemCount(); i++) {
        if (!getConsumeItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, attrInfo_);
      }
      for (int i = 0; i < consumeItem_.size(); i++) {
        output.writeMessage(2, consumeItem_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, attrInfo_);
      }
      for (int i = 0; i < consumeItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, consumeItem_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.Consume.HPConsumeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.Consume.HPConsumeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HPConsumeInfo}
     *
     * <pre>
     * 经常发生变动的值主动推送给前端
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.Consume.HPConsumeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.Consume.internal_static_HPConsumeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.Consume.internal_static_HPConsumeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.Consume.HPConsumeInfo.class, com.hawk.game.protocol.Consume.HPConsumeInfo.Builder.class);
      }

      // Construct using com.hawk.game.protocol.Consume.HPConsumeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttrInfoFieldBuilder();
          getConsumeItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (attrInfoBuilder_ == null) {
          attrInfo_ = com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
        } else {
          attrInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (consumeItemBuilder_ == null) {
          consumeItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          consumeItemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.Consume.internal_static_HPConsumeInfo_descriptor;
      }

      public com.hawk.game.protocol.Consume.HPConsumeInfo getDefaultInstanceForType() {
        return com.hawk.game.protocol.Consume.HPConsumeInfo.getDefaultInstance();
      }

      public com.hawk.game.protocol.Consume.HPConsumeInfo build() {
        com.hawk.game.protocol.Consume.HPConsumeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.Consume.HPConsumeInfo buildPartial() {
        com.hawk.game.protocol.Consume.HPConsumeInfo result = new com.hawk.game.protocol.Consume.HPConsumeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (attrInfoBuilder_ == null) {
          result.attrInfo_ = attrInfo_;
        } else {
          result.attrInfo_ = attrInfoBuilder_.build();
        }
        if (consumeItemBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            consumeItem_ = java.util.Collections.unmodifiableList(consumeItem_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.consumeItem_ = consumeItem_;
        } else {
          result.consumeItem_ = consumeItemBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.Consume.HPConsumeInfo) {
          return mergeFrom((com.hawk.game.protocol.Consume.HPConsumeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.Consume.HPConsumeInfo other) {
        if (other == com.hawk.game.protocol.Consume.HPConsumeInfo.getDefaultInstance()) return this;
        if (other.hasAttrInfo()) {
          mergeAttrInfo(other.getAttrInfo());
        }
        if (consumeItemBuilder_ == null) {
          if (!other.consumeItem_.isEmpty()) {
            if (consumeItem_.isEmpty()) {
              consumeItem_ = other.consumeItem_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureConsumeItemIsMutable();
              consumeItem_.addAll(other.consumeItem_);
            }
            onChanged();
          }
        } else {
          if (!other.consumeItem_.isEmpty()) {
            if (consumeItemBuilder_.isEmpty()) {
              consumeItemBuilder_.dispose();
              consumeItemBuilder_ = null;
              consumeItem_ = other.consumeItem_;
              bitField0_ = (bitField0_ & ~0x00000002);
              consumeItemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConsumeItemFieldBuilder() : null;
            } else {
              consumeItemBuilder_.addAllMessages(other.consumeItem_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getConsumeItemCount(); i++) {
          if (!getConsumeItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.Consume.HPConsumeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.Consume.HPConsumeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .SyncAttrInfo attrInfo = 1;
      private com.hawk.game.protocol.Consume.SyncAttrInfo attrInfo_ = com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.Consume.SyncAttrInfo, com.hawk.game.protocol.Consume.SyncAttrInfo.Builder, com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder> attrInfoBuilder_;
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public boolean hasAttrInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public com.hawk.game.protocol.Consume.SyncAttrInfo getAttrInfo() {
        if (attrInfoBuilder_ == null) {
          return attrInfo_;
        } else {
          return attrInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder setAttrInfo(com.hawk.game.protocol.Consume.SyncAttrInfo value) {
        if (attrInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attrInfo_ = value;
          onChanged();
        } else {
          attrInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder setAttrInfo(
          com.hawk.game.protocol.Consume.SyncAttrInfo.Builder builderForValue) {
        if (attrInfoBuilder_ == null) {
          attrInfo_ = builderForValue.build();
          onChanged();
        } else {
          attrInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder mergeAttrInfo(com.hawk.game.protocol.Consume.SyncAttrInfo value) {
        if (attrInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              attrInfo_ != com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance()) {
            attrInfo_ =
              com.hawk.game.protocol.Consume.SyncAttrInfo.newBuilder(attrInfo_).mergeFrom(value).buildPartial();
          } else {
            attrInfo_ = value;
          }
          onChanged();
        } else {
          attrInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public Builder clearAttrInfo() {
        if (attrInfoBuilder_ == null) {
          attrInfo_ = com.hawk.game.protocol.Consume.SyncAttrInfo.getDefaultInstance();
          onChanged();
        } else {
          attrInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public com.hawk.game.protocol.Consume.SyncAttrInfo.Builder getAttrInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAttrInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      public com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder getAttrInfoOrBuilder() {
        if (attrInfoBuilder_ != null) {
          return attrInfoBuilder_.getMessageOrBuilder();
        } else {
          return attrInfo_;
        }
      }
      /**
       * <code>optional .SyncAttrInfo attrInfo = 1;</code>
       *
       * <pre>
       * 玩家基本信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.Consume.SyncAttrInfo, com.hawk.game.protocol.Consume.SyncAttrInfo.Builder, com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder> 
          getAttrInfoFieldBuilder() {
        if (attrInfoBuilder_ == null) {
          attrInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.Consume.SyncAttrInfo, com.hawk.game.protocol.Consume.SyncAttrInfo.Builder, com.hawk.game.protocol.Consume.SyncAttrInfoOrBuilder>(
                  attrInfo_,
                  getParentForChildren(),
                  isClean());
          attrInfo_ = null;
        }
        return attrInfoBuilder_;
      }

      // repeated .ConsumeItem consumeItem = 2;
      private java.util.List<com.hawk.game.protocol.Consume.ConsumeItem> consumeItem_ =
        java.util.Collections.emptyList();
      private void ensureConsumeItemIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          consumeItem_ = new java.util.ArrayList<com.hawk.game.protocol.Consume.ConsumeItem>(consumeItem_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.Consume.ConsumeItem, com.hawk.game.protocol.Consume.ConsumeItem.Builder, com.hawk.game.protocol.Consume.ConsumeItemOrBuilder> consumeItemBuilder_;

      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.Consume.ConsumeItem> getConsumeItemList() {
        if (consumeItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(consumeItem_);
        } else {
          return consumeItemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public int getConsumeItemCount() {
        if (consumeItemBuilder_ == null) {
          return consumeItem_.size();
        } else {
          return consumeItemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.hawk.game.protocol.Consume.ConsumeItem getConsumeItem(int index) {
        if (consumeItemBuilder_ == null) {
          return consumeItem_.get(index);
        } else {
          return consumeItemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder setConsumeItem(
          int index, com.hawk.game.protocol.Consume.ConsumeItem value) {
        if (consumeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeItemIsMutable();
          consumeItem_.set(index, value);
          onChanged();
        } else {
          consumeItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder setConsumeItem(
          int index, com.hawk.game.protocol.Consume.ConsumeItem.Builder builderForValue) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          consumeItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(com.hawk.game.protocol.Consume.ConsumeItem value) {
        if (consumeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeItemIsMutable();
          consumeItem_.add(value);
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(
          int index, com.hawk.game.protocol.Consume.ConsumeItem value) {
        if (consumeItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConsumeItemIsMutable();
          consumeItem_.add(index, value);
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(
          com.hawk.game.protocol.Consume.ConsumeItem.Builder builderForValue) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.add(builderForValue.build());
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addConsumeItem(
          int index, com.hawk.game.protocol.Consume.ConsumeItem.Builder builderForValue) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          consumeItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder addAllConsumeItem(
          java.lang.Iterable<? extends com.hawk.game.protocol.Consume.ConsumeItem> values) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          super.addAll(values, consumeItem_);
          onChanged();
        } else {
          consumeItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder clearConsumeItem() {
        if (consumeItemBuilder_ == null) {
          consumeItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          consumeItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public Builder removeConsumeItem(int index) {
        if (consumeItemBuilder_ == null) {
          ensureConsumeItemIsMutable();
          consumeItem_.remove(index);
          onChanged();
        } else {
          consumeItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.hawk.game.protocol.Consume.ConsumeItem.Builder getConsumeItemBuilder(
          int index) {
        return getConsumeItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.hawk.game.protocol.Consume.ConsumeItemOrBuilder getConsumeItemOrBuilder(
          int index) {
        if (consumeItemBuilder_ == null) {
          return consumeItem_.get(index);  } else {
          return consumeItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.Consume.ConsumeItemOrBuilder> 
           getConsumeItemOrBuilderList() {
        if (consumeItemBuilder_ != null) {
          return consumeItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(consumeItem_);
        }
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.hawk.game.protocol.Consume.ConsumeItem.Builder addConsumeItemBuilder() {
        return getConsumeItemFieldBuilder().addBuilder(
            com.hawk.game.protocol.Consume.ConsumeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public com.hawk.game.protocol.Consume.ConsumeItem.Builder addConsumeItemBuilder(
          int index) {
        return getConsumeItemFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.Consume.ConsumeItem.getDefaultInstance());
      }
      /**
       * <code>repeated .ConsumeItem consumeItem = 2;</code>
       *
       * <pre>
       * 实体对象移除的推送 
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.Consume.ConsumeItem.Builder> 
           getConsumeItemBuilderList() {
        return getConsumeItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.Consume.ConsumeItem, com.hawk.game.protocol.Consume.ConsumeItem.Builder, com.hawk.game.protocol.Consume.ConsumeItemOrBuilder> 
          getConsumeItemFieldBuilder() {
        if (consumeItemBuilder_ == null) {
          consumeItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.Consume.ConsumeItem, com.hawk.game.protocol.Consume.ConsumeItem.Builder, com.hawk.game.protocol.Consume.ConsumeItemOrBuilder>(
                  consumeItem_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          consumeItem_ = null;
        }
        return consumeItemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HPConsumeInfo)
    }

    static {
      defaultInstance = new HPConsumeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HPConsumeInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncAttrInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SyncAttrInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConsumeItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConsumeItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HPConsumeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HPConsumeInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rConsume.proto\"\262\004\n\014SyncAttrInfo\022\014\n\004gold" +
      "\030\001 \001(\005\022\014\n\004coin\030\002 \001(\005\022\017\n\007goldore\030\004 \001(\003\022\013\n" +
      "\003oil\030\005 \001(\003\022\r\n\005steel\030\006 \001(\003\022\023\n\013tombarthite" +
      "\030\007 \001(\003\022\r\n\005level\030\010 \001(\005\022\013\n\003exp\030\t \001(\005\022\020\n\010vi" +
      "pLevel\030\n \001(\005\022\020\n\010electric\030\013 \001(\003\022\023\n\013electr" +
      "icMax\030\014 \001(\003\022\013\n\003vit\030\r \001(\005\022\031\n\021guildContrib" +
      "ution\030\016 \001(\005\022\020\n\010recruits\030\017 \001(\003\022\017\n\007diamond" +
      "\030\020 \001(\005\022\016\n\006vipExp\030\021 \001(\005\022\025\n\rgoldoreUnsafe\030" +
      "\025 \001(\003\022\021\n\toilUnsafe\030\026 \001(\003\022\031\n\021tombarthiteU" +
      "nsafe\030\027 \001(\003\022\023\n\013steelUnsafe\030\030 \001(\003\022\030\n\020gold",
      "oreNotEnough\030\031 \001(\003\022\024\n\014oilNotEnough\030\032 \001(\003" +
      "\022\034\n\024tombarthiteNotEnough\030\033 \001(\003\022\026\n\016steelN" +
      "otEnough\030\034 \001(\003\022\025\n\rfuelNotEnough\030\035 \001(\003\022\025\n" +
      "\rmilitaryScore\030\036 \001(\003\022\023\n\013cyborgScore\030\037 \001(" +
      "\003\022\021\n\tdyzzScore\030  \001(\003\"F\n\013ConsumeItem\022\014\n\004t" +
      "ype\030\001 \002(\005\022\n\n\002id\030\002 \002(\t\022\016\n\006itemId\030\003 \002(\005\022\r\n" +
      "\005count\030\004 \001(\005\"S\n\rHPConsumeInfo\022\037\n\010attrInf" +
      "o\030\001 \001(\0132\r.SyncAttrInfo\022!\n\013consumeItem\030\002 " +
      "\003(\0132\014.ConsumeItemB\030\n\026com.hawk.game.proto" +
      "col"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SyncAttrInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SyncAttrInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SyncAttrInfo_descriptor,
              new java.lang.String[] { "Gold", "Coin", "Goldore", "Oil", "Steel", "Tombarthite", "Level", "Exp", "VipLevel", "Electric", "ElectricMax", "Vit", "GuildContribution", "Recruits", "Diamond", "VipExp", "GoldoreUnsafe", "OilUnsafe", "TombarthiteUnsafe", "SteelUnsafe", "GoldoreNotEnough", "OilNotEnough", "TombarthiteNotEnough", "SteelNotEnough", "FuelNotEnough", "MilitaryScore", "CyborgScore", "DyzzScore", });
          internal_static_ConsumeItem_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ConsumeItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConsumeItem_descriptor,
              new java.lang.String[] { "Type", "Id", "ItemId", "Count", });
          internal_static_HPConsumeInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_HPConsumeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HPConsumeInfo_descriptor,
              new java.lang.String[] { "AttrInfo", "ConsumeItem", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
