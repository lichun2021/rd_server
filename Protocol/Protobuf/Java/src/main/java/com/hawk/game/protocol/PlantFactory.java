// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlantFactory.proto

package com.hawk.game.protocol;

public final class PlantFactory {
  private PlantFactory() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code PBPlantFactoryType}
   *
   * <pre>
   **五条生产线
   * </pre>
   */
  public enum PBPlantFactoryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LINE_MEDAL = 1;</code>
     *
     * <pre>
     * 勋章
     * </pre>
     */
    LINE_MEDAL(0, 1),
    /**
     * <code>LINE_CORE = 2;</code>
     *
     * <pre>
     * 核心
     * </pre>
     */
    LINE_CORE(1, 2),
    /**
     * <code>LINE_CRYSTAL = 3;</code>
     *
     * <pre>
     * 晶体
     * </pre>
     */
    LINE_CRYSTAL(2, 3),
    /**
     * <code>LINE_BRILLIANT_MEDAL = 4;</code>
     *
     * <pre>
     * 辉煌勋章
     * </pre>
     */
    LINE_BRILLIANT_MEDAL(3, 4),
    /**
     * <code>LINE_TAIKUAGNGMUTI = 5;</code>
     *
     * <pre>
     * 泰矿母体
     * </pre>
     */
    LINE_TAIKUAGNGMUTI(4, 5),
    /**
     * <code>LINE_TAINENG_HUIJIN = 6;</code>
     *
     * <pre>
     * 辉金
     * </pre>
     */
    LINE_TAINENG_HUIJIN(5, 6),
    ;

    /**
     * <code>LINE_MEDAL = 1;</code>
     *
     * <pre>
     * 勋章
     * </pre>
     */
    public static final int LINE_MEDAL_VALUE = 1;
    /**
     * <code>LINE_CORE = 2;</code>
     *
     * <pre>
     * 核心
     * </pre>
     */
    public static final int LINE_CORE_VALUE = 2;
    /**
     * <code>LINE_CRYSTAL = 3;</code>
     *
     * <pre>
     * 晶体
     * </pre>
     */
    public static final int LINE_CRYSTAL_VALUE = 3;
    /**
     * <code>LINE_BRILLIANT_MEDAL = 4;</code>
     *
     * <pre>
     * 辉煌勋章
     * </pre>
     */
    public static final int LINE_BRILLIANT_MEDAL_VALUE = 4;
    /**
     * <code>LINE_TAIKUAGNGMUTI = 5;</code>
     *
     * <pre>
     * 泰矿母体
     * </pre>
     */
    public static final int LINE_TAIKUAGNGMUTI_VALUE = 5;
    /**
     * <code>LINE_TAINENG_HUIJIN = 6;</code>
     *
     * <pre>
     * 辉金
     * </pre>
     */
    public static final int LINE_TAINENG_HUIJIN_VALUE = 6;


    public final int getNumber() { return value; }

    public static PBPlantFactoryType valueOf(int value) {
      switch (value) {
        case 1: return LINE_MEDAL;
        case 2: return LINE_CORE;
        case 3: return LINE_CRYSTAL;
        case 4: return LINE_BRILLIANT_MEDAL;
        case 5: return LINE_TAIKUAGNGMUTI;
        case 6: return LINE_TAINENG_HUIJIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PBPlantFactoryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PBPlantFactoryType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PBPlantFactoryType>() {
            public PBPlantFactoryType findValueByNumber(int number) {
              return PBPlantFactoryType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.getDescriptor().getEnumTypes().get(0);
    }

    private static final PBPlantFactoryType[] VALUES = values();

    public static PBPlantFactoryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PBPlantFactoryType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PBPlantFactoryType)
  }

  public interface PBUnlockFactoryRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cfgId = 1;
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_factory.lua id 
     * </pre>
     */
    boolean hasCfgId();
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_factory.lua id 
     * </pre>
     */
    int getCfgId();
  }
  /**
   * Protobuf type {@code PBUnlockFactoryRequest}
   *
   * <pre>
   * 解锁生产线
   * </pre>
   */
  public static final class PBUnlockFactoryRequest extends
      com.google.protobuf.GeneratedMessage
      implements PBUnlockFactoryRequestOrBuilder {
    // Use PBUnlockFactoryRequest.newBuilder() to construct.
    private PBUnlockFactoryRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBUnlockFactoryRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBUnlockFactoryRequest defaultInstance;
    public static PBUnlockFactoryRequest getDefaultInstance() {
      return defaultInstance;
    }

    public PBUnlockFactoryRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBUnlockFactoryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cfgId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBUnlockFactoryRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBUnlockFactoryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.class, com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<PBUnlockFactoryRequest> PARSER =
        new com.google.protobuf.AbstractParser<PBUnlockFactoryRequest>() {
      public PBUnlockFactoryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBUnlockFactoryRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBUnlockFactoryRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cfgId = 1;
    public static final int CFGID_FIELD_NUMBER = 1;
    private int cfgId_;
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_factory.lua id 
     * </pre>
     */
    public boolean hasCfgId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_factory.lua id 
     * </pre>
     */
    public int getCfgId() {
      return cfgId_;
    }

    private void initFields() {
      cfgId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cfgId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cfgId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBUnlockFactoryRequest}
     *
     * <pre>
     * 解锁生产线
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBUnlockFactoryRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBUnlockFactoryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.class, com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBUnlockFactoryRequest_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest build() {
        com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest result = new com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cfgId_ = cfgId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest.getDefaultInstance()) return this;
        if (other.hasCfgId()) {
          setCfgId(other.getCfgId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBUnlockFactoryRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cfgId = 1;
      private int cfgId_ ;
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_factory.lua id 
       * </pre>
       */
      public boolean hasCfgId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_factory.lua id 
       * </pre>
       */
      public int getCfgId() {
        return cfgId_;
      }
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_factory.lua id 
       * </pre>
       */
      public Builder setCfgId(int value) {
        bitField0_ |= 0x00000001;
        cfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_factory.lua id 
       * </pre>
       */
      public Builder clearCfgId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cfgId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBUnlockFactoryRequest)
    }

    static {
      defaultInstance = new PBUnlockFactoryRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBUnlockFactoryRequest)
  }

  public interface PBCollectFactoryRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .PBPlantFactoryType types = 1;
    /**
     * <code>repeated .PBPlantFactoryType types = 1;</code>
     *
     * <pre>
     * 收哪个类型
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType> getTypesList();
    /**
     * <code>repeated .PBPlantFactoryType types = 1;</code>
     *
     * <pre>
     * 收哪个类型
     * </pre>
     */
    int getTypesCount();
    /**
     * <code>repeated .PBPlantFactoryType types = 1;</code>
     *
     * <pre>
     * 收哪个类型
     * </pre>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getTypes(int index);
  }
  /**
   * Protobuf type {@code PBCollectFactoryRequest}
   *
   * <pre>
   * 收资源
   * </pre>
   */
  public static final class PBCollectFactoryRequest extends
      com.google.protobuf.GeneratedMessage
      implements PBCollectFactoryRequestOrBuilder {
    // Use PBCollectFactoryRequest.newBuilder() to construct.
    private PBCollectFactoryRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBCollectFactoryRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBCollectFactoryRequest defaultInstance;
    public static PBCollectFactoryRequest getDefaultInstance() {
      return defaultInstance;
    }

    public PBCollectFactoryRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBCollectFactoryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  types_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType>();
                  mutable_bitField0_ |= 0x00000001;
                }
                types_.add(value);
              }
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    types_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  types_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          types_ = java.util.Collections.unmodifiableList(types_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBCollectFactoryRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBCollectFactoryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.class, com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<PBCollectFactoryRequest> PARSER =
        new com.google.protobuf.AbstractParser<PBCollectFactoryRequest>() {
      public PBCollectFactoryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBCollectFactoryRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBCollectFactoryRequest> getParserForType() {
      return PARSER;
    }

    // repeated .PBPlantFactoryType types = 1;
    public static final int TYPES_FIELD_NUMBER = 1;
    private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType> types_;
    /**
     * <code>repeated .PBPlantFactoryType types = 1;</code>
     *
     * <pre>
     * 收哪个类型
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType> getTypesList() {
      return types_;
    }
    /**
     * <code>repeated .PBPlantFactoryType types = 1;</code>
     *
     * <pre>
     * 收哪个类型
     * </pre>
     */
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <code>repeated .PBPlantFactoryType types = 1;</code>
     *
     * <pre>
     * 收哪个类型
     * </pre>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getTypes(int index) {
      return types_.get(index);
    }

    private void initFields() {
      types_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < types_.size(); i++) {
        output.writeEnum(1, types_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < types_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(types_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * types_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBCollectFactoryRequest}
     *
     * <pre>
     * 收资源
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBCollectFactoryRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBCollectFactoryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.class, com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        types_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBCollectFactoryRequest_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest build() {
        com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest result = new com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          types_ = java.util.Collections.unmodifiableList(types_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.types_ = types_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest.getDefaultInstance()) return this;
        if (!other.types_.isEmpty()) {
          if (types_.isEmpty()) {
            types_ = other.types_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTypesIsMutable();
            types_.addAll(other.types_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBCollectFactoryRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PBPlantFactoryType types = 1;
      private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType> types_ =
        java.util.Collections.emptyList();
      private void ensureTypesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          types_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType>(types_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryType> getTypesList() {
        return java.util.Collections.unmodifiableList(types_);
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public int getTypesCount() {
        return types_.size();
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getTypes(int index) {
        return types_.get(index);
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public Builder setTypes(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public Builder addTypes(com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypesIsMutable();
        types_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public Builder addAllTypes(
          java.lang.Iterable<? extends com.hawk.game.protocol.PlantFactory.PBPlantFactoryType> values) {
        ensureTypesIsMutable();
        super.addAll(values, types_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryType types = 1;</code>
       *
       * <pre>
       * 收哪个类型
       * </pre>
       */
      public Builder clearTypes() {
        types_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBCollectFactoryRequest)
    }

    static {
      defaultInstance = new PBCollectFactoryRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBCollectFactoryRequest)
  }

  public interface PBUpgradeFactoryReuestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PBPlantFactoryType type = 1;
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getType();
  }
  /**
   * Protobuf type {@code PBUpgradeFactoryReuest}
   *
   * <pre>
   * 升级工厂
   * </pre>
   */
  public static final class PBUpgradeFactoryReuest extends
      com.google.protobuf.GeneratedMessage
      implements PBUpgradeFactoryReuestOrBuilder {
    // Use PBUpgradeFactoryReuest.newBuilder() to construct.
    private PBUpgradeFactoryReuest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBUpgradeFactoryReuest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBUpgradeFactoryReuest defaultInstance;
    public static PBUpgradeFactoryReuest getDefaultInstance() {
      return defaultInstance;
    }

    public PBUpgradeFactoryReuest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBUpgradeFactoryReuest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBUpgradeFactoryReuest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBUpgradeFactoryReuest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.class, com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.Builder.class);
    }

    public static com.google.protobuf.Parser<PBUpgradeFactoryReuest> PARSER =
        new com.google.protobuf.AbstractParser<PBUpgradeFactoryReuest>() {
      public PBUpgradeFactoryReuest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBUpgradeFactoryReuest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBUpgradeFactoryReuest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PBPlantFactoryType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.hawk.game.protocol.PlantFactory.PBPlantFactoryType type_;
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getType() {
      return type_;
    }

    private void initFields() {
      type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBUpgradeFactoryReuest}
     *
     * <pre>
     * 升级工厂
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBUpgradeFactoryReuest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBUpgradeFactoryReuest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.class, com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBUpgradeFactoryReuest_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest build() {
        com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest result = new com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBUpgradeFactoryReuest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PBPlantFactoryType type = 1;
      private com.hawk.game.protocol.PlantFactory.PBPlantFactoryType type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getType() {
        return type_;
      }
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public Builder setType(com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBUpgradeFactoryReuest)
    }

    static {
      defaultInstance = new PBUpgradeFactoryReuest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBUpgradeFactoryReuest)
  }

  public interface PBPlantFactorySyncOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .PBPlantFactoryInfo factories = 1;
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo> 
        getFactoriesList();
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo getFactories(int index);
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    int getFactoriesCount();
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder> 
        getFactoriesOrBuilderList();
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder getFactoriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code PBPlantFactorySync}
   *
   * <pre>
   * 同步工厂, 没同步的就是没解锁.  每次三个一起同步. 
   * </pre>
   */
  public static final class PBPlantFactorySync extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantFactorySyncOrBuilder {
    // Use PBPlantFactorySync.newBuilder() to construct.
    private PBPlantFactorySync(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantFactorySync(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantFactorySync defaultInstance;
    public static PBPlantFactorySync getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantFactorySync getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantFactorySync(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                factories_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              factories_.add(input.readMessage(com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          factories_ = java.util.Collections.unmodifiableList(factories_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactorySync_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactorySync_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.class, com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantFactorySync> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantFactorySync>() {
      public PBPlantFactorySync parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantFactorySync(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantFactorySync> getParserForType() {
      return PARSER;
    }

    // repeated .PBPlantFactoryInfo factories = 1;
    public static final int FACTORIES_FIELD_NUMBER = 1;
    private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo> factories_;
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo> getFactoriesList() {
      return factories_;
    }
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    public java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder> 
        getFactoriesOrBuilderList() {
      return factories_;
    }
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    public int getFactoriesCount() {
      return factories_.size();
    }
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo getFactories(int index) {
      return factories_.get(index);
    }
    /**
     * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder getFactoriesOrBuilder(
        int index) {
      return factories_.get(index);
    }

    private void initFields() {
      factories_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < factories_.size(); i++) {
        output.writeMessage(1, factories_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < factories_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, factories_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantFactorySync prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantFactorySync}
     *
     * <pre>
     * 同步工厂, 没同步的就是没解锁.  每次三个一起同步. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantFactorySyncOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactorySync_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactorySync_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.class, com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFactoriesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (factoriesBuilder_ == null) {
          factories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          factoriesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactorySync_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantFactorySync getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantFactorySync build() {
        com.hawk.game.protocol.PlantFactory.PBPlantFactorySync result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantFactorySync buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantFactorySync result = new com.hawk.game.protocol.PlantFactory.PBPlantFactorySync(this);
        int from_bitField0_ = bitField0_;
        if (factoriesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            factories_ = java.util.Collections.unmodifiableList(factories_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.factories_ = factories_;
        } else {
          result.factories_ = factoriesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantFactorySync) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantFactorySync)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantFactorySync other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantFactorySync.getDefaultInstance()) return this;
        if (factoriesBuilder_ == null) {
          if (!other.factories_.isEmpty()) {
            if (factories_.isEmpty()) {
              factories_ = other.factories_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFactoriesIsMutable();
              factories_.addAll(other.factories_);
            }
            onChanged();
          }
        } else {
          if (!other.factories_.isEmpty()) {
            if (factoriesBuilder_.isEmpty()) {
              factoriesBuilder_.dispose();
              factoriesBuilder_ = null;
              factories_ = other.factories_;
              bitField0_ = (bitField0_ & ~0x00000001);
              factoriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFactoriesFieldBuilder() : null;
            } else {
              factoriesBuilder_.addAllMessages(other.factories_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantFactorySync parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantFactorySync) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PBPlantFactoryInfo factories = 1;
      private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo> factories_ =
        java.util.Collections.emptyList();
      private void ensureFactoriesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          factories_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo>(factories_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder> factoriesBuilder_;

      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo> getFactoriesList() {
        if (factoriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(factories_);
        } else {
          return factoriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public int getFactoriesCount() {
        if (factoriesBuilder_ == null) {
          return factories_.size();
        } else {
          return factoriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo getFactories(int index) {
        if (factoriesBuilder_ == null) {
          return factories_.get(index);
        } else {
          return factoriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder setFactories(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo value) {
        if (factoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactoriesIsMutable();
          factories_.set(index, value);
          onChanged();
        } else {
          factoriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder setFactories(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder builderForValue) {
        if (factoriesBuilder_ == null) {
          ensureFactoriesIsMutable();
          factories_.set(index, builderForValue.build());
          onChanged();
        } else {
          factoriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder addFactories(com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo value) {
        if (factoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactoriesIsMutable();
          factories_.add(value);
          onChanged();
        } else {
          factoriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder addFactories(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo value) {
        if (factoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFactoriesIsMutable();
          factories_.add(index, value);
          onChanged();
        } else {
          factoriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder addFactories(
          com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder builderForValue) {
        if (factoriesBuilder_ == null) {
          ensureFactoriesIsMutable();
          factories_.add(builderForValue.build());
          onChanged();
        } else {
          factoriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder addFactories(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder builderForValue) {
        if (factoriesBuilder_ == null) {
          ensureFactoriesIsMutable();
          factories_.add(index, builderForValue.build());
          onChanged();
        } else {
          factoriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder addAllFactories(
          java.lang.Iterable<? extends com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo> values) {
        if (factoriesBuilder_ == null) {
          ensureFactoriesIsMutable();
          super.addAll(values, factories_);
          onChanged();
        } else {
          factoriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder clearFactories() {
        if (factoriesBuilder_ == null) {
          factories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          factoriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public Builder removeFactories(int index) {
        if (factoriesBuilder_ == null) {
          ensureFactoriesIsMutable();
          factories_.remove(index);
          onChanged();
        } else {
          factoriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder getFactoriesBuilder(
          int index) {
        return getFactoriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder getFactoriesOrBuilder(
          int index) {
        if (factoriesBuilder_ == null) {
          return factories_.get(index);  } else {
          return factoriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder> 
           getFactoriesOrBuilderList() {
        if (factoriesBuilder_ != null) {
          return factoriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(factories_);
        }
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder addFactoriesBuilder() {
        return getFactoriesFieldBuilder().addBuilder(
            com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder addFactoriesBuilder(
          int index) {
        return getFactoriesFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PBPlantFactoryInfo factories = 1;</code>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder> 
           getFactoriesBuilderList() {
        return getFactoriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder> 
          getFactoriesFieldBuilder() {
        if (factoriesBuilder_ == null) {
          factoriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder>(
                  factories_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          factories_ = null;
        }
        return factoriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantFactorySync)
    }

    static {
      defaultInstance = new PBPlantFactorySync(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantFactorySync)
  }

  public interface PBPlantFactoryInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PBPlantFactoryType type = 1;
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getType();

    // optional int32 cfgId = 2;
    /**
     * <code>optional int32 cfgId = 2;</code>
     */
    boolean hasCfgId();
    /**
     * <code>optional int32 cfgId = 2;</code>
     */
    int getCfgId();

    // optional int64 lastResStoreTime = 3;
    /**
     * <code>optional int64 lastResStoreTime = 3;</code>
     *
     * <pre>
     * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
     * </pre>
     */
    boolean hasLastResStoreTime();
    /**
     * <code>optional int64 lastResStoreTime = 3;</code>
     *
     * <pre>
     * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
     * </pre>
     */
    long getLastResStoreTime();

    // optional int32 store = 4;
    /**
     * <code>optional int32 store = 4;</code>
     *
     * <pre>
     * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
     * </pre>
     */
    boolean hasStore();
    /**
     * <code>optional int32 store = 4;</code>
     *
     * <pre>
     * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
     * </pre>
     */
    int getStore();

    // optional int32 maxStore = 5;
    /**
     * <code>optional int32 maxStore = 5;</code>
     *
     * <pre>
     * 最大储量, 随增产做用号会变化
     * </pre>
     */
    boolean hasMaxStore();
    /**
     * <code>optional int32 maxStore = 5;</code>
     *
     * <pre>
     * 最大储量, 随增产做用号会变化
     * </pre>
     */
    int getMaxStore();

    // optional int32 effVal = 6;
    /**
     * <code>optional int32 effVal = 6;</code>
     *
     * <pre>
     * 增产做用号加成
     * </pre>
     */
    boolean hasEffVal();
    /**
     * <code>optional int32 effVal = 6;</code>
     *
     * <pre>
     * 增产做用号加成
     * </pre>
     */
    int getEffVal();

    // optional int32 collectOneUseMil = 7;
    /**
     * <code>optional int32 collectOneUseMil = 7;</code>
     *
     * <pre>
     * 生产一个 需要的mil
     * </pre>
     */
    boolean hasCollectOneUseMil();
    /**
     * <code>optional int32 collectOneUseMil = 7;</code>
     *
     * <pre>
     * 生产一个 需要的mil
     * </pre>
     */
    int getCollectOneUseMil();
  }
  /**
   * Protobuf type {@code PBPlantFactoryInfo}
   */
  public static final class PBPlantFactoryInfo extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantFactoryInfoOrBuilder {
    // Use PBPlantFactoryInfo.newBuilder() to construct.
    private PBPlantFactoryInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantFactoryInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantFactoryInfo defaultInstance;
    public static PBPlantFactoryInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantFactoryInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantFactoryInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cfgId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastResStoreTime_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              store_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxStore_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              effVal_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              collectOneUseMil_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactoryInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactoryInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.class, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantFactoryInfo> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantFactoryInfo>() {
      public PBPlantFactoryInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantFactoryInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantFactoryInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PBPlantFactoryType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.hawk.game.protocol.PlantFactory.PBPlantFactoryType type_;
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PBPlantFactoryType type = 1;</code>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getType() {
      return type_;
    }

    // optional int32 cfgId = 2;
    public static final int CFGID_FIELD_NUMBER = 2;
    private int cfgId_;
    /**
     * <code>optional int32 cfgId = 2;</code>
     */
    public boolean hasCfgId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cfgId = 2;</code>
     */
    public int getCfgId() {
      return cfgId_;
    }

    // optional int64 lastResStoreTime = 3;
    public static final int LASTRESSTORETIME_FIELD_NUMBER = 3;
    private long lastResStoreTime_;
    /**
     * <code>optional int64 lastResStoreTime = 3;</code>
     *
     * <pre>
     * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
     * </pre>
     */
    public boolean hasLastResStoreTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 lastResStoreTime = 3;</code>
     *
     * <pre>
     * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
     * </pre>
     */
    public long getLastResStoreTime() {
      return lastResStoreTime_;
    }

    // optional int32 store = 4;
    public static final int STORE_FIELD_NUMBER = 4;
    private int store_;
    /**
     * <code>optional int32 store = 4;</code>
     *
     * <pre>
     * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
     * </pre>
     */
    public boolean hasStore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 store = 4;</code>
     *
     * <pre>
     * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
     * </pre>
     */
    public int getStore() {
      return store_;
    }

    // optional int32 maxStore = 5;
    public static final int MAXSTORE_FIELD_NUMBER = 5;
    private int maxStore_;
    /**
     * <code>optional int32 maxStore = 5;</code>
     *
     * <pre>
     * 最大储量, 随增产做用号会变化
     * </pre>
     */
    public boolean hasMaxStore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 maxStore = 5;</code>
     *
     * <pre>
     * 最大储量, 随增产做用号会变化
     * </pre>
     */
    public int getMaxStore() {
      return maxStore_;
    }

    // optional int32 effVal = 6;
    public static final int EFFVAL_FIELD_NUMBER = 6;
    private int effVal_;
    /**
     * <code>optional int32 effVal = 6;</code>
     *
     * <pre>
     * 增产做用号加成
     * </pre>
     */
    public boolean hasEffVal() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 effVal = 6;</code>
     *
     * <pre>
     * 增产做用号加成
     * </pre>
     */
    public int getEffVal() {
      return effVal_;
    }

    // optional int32 collectOneUseMil = 7;
    public static final int COLLECTONEUSEMIL_FIELD_NUMBER = 7;
    private int collectOneUseMil_;
    /**
     * <code>optional int32 collectOneUseMil = 7;</code>
     *
     * <pre>
     * 生产一个 需要的mil
     * </pre>
     */
    public boolean hasCollectOneUseMil() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 collectOneUseMil = 7;</code>
     *
     * <pre>
     * 生产一个 需要的mil
     * </pre>
     */
    public int getCollectOneUseMil() {
      return collectOneUseMil_;
    }

    private void initFields() {
      type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
      cfgId_ = 0;
      lastResStoreTime_ = 0L;
      store_ = 0;
      maxStore_ = 0;
      effVal_ = 0;
      collectOneUseMil_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cfgId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, lastResStoreTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, store_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, maxStore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, effVal_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, collectOneUseMil_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cfgId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, lastResStoreTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, store_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxStore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, effVal_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, collectOneUseMil_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantFactoryInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactoryInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactoryInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.class, com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
        bitField0_ = (bitField0_ & ~0x00000001);
        cfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastResStoreTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        store_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxStore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        effVal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        collectOneUseMil_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantFactoryInfo_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo build() {
        com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo result = new com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cfgId_ = cfgId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastResStoreTime_ = lastResStoreTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.store_ = store_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxStore_ = maxStore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.effVal_ = effVal_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.collectOneUseMil_ = collectOneUseMil_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCfgId()) {
          setCfgId(other.getCfgId());
        }
        if (other.hasLastResStoreTime()) {
          setLastResStoreTime(other.getLastResStoreTime());
        }
        if (other.hasStore()) {
          setStore(other.getStore());
        }
        if (other.hasMaxStore()) {
          setMaxStore(other.getMaxStore());
        }
        if (other.hasEffVal()) {
          setEffVal(other.getEffVal());
        }
        if (other.hasCollectOneUseMil()) {
          setCollectOneUseMil(other.getCollectOneUseMil());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantFactoryInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PBPlantFactoryType type = 1;
      private com.hawk.game.protocol.PlantFactory.PBPlantFactoryType type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantFactoryType getType() {
        return type_;
      }
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       */
      public Builder setType(com.hawk.game.protocol.PlantFactory.PBPlantFactoryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PBPlantFactoryType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.hawk.game.protocol.PlantFactory.PBPlantFactoryType.LINE_MEDAL;
        onChanged();
        return this;
      }

      // optional int32 cfgId = 2;
      private int cfgId_ ;
      /**
       * <code>optional int32 cfgId = 2;</code>
       */
      public boolean hasCfgId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cfgId = 2;</code>
       */
      public int getCfgId() {
        return cfgId_;
      }
      /**
       * <code>optional int32 cfgId = 2;</code>
       */
      public Builder setCfgId(int value) {
        bitField0_ |= 0x00000002;
        cfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cfgId = 2;</code>
       */
      public Builder clearCfgId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cfgId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 lastResStoreTime = 3;
      private long lastResStoreTime_ ;
      /**
       * <code>optional int64 lastResStoreTime = 3;</code>
       *
       * <pre>
       * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
       * </pre>
       */
      public boolean hasLastResStoreTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 lastResStoreTime = 3;</code>
       *
       * <pre>
       * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
       * </pre>
       */
      public long getLastResStoreTime() {
        return lastResStoreTime_;
      }
      /**
       * <code>optional int64 lastResStoreTime = 3;</code>
       *
       * <pre>
       * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
       * </pre>
       */
      public Builder setLastResStoreTime(long value) {
        bitField0_ |= 0x00000004;
        lastResStoreTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastResStoreTime = 3;</code>
       *
       * <pre>
       * 上次储量(store) 计算时间.  收取的剩余量也会做为储量
       * </pre>
       */
      public Builder clearLastResStoreTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastResStoreTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 store = 4;
      private int store_ ;
      /**
       * <code>optional int32 store = 4;</code>
       *
       * <pre>
       * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
       * </pre>
       */
      public boolean hasStore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 store = 4;</code>
       *
       * <pre>
       * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
       * </pre>
       */
      public int getStore() {
        return store_;
      }
      /**
       * <code>optional int32 store = 4;</code>
       *
       * <pre>
       * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
       * </pre>
       */
      public Builder setStore(int value) {
        bitField0_ |= 0x00000008;
        store_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 store = 4;</code>
       *
       * <pre>
       * 上次收取, 或做用号改变前生产的储量. 储量+ 新生产量, 不超过maxStroe. 
       * </pre>
       */
      public Builder clearStore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        store_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxStore = 5;
      private int maxStore_ ;
      /**
       * <code>optional int32 maxStore = 5;</code>
       *
       * <pre>
       * 最大储量, 随增产做用号会变化
       * </pre>
       */
      public boolean hasMaxStore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 maxStore = 5;</code>
       *
       * <pre>
       * 最大储量, 随增产做用号会变化
       * </pre>
       */
      public int getMaxStore() {
        return maxStore_;
      }
      /**
       * <code>optional int32 maxStore = 5;</code>
       *
       * <pre>
       * 最大储量, 随增产做用号会变化
       * </pre>
       */
      public Builder setMaxStore(int value) {
        bitField0_ |= 0x00000010;
        maxStore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxStore = 5;</code>
       *
       * <pre>
       * 最大储量, 随增产做用号会变化
       * </pre>
       */
      public Builder clearMaxStore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxStore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 effVal = 6;
      private int effVal_ ;
      /**
       * <code>optional int32 effVal = 6;</code>
       *
       * <pre>
       * 增产做用号加成
       * </pre>
       */
      public boolean hasEffVal() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 effVal = 6;</code>
       *
       * <pre>
       * 增产做用号加成
       * </pre>
       */
      public int getEffVal() {
        return effVal_;
      }
      /**
       * <code>optional int32 effVal = 6;</code>
       *
       * <pre>
       * 增产做用号加成
       * </pre>
       */
      public Builder setEffVal(int value) {
        bitField0_ |= 0x00000020;
        effVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 effVal = 6;</code>
       *
       * <pre>
       * 增产做用号加成
       * </pre>
       */
      public Builder clearEffVal() {
        bitField0_ = (bitField0_ & ~0x00000020);
        effVal_ = 0;
        onChanged();
        return this;
      }

      // optional int32 collectOneUseMil = 7;
      private int collectOneUseMil_ ;
      /**
       * <code>optional int32 collectOneUseMil = 7;</code>
       *
       * <pre>
       * 生产一个 需要的mil
       * </pre>
       */
      public boolean hasCollectOneUseMil() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 collectOneUseMil = 7;</code>
       *
       * <pre>
       * 生产一个 需要的mil
       * </pre>
       */
      public int getCollectOneUseMil() {
        return collectOneUseMil_;
      }
      /**
       * <code>optional int32 collectOneUseMil = 7;</code>
       *
       * <pre>
       * 生产一个 需要的mil
       * </pre>
       */
      public Builder setCollectOneUseMil(int value) {
        bitField0_ |= 0x00000040;
        collectOneUseMil_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 collectOneUseMil = 7;</code>
       *
       * <pre>
       * 生产一个 需要的mil
       * </pre>
       */
      public Builder clearCollectOneUseMil() {
        bitField0_ = (bitField0_ & ~0x00000040);
        collectOneUseMil_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantFactoryInfo)
    }

    static {
      defaultInstance = new PBPlantFactoryInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantFactoryInfo)
  }

  public interface PBPlantTechOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .BuildingType buildType = 1;
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    boolean hasBuildType();
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    com.hawk.game.protocol.Const.BuildingType getBuildType();

    // optional int32 cfgId = 2;
    /**
     * <code>optional int32 cfgId = 2;</code>
     *
     * <pre>
     * plant_technology.lua  id
     * </pre>
     */
    boolean hasCfgId();
    /**
     * <code>optional int32 cfgId = 2;</code>
     *
     * <pre>
     * plant_technology.lua  id
     * </pre>
     */
    int getCfgId();

    // repeated .PBPlantTechChip chips = 3;
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTechChip> 
        getChipsList();
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantTechChip getChips(int index);
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    int getChipsCount();
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder> 
        getChipsOrBuilderList();
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder getChipsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code PBPlantTech}
   *
   * <pre>
   *&#47;////////////////////////////////////////////////////////////////////////////////////////////////////
   * 泰能
   * </pre>
   */
  public static final class PBPlantTech extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantTechOrBuilder {
    // Use PBPlantTech.newBuilder() to construct.
    private PBPlantTech(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantTech(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantTech defaultInstance;
    public static PBPlantTech getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantTech getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantTech(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hawk.game.protocol.Const.BuildingType value = com.hawk.game.protocol.Const.BuildingType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                buildType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cfgId_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                chips_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantTechChip>();
                mutable_bitField0_ |= 0x00000004;
              }
              chips_.add(input.readMessage(com.hawk.game.protocol.PlantFactory.PBPlantTechChip.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          chips_ = java.util.Collections.unmodifiableList(chips_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTech_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTech_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantTech.class, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantTech> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantTech>() {
      public PBPlantTech parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantTech(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantTech> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .BuildingType buildType = 1;
    public static final int BUILDTYPE_FIELD_NUMBER = 1;
    private com.hawk.game.protocol.Const.BuildingType buildType_;
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    public boolean hasBuildType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    public com.hawk.game.protocol.Const.BuildingType getBuildType() {
      return buildType_;
    }

    // optional int32 cfgId = 2;
    public static final int CFGID_FIELD_NUMBER = 2;
    private int cfgId_;
    /**
     * <code>optional int32 cfgId = 2;</code>
     *
     * <pre>
     * plant_technology.lua  id
     * </pre>
     */
    public boolean hasCfgId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cfgId = 2;</code>
     *
     * <pre>
     * plant_technology.lua  id
     * </pre>
     */
    public int getCfgId() {
      return cfgId_;
    }

    // repeated .PBPlantTechChip chips = 3;
    public static final int CHIPS_FIELD_NUMBER = 3;
    private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTechChip> chips_;
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTechChip> getChipsList() {
      return chips_;
    }
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder> 
        getChipsOrBuilderList() {
      return chips_;
    }
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    public int getChipsCount() {
      return chips_.size();
    }
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantTechChip getChips(int index) {
      return chips_.get(index);
    }
    /**
     * <code>repeated .PBPlantTechChip chips = 3;</code>
     *
     * <pre>
     * 组件
     * </pre>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder getChipsOrBuilder(
        int index) {
      return chips_.get(index);
    }

    private void initFields() {
      buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
      cfgId_ = 0;
      chips_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, buildType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cfgId_);
      }
      for (int i = 0; i < chips_.size(); i++) {
        output.writeMessage(3, chips_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, buildType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cfgId_);
      }
      for (int i = 0; i < chips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, chips_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTech parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantTech prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantTech}
     *
     * <pre>
     *&#47;////////////////////////////////////////////////////////////////////////////////////////////////////
     * 泰能
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTech_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTech_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantTech.class, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantTech.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChipsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
        bitField0_ = (bitField0_ & ~0x00000001);
        cfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (chipsBuilder_ == null) {
          chips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          chipsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTech_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTech getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantTech.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTech build() {
        com.hawk.game.protocol.PlantFactory.PBPlantTech result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTech buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantTech result = new com.hawk.game.protocol.PlantFactory.PBPlantTech(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buildType_ = buildType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cfgId_ = cfgId_;
        if (chipsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            chips_ = java.util.Collections.unmodifiableList(chips_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.chips_ = chips_;
        } else {
          result.chips_ = chipsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantTech) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantTech)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantTech other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantTech.getDefaultInstance()) return this;
        if (other.hasBuildType()) {
          setBuildType(other.getBuildType());
        }
        if (other.hasCfgId()) {
          setCfgId(other.getCfgId());
        }
        if (chipsBuilder_ == null) {
          if (!other.chips_.isEmpty()) {
            if (chips_.isEmpty()) {
              chips_ = other.chips_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChipsIsMutable();
              chips_.addAll(other.chips_);
            }
            onChanged();
          }
        } else {
          if (!other.chips_.isEmpty()) {
            if (chipsBuilder_.isEmpty()) {
              chipsBuilder_.dispose();
              chipsBuilder_ = null;
              chips_ = other.chips_;
              bitField0_ = (bitField0_ & ~0x00000004);
              chipsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChipsFieldBuilder() : null;
            } else {
              chipsBuilder_.addAllMessages(other.chips_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantTech parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantTech) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .BuildingType buildType = 1;
      private com.hawk.game.protocol.Const.BuildingType buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public boolean hasBuildType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public com.hawk.game.protocol.Const.BuildingType getBuildType() {
        return buildType_;
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public Builder setBuildType(com.hawk.game.protocol.Const.BuildingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        buildType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public Builder clearBuildType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
        onChanged();
        return this;
      }

      // optional int32 cfgId = 2;
      private int cfgId_ ;
      /**
       * <code>optional int32 cfgId = 2;</code>
       *
       * <pre>
       * plant_technology.lua  id
       * </pre>
       */
      public boolean hasCfgId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cfgId = 2;</code>
       *
       * <pre>
       * plant_technology.lua  id
       * </pre>
       */
      public int getCfgId() {
        return cfgId_;
      }
      /**
       * <code>optional int32 cfgId = 2;</code>
       *
       * <pre>
       * plant_technology.lua  id
       * </pre>
       */
      public Builder setCfgId(int value) {
        bitField0_ |= 0x00000002;
        cfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cfgId = 2;</code>
       *
       * <pre>
       * plant_technology.lua  id
       * </pre>
       */
      public Builder clearCfgId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cfgId_ = 0;
        onChanged();
        return this;
      }

      // repeated .PBPlantTechChip chips = 3;
      private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTechChip> chips_ =
        java.util.Collections.emptyList();
      private void ensureChipsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          chips_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantTechChip>(chips_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.PlantFactory.PBPlantTechChip, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder, com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder> chipsBuilder_;

      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTechChip> getChipsList() {
        if (chipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chips_);
        } else {
          return chipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public int getChipsCount() {
        if (chipsBuilder_ == null) {
          return chips_.size();
        } else {
          return chipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip getChips(int index) {
        if (chipsBuilder_ == null) {
          return chips_.get(index);
        } else {
          return chipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder setChips(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTechChip value) {
        if (chipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChipsIsMutable();
          chips_.set(index, value);
          onChanged();
        } else {
          chipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder setChips(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder builderForValue) {
        if (chipsBuilder_ == null) {
          ensureChipsIsMutable();
          chips_.set(index, builderForValue.build());
          onChanged();
        } else {
          chipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder addChips(com.hawk.game.protocol.PlantFactory.PBPlantTechChip value) {
        if (chipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChipsIsMutable();
          chips_.add(value);
          onChanged();
        } else {
          chipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder addChips(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTechChip value) {
        if (chipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChipsIsMutable();
          chips_.add(index, value);
          onChanged();
        } else {
          chipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder addChips(
          com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder builderForValue) {
        if (chipsBuilder_ == null) {
          ensureChipsIsMutable();
          chips_.add(builderForValue.build());
          onChanged();
        } else {
          chipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder addChips(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder builderForValue) {
        if (chipsBuilder_ == null) {
          ensureChipsIsMutable();
          chips_.add(index, builderForValue.build());
          onChanged();
        } else {
          chipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder addAllChips(
          java.lang.Iterable<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechChip> values) {
        if (chipsBuilder_ == null) {
          ensureChipsIsMutable();
          super.addAll(values, chips_);
          onChanged();
        } else {
          chipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder clearChips() {
        if (chipsBuilder_ == null) {
          chips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          chipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public Builder removeChips(int index) {
        if (chipsBuilder_ == null) {
          ensureChipsIsMutable();
          chips_.remove(index);
          onChanged();
        } else {
          chipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder getChipsBuilder(
          int index) {
        return getChipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder getChipsOrBuilder(
          int index) {
        if (chipsBuilder_ == null) {
          return chips_.get(index);  } else {
          return chipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder> 
           getChipsOrBuilderList() {
        if (chipsBuilder_ != null) {
          return chipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chips_);
        }
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder addChipsBuilder() {
        return getChipsFieldBuilder().addBuilder(
            com.hawk.game.protocol.PlantFactory.PBPlantTechChip.getDefaultInstance());
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder addChipsBuilder(
          int index) {
        return getChipsFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.getDefaultInstance());
      }
      /**
       * <code>repeated .PBPlantTechChip chips = 3;</code>
       *
       * <pre>
       * 组件
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder> 
           getChipsBuilderList() {
        return getChipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.PlantFactory.PBPlantTechChip, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder, com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder> 
          getChipsFieldBuilder() {
        if (chipsBuilder_ == null) {
          chipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.PlantFactory.PBPlantTechChip, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder, com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder>(
                  chips_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          chips_ = null;
        }
        return chipsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantTech)
    }

    static {
      defaultInstance = new PBPlantTech(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantTech)
  }

  public interface PBPlantTechChipOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 cfgId = 1;
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    boolean hasCfgId();
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    int getCfgId();
  }
  /**
   * Protobuf type {@code PBPlantTechChip}
   *
   * <pre>
   * 组件 等级小于plant_technology maxchipLevel 就飘着, 全部组件最高等级, 可升阶PlantTech
   * </pre>
   */
  public static final class PBPlantTechChip extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantTechChipOrBuilder {
    // Use PBPlantTechChip.newBuilder() to construct.
    private PBPlantTechChip(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantTechChip(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantTechChip defaultInstance;
    public static PBPlantTechChip getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantTechChip getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantTechChip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cfgId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChip_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantTechChip.class, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantTechChip> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantTechChip>() {
      public PBPlantTechChip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantTechChip(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantTechChip> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 cfgId = 1;
    public static final int CFGID_FIELD_NUMBER = 1;
    private int cfgId_;
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    public boolean hasCfgId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 cfgId = 1;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    public int getCfgId() {
      return cfgId_;
    }

    private void initFields() {
      cfgId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cfgId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cfgId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantTechChip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantTechChip}
     *
     * <pre>
     * 组件 等级小于plant_technology maxchipLevel 就飘着, 全部组件最高等级, 可升阶PlantTech
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantTechChipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChip_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantTechChip.class, com.hawk.game.protocol.PlantFactory.PBPlantTechChip.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantTechChip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChip_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantTechChip.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip build() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechChip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechChip buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechChip result = new com.hawk.game.protocol.PlantFactory.PBPlantTechChip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cfgId_ = cfgId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantTechChip) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantTechChip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantTechChip other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantTechChip.getDefaultInstance()) return this;
        if (other.hasCfgId()) {
          setCfgId(other.getCfgId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantTechChip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantTechChip) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 cfgId = 1;
      private int cfgId_ ;
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public boolean hasCfgId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public int getCfgId() {
        return cfgId_;
      }
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public Builder setCfgId(int value) {
        bitField0_ |= 0x00000001;
        cfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cfgId = 1;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public Builder clearCfgId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cfgId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantTechChip)
    }

    static {
      defaultInstance = new PBPlantTechChip(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantTechChip)
  }

  public interface PBPlantTechSyncOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .PBPlantTech teches = 1;
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTech> 
        getTechesList();
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantTech getTeches(int index);
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    int getTechesCount();
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder> 
        getTechesOrBuilderList();
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder getTechesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code PBPlantTechSync}
   */
  public static final class PBPlantTechSync extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantTechSyncOrBuilder {
    // Use PBPlantTechSync.newBuilder() to construct.
    private PBPlantTechSync(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantTechSync(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantTechSync defaultInstance;
    public static PBPlantTechSync getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantTechSync getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantTechSync(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teches_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantTech>();
                mutable_bitField0_ |= 0x00000001;
              }
              teches_.add(input.readMessage(com.hawk.game.protocol.PlantFactory.PBPlantTech.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teches_ = java.util.Collections.unmodifiableList(teches_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechSync_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechSync_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantTechSync.class, com.hawk.game.protocol.PlantFactory.PBPlantTechSync.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantTechSync> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantTechSync>() {
      public PBPlantTechSync parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantTechSync(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantTechSync> getParserForType() {
      return PARSER;
    }

    // repeated .PBPlantTech teches = 1;
    public static final int TECHES_FIELD_NUMBER = 1;
    private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTech> teches_;
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTech> getTechesList() {
      return teches_;
    }
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder> 
        getTechesOrBuilderList() {
      return teches_;
    }
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    public int getTechesCount() {
      return teches_.size();
    }
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantTech getTeches(int index) {
      return teches_.get(index);
    }
    /**
     * <code>repeated .PBPlantTech teches = 1;</code>
     *
     * <pre>
     * 没有就是没解锁
     * </pre>
     */
    public com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder getTechesOrBuilder(
        int index) {
      return teches_.get(index);
    }

    private void initFields() {
      teches_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < teches_.size(); i++) {
        output.writeMessage(1, teches_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teches_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teches_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechSync parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantTechSync prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantTechSync}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantTechSyncOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechSync_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechSync_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantTechSync.class, com.hawk.game.protocol.PlantFactory.PBPlantTechSync.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantTechSync.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTechesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (techesBuilder_ == null) {
          teches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          techesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechSync_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechSync getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantTechSync.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechSync build() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechSync result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechSync buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechSync result = new com.hawk.game.protocol.PlantFactory.PBPlantTechSync(this);
        int from_bitField0_ = bitField0_;
        if (techesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teches_ = java.util.Collections.unmodifiableList(teches_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teches_ = teches_;
        } else {
          result.teches_ = techesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantTechSync) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantTechSync)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantTechSync other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantTechSync.getDefaultInstance()) return this;
        if (techesBuilder_ == null) {
          if (!other.teches_.isEmpty()) {
            if (teches_.isEmpty()) {
              teches_ = other.teches_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTechesIsMutable();
              teches_.addAll(other.teches_);
            }
            onChanged();
          }
        } else {
          if (!other.teches_.isEmpty()) {
            if (techesBuilder_.isEmpty()) {
              techesBuilder_.dispose();
              techesBuilder_ = null;
              teches_ = other.teches_;
              bitField0_ = (bitField0_ & ~0x00000001);
              techesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTechesFieldBuilder() : null;
            } else {
              techesBuilder_.addAllMessages(other.teches_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantTechSync parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantTechSync) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PBPlantTech teches = 1;
      private java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTech> teches_ =
        java.util.Collections.emptyList();
      private void ensureTechesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teches_ = new java.util.ArrayList<com.hawk.game.protocol.PlantFactory.PBPlantTech>(teches_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.PlantFactory.PBPlantTech, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder, com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder> techesBuilder_;

      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTech> getTechesList() {
        if (techesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teches_);
        } else {
          return techesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public int getTechesCount() {
        if (techesBuilder_ == null) {
          return teches_.size();
        } else {
          return techesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTech getTeches(int index) {
        if (techesBuilder_ == null) {
          return teches_.get(index);
        } else {
          return techesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder setTeches(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTech value) {
        if (techesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTechesIsMutable();
          teches_.set(index, value);
          onChanged();
        } else {
          techesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder setTeches(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder builderForValue) {
        if (techesBuilder_ == null) {
          ensureTechesIsMutable();
          teches_.set(index, builderForValue.build());
          onChanged();
        } else {
          techesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder addTeches(com.hawk.game.protocol.PlantFactory.PBPlantTech value) {
        if (techesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTechesIsMutable();
          teches_.add(value);
          onChanged();
        } else {
          techesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder addTeches(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTech value) {
        if (techesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTechesIsMutable();
          teches_.add(index, value);
          onChanged();
        } else {
          techesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder addTeches(
          com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder builderForValue) {
        if (techesBuilder_ == null) {
          ensureTechesIsMutable();
          teches_.add(builderForValue.build());
          onChanged();
        } else {
          techesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder addTeches(
          int index, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder builderForValue) {
        if (techesBuilder_ == null) {
          ensureTechesIsMutable();
          teches_.add(index, builderForValue.build());
          onChanged();
        } else {
          techesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder addAllTeches(
          java.lang.Iterable<? extends com.hawk.game.protocol.PlantFactory.PBPlantTech> values) {
        if (techesBuilder_ == null) {
          ensureTechesIsMutable();
          super.addAll(values, teches_);
          onChanged();
        } else {
          techesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder clearTeches() {
        if (techesBuilder_ == null) {
          teches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          techesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public Builder removeTeches(int index) {
        if (techesBuilder_ == null) {
          ensureTechesIsMutable();
          teches_.remove(index);
          onChanged();
        } else {
          techesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder getTechesBuilder(
          int index) {
        return getTechesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder getTechesOrBuilder(
          int index) {
        if (techesBuilder_ == null) {
          return teches_.get(index);  } else {
          return techesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder> 
           getTechesOrBuilderList() {
        if (techesBuilder_ != null) {
          return techesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teches_);
        }
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder addTechesBuilder() {
        return getTechesFieldBuilder().addBuilder(
            com.hawk.game.protocol.PlantFactory.PBPlantTech.getDefaultInstance());
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder addTechesBuilder(
          int index) {
        return getTechesFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.PlantFactory.PBPlantTech.getDefaultInstance());
      }
      /**
       * <code>repeated .PBPlantTech teches = 1;</code>
       *
       * <pre>
       * 没有就是没解锁
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder> 
           getTechesBuilderList() {
        return getTechesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.PlantFactory.PBPlantTech, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder, com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder> 
          getTechesFieldBuilder() {
        if (techesBuilder_ == null) {
          techesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.PlantFactory.PBPlantTech, com.hawk.game.protocol.PlantFactory.PBPlantTech.Builder, com.hawk.game.protocol.PlantFactory.PBPlantTechOrBuilder>(
                  teches_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teches_ = null;
        }
        return techesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantTechSync)
    }

    static {
      defaultInstance = new PBPlantTechSync(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantTechSync)
  }

  public interface PBPlantTechUpgradeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .BuildingType buildType = 1;
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    boolean hasBuildType();
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    com.hawk.game.protocol.Const.BuildingType getBuildType();
  }
  /**
   * Protobuf type {@code PBPlantTechUpgradeReq}
   *
   * <pre>
   * 泰能升级 
   * </pre>
   */
  public static final class PBPlantTechUpgradeReq extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantTechUpgradeReqOrBuilder {
    // Use PBPlantTechUpgradeReq.newBuilder() to construct.
    private PBPlantTechUpgradeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantTechUpgradeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantTechUpgradeReq defaultInstance;
    public static PBPlantTechUpgradeReq getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantTechUpgradeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantTechUpgradeReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hawk.game.protocol.Const.BuildingType value = com.hawk.game.protocol.Const.BuildingType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                buildType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechUpgradeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechUpgradeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.class, com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantTechUpgradeReq> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantTechUpgradeReq>() {
      public PBPlantTechUpgradeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantTechUpgradeReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantTechUpgradeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .BuildingType buildType = 1;
    public static final int BUILDTYPE_FIELD_NUMBER = 1;
    private com.hawk.game.protocol.Const.BuildingType buildType_;
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    public boolean hasBuildType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    public com.hawk.game.protocol.Const.BuildingType getBuildType() {
      return buildType_;
    }

    private void initFields() {
      buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, buildType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, buildType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantTechUpgradeReq}
     *
     * <pre>
     * 泰能升级 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechUpgradeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechUpgradeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.class, com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechUpgradeReq_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq build() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq result = new com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buildType_ = buildType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq.getDefaultInstance()) return this;
        if (other.hasBuildType()) {
          setBuildType(other.getBuildType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantTechUpgradeReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .BuildingType buildType = 1;
      private com.hawk.game.protocol.Const.BuildingType buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public boolean hasBuildType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public com.hawk.game.protocol.Const.BuildingType getBuildType() {
        return buildType_;
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public Builder setBuildType(com.hawk.game.protocol.Const.BuildingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        buildType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public Builder clearBuildType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantTechUpgradeReq)
    }

    static {
      defaultInstance = new PBPlantTechUpgradeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantTechUpgradeReq)
  }

  public interface PBPlantTechChipUpgradeReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .BuildingType buildType = 1;
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    boolean hasBuildType();
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    com.hawk.game.protocol.Const.BuildingType getBuildType();

    // optional int32 chipCfgId = 2;
    /**
     * <code>optional int32 chipCfgId = 2;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    boolean hasChipCfgId();
    /**
     * <code>optional int32 chipCfgId = 2;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    int getChipCfgId();
  }
  /**
   * Protobuf type {@code PBPlantTechChipUpgradeReq}
   *
   * <pre>
   * 泰能组件升级 
   * </pre>
   */
  public static final class PBPlantTechChipUpgradeReq extends
      com.google.protobuf.GeneratedMessage
      implements PBPlantTechChipUpgradeReqOrBuilder {
    // Use PBPlantTechChipUpgradeReq.newBuilder() to construct.
    private PBPlantTechChipUpgradeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PBPlantTechChipUpgradeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PBPlantTechChipUpgradeReq defaultInstance;
    public static PBPlantTechChipUpgradeReq getDefaultInstance() {
      return defaultInstance;
    }

    public PBPlantTechChipUpgradeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PBPlantTechChipUpgradeReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hawk.game.protocol.Const.BuildingType value = com.hawk.game.protocol.Const.BuildingType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                buildType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chipCfgId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChipUpgradeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChipUpgradeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.class, com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<PBPlantTechChipUpgradeReq> PARSER =
        new com.google.protobuf.AbstractParser<PBPlantTechChipUpgradeReq>() {
      public PBPlantTechChipUpgradeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PBPlantTechChipUpgradeReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PBPlantTechChipUpgradeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .BuildingType buildType = 1;
    public static final int BUILDTYPE_FIELD_NUMBER = 1;
    private com.hawk.game.protocol.Const.BuildingType buildType_;
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    public boolean hasBuildType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .BuildingType buildType = 1;</code>
     */
    public com.hawk.game.protocol.Const.BuildingType getBuildType() {
      return buildType_;
    }

    // optional int32 chipCfgId = 2;
    public static final int CHIPCFGID_FIELD_NUMBER = 2;
    private int chipCfgId_;
    /**
     * <code>optional int32 chipCfgId = 2;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    public boolean hasChipCfgId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 chipCfgId = 2;</code>
     *
     * <pre>
     * plant_technology_chip id
     * </pre>
     */
    public int getChipCfgId() {
      return chipCfgId_;
    }

    private void initFields() {
      buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
      chipCfgId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, buildType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, chipCfgId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, buildType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chipCfgId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PBPlantTechChipUpgradeReq}
     *
     * <pre>
     * 泰能组件升级 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChipUpgradeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChipUpgradeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.class, com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.Builder.class);
      }

      // Construct using com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
        bitField0_ = (bitField0_ & ~0x00000001);
        chipCfgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.PlantFactory.internal_static_PBPlantTechChipUpgradeReq_descriptor;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq getDefaultInstanceForType() {
        return com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.getDefaultInstance();
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq build() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq buildPartial() {
        com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq result = new com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buildType_ = buildType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chipCfgId_ = chipCfgId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq) {
          return mergeFrom((com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq other) {
        if (other == com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq.getDefaultInstance()) return this;
        if (other.hasBuildType()) {
          setBuildType(other.getBuildType());
        }
        if (other.hasChipCfgId()) {
          setChipCfgId(other.getChipCfgId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.PlantFactory.PBPlantTechChipUpgradeReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .BuildingType buildType = 1;
      private com.hawk.game.protocol.Const.BuildingType buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public boolean hasBuildType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public com.hawk.game.protocol.Const.BuildingType getBuildType() {
        return buildType_;
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public Builder setBuildType(com.hawk.game.protocol.Const.BuildingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        buildType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .BuildingType buildType = 1;</code>
       */
      public Builder clearBuildType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buildType_ = com.hawk.game.protocol.Const.BuildingType.CONSTRUCTION_FACTORY;
        onChanged();
        return this;
      }

      // optional int32 chipCfgId = 2;
      private int chipCfgId_ ;
      /**
       * <code>optional int32 chipCfgId = 2;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public boolean hasChipCfgId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 chipCfgId = 2;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public int getChipCfgId() {
        return chipCfgId_;
      }
      /**
       * <code>optional int32 chipCfgId = 2;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public Builder setChipCfgId(int value) {
        bitField0_ |= 0x00000002;
        chipCfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chipCfgId = 2;</code>
       *
       * <pre>
       * plant_technology_chip id
       * </pre>
       */
      public Builder clearChipCfgId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chipCfgId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PBPlantTechChipUpgradeReq)
    }

    static {
      defaultInstance = new PBPlantTechChipUpgradeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PBPlantTechChipUpgradeReq)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBUnlockFactoryRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBUnlockFactoryRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBCollectFactoryRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBCollectFactoryRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBUpgradeFactoryReuest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBUpgradeFactoryReuest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantFactorySync_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantFactorySync_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantFactoryInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantFactoryInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantTech_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantTech_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantTechChip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantTechChip_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantTechSync_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantTechSync_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantTechUpgradeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantTechUpgradeReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PBPlantTechChipUpgradeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PBPlantTechChipUpgradeReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022PlantFactory.proto\032\013Const.proto\"\'\n\026PBU" +
      "nlockFactoryRequest\022\r\n\005cfgId\030\001 \001(\005\"=\n\027PB" +
      "CollectFactoryRequest\022\"\n\005types\030\001 \003(\0162\023.P" +
      "BPlantFactoryType\";\n\026PBUpgradeFactoryReu" +
      "est\022!\n\004type\030\001 \001(\0162\023.PBPlantFactoryType\"<" +
      "\n\022PBPlantFactorySync\022&\n\tfactories\030\001 \003(\0132" +
      "\023.PBPlantFactoryInfo\"\253\001\n\022PBPlantFactoryI" +
      "nfo\022!\n\004type\030\001 \001(\0162\023.PBPlantFactoryType\022\r" +
      "\n\005cfgId\030\002 \001(\005\022\030\n\020lastResStoreTime\030\003 \001(\003\022" +
      "\r\n\005store\030\004 \001(\005\022\020\n\010maxStore\030\005 \001(\005\022\016\n\006effV",
      "al\030\006 \001(\005\022\030\n\020collectOneUseMil\030\007 \001(\005\"_\n\013PB" +
      "PlantTech\022 \n\tbuildType\030\001 \001(\0162\r.BuildingT" +
      "ype\022\r\n\005cfgId\030\002 \001(\005\022\037\n\005chips\030\003 \003(\0132\020.PBPl" +
      "antTechChip\" \n\017PBPlantTechChip\022\r\n\005cfgId\030" +
      "\001 \001(\005\"/\n\017PBPlantTechSync\022\034\n\006teches\030\001 \003(\013" +
      "2\014.PBPlantTech\"9\n\025PBPlantTechUpgradeReq\022" +
      " \n\tbuildType\030\001 \001(\0162\r.BuildingType\"P\n\031PBP" +
      "lantTechChipUpgradeReq\022 \n\tbuildType\030\001 \001(" +
      "\0162\r.BuildingType\022\021\n\tchipCfgId\030\002 \001(\005*\220\001\n\022" +
      "PBPlantFactoryType\022\016\n\nLINE_MEDAL\020\001\022\r\n\tLI",
      "NE_CORE\020\002\022\020\n\014LINE_CRYSTAL\020\003\022\030\n\024LINE_BRIL" +
      "LIANT_MEDAL\020\004\022\026\n\022LINE_TAIKUAGNGMUTI\020\005\022\027\n" +
      "\023LINE_TAINENG_HUIJIN\020\006B\030\n\026com.hawk.game." +
      "protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_PBUnlockFactoryRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_PBUnlockFactoryRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBUnlockFactoryRequest_descriptor,
              new java.lang.String[] { "CfgId", });
          internal_static_PBCollectFactoryRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_PBCollectFactoryRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBCollectFactoryRequest_descriptor,
              new java.lang.String[] { "Types", });
          internal_static_PBUpgradeFactoryReuest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_PBUpgradeFactoryReuest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBUpgradeFactoryReuest_descriptor,
              new java.lang.String[] { "Type", });
          internal_static_PBPlantFactorySync_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_PBPlantFactorySync_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantFactorySync_descriptor,
              new java.lang.String[] { "Factories", });
          internal_static_PBPlantFactoryInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_PBPlantFactoryInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantFactoryInfo_descriptor,
              new java.lang.String[] { "Type", "CfgId", "LastResStoreTime", "Store", "MaxStore", "EffVal", "CollectOneUseMil", });
          internal_static_PBPlantTech_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_PBPlantTech_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantTech_descriptor,
              new java.lang.String[] { "BuildType", "CfgId", "Chips", });
          internal_static_PBPlantTechChip_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_PBPlantTechChip_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantTechChip_descriptor,
              new java.lang.String[] { "CfgId", });
          internal_static_PBPlantTechSync_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_PBPlantTechSync_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantTechSync_descriptor,
              new java.lang.String[] { "Teches", });
          internal_static_PBPlantTechUpgradeReq_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_PBPlantTechUpgradeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantTechUpgradeReq_descriptor,
              new java.lang.String[] { "BuildType", });
          internal_static_PBPlantTechChipUpgradeReq_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_PBPlantTechChipUpgradeReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PBPlantTechChipUpgradeReq_descriptor,
              new java.lang.String[] { "BuildType", "ChipCfgId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.hawk.game.protocol.Const.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
