// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleCfg.proto

package com.hawk.game.protocol;

public final class BattleCfg {
  private BattleCfg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code BFConst}
   *
   * <pre>
   * 战斗常量定义
   * </pre>
   */
  public enum BFConst
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MAX_TICK_TIME = 600000;</code>
     *
     * <pre>
     * 最大的战斗时长
     * </pre>
     */
    MAX_TICK_TIME(0, 600000),
    /**
     * <code>TROOP_UNIT_TYPE_ID = 1000;</code>
     *
     * <pre>
     * 不同攻防类型军队战斗单元的id基础值
     * </pre>
     */
    TROOP_UNIT_TYPE_ID(1, 1000),
    /**
     * <code>MAX_TICK_RATE = 5;</code>
     *
     * <pre>
     * 最大快进倍率
     * </pre>
     */
    MAX_TICK_RATE(2, 5),
    /**
     * <code>FRONT_DIR_COUNT = 8;</code>
     *
     * <pre>
     * 前进方向的数量
     * </pre>
     */
    FRONT_DIR_COUNT(3, 8),
    /**
     * <code>ATTACK_CRIT_RATE = 15000;</code>
     *
     * <pre>
     * 普攻暴击伤害倍数万分比
     * </pre>
     */
    ATTACK_CRIT_RATE(4, 15000),
    /**
     * <code>BATTLE_TICK_PERIOD = 50;</code>
     *
     * <pre>
     * 逻辑运算时间单元
     * </pre>
     */
    BATTLE_TICK_PERIOD(5, 50),
    /**
     * <code>DEAD_PERIOD = 200;</code>
     *
     * <pre>
     * 默认死亡时间
     * </pre>
     */
    DEAD_PERIOD(8, 200),
    /**
     * <code>DISAPPEAR_PERIOD = 5000;</code>
     *
     * <pre>
     * 默认消失时间（此时间内已发出的技能仍然有效）
     * </pre>
     */
    DISAPPEAR_PERIOD(9, 5000),
    /**
     * <code>HERO_PUBLIC_CD = 0;</code>
     *
     * <pre>
     * 英雄技能公共CD
     * </pre>
     */
    HERO_PUBLIC_CD(11, 0),
    /**
     * <code>USA_SOLDIER_ID = 11005;</code>
     *
     * <pre>
     * 美国大兵特殊ID
     * </pre>
     */
    USA_SOLDIER_ID(12, 11005),
    /**
     * <code>USA_SOLDIER_ID_2 = 11008;</code>
     *
     * <pre>
     * 美国大兵特殊ID地面伞兵
     * </pre>
     */
    USA_SOLDIER_ID_2(13, 11008),
    /**
     * <code>USA_SOLDIER_ID_3 = 11010;</code>
     *
     * <pre>
     * 美国大兵特殊ID地面伞兵（被动）
     * </pre>
     */
    USA_SOLDIER_ID_3(14, 11010),
    /**
     * <code>SITDOWN_PERIOD = 500;</code>
     *
     * <pre>
     * 大兵坐下时间
     * </pre>
     */
    SITDOWN_PERIOD(15, 500),
    /**
     * <code>MODEL_COUNT_ONE = 1;</code>
     *
     * <pre>
     * 战斗单元模型包含数量
     * </pre>
     */
    MODEL_COUNT_ONE(16, 1),
    /**
     * <code>MODEL_COUNT_PVE = 100;</code>
     *
     * <pre>
     * 战斗单元模型包含数量
     * </pre>
     */
    MODEL_COUNT_PVE(17, 100),
    ;

    /**
     * <code>BUFF_TICK_PERIOD = 1000;</code>
     *
     * <pre>
     * Buff生效周期
     * </pre>
     */
    public static final BFConst BUFF_TICK_PERIOD = TROOP_UNIT_TYPE_ID;
    /**
     * <code>SKILL_TICK_PERIOD = 1000;</code>
     *
     * <pre>
     * Skill光环检测周期
     * </pre>
     */
    public static final BFConst SKILL_TICK_PERIOD = TROOP_UNIT_TYPE_ID;
    /**
     * <code>HERO_ENTER_CD_PER = 5000;</code>
     *
     * <pre>
     * 英雄技能入场CD万分比
     * </pre>
     */
    public static final BFConst HERO_ENTER_CD_PER = DISAPPEAR_PERIOD;
    /**
     * <code>MODEL_COUNT_PVP = 1000;</code>
     *
     * <pre>
     * 战斗单元模型包含数量
     * </pre>
     */
    public static final BFConst MODEL_COUNT_PVP = TROOP_UNIT_TYPE_ID;
    /**
     * <code>MAX_TICK_TIME = 600000;</code>
     *
     * <pre>
     * 最大的战斗时长
     * </pre>
     */
    public static final int MAX_TICK_TIME_VALUE = 600000;
    /**
     * <code>TROOP_UNIT_TYPE_ID = 1000;</code>
     *
     * <pre>
     * 不同攻防类型军队战斗单元的id基础值
     * </pre>
     */
    public static final int TROOP_UNIT_TYPE_ID_VALUE = 1000;
    /**
     * <code>MAX_TICK_RATE = 5;</code>
     *
     * <pre>
     * 最大快进倍率
     * </pre>
     */
    public static final int MAX_TICK_RATE_VALUE = 5;
    /**
     * <code>FRONT_DIR_COUNT = 8;</code>
     *
     * <pre>
     * 前进方向的数量
     * </pre>
     */
    public static final int FRONT_DIR_COUNT_VALUE = 8;
    /**
     * <code>ATTACK_CRIT_RATE = 15000;</code>
     *
     * <pre>
     * 普攻暴击伤害倍数万分比
     * </pre>
     */
    public static final int ATTACK_CRIT_RATE_VALUE = 15000;
    /**
     * <code>BATTLE_TICK_PERIOD = 50;</code>
     *
     * <pre>
     * 逻辑运算时间单元
     * </pre>
     */
    public static final int BATTLE_TICK_PERIOD_VALUE = 50;
    /**
     * <code>BUFF_TICK_PERIOD = 1000;</code>
     *
     * <pre>
     * Buff生效周期
     * </pre>
     */
    public static final int BUFF_TICK_PERIOD_VALUE = 1000;
    /**
     * <code>SKILL_TICK_PERIOD = 1000;</code>
     *
     * <pre>
     * Skill光环检测周期
     * </pre>
     */
    public static final int SKILL_TICK_PERIOD_VALUE = 1000;
    /**
     * <code>DEAD_PERIOD = 200;</code>
     *
     * <pre>
     * 默认死亡时间
     * </pre>
     */
    public static final int DEAD_PERIOD_VALUE = 200;
    /**
     * <code>DISAPPEAR_PERIOD = 5000;</code>
     *
     * <pre>
     * 默认消失时间（此时间内已发出的技能仍然有效）
     * </pre>
     */
    public static final int DISAPPEAR_PERIOD_VALUE = 5000;
    /**
     * <code>HERO_ENTER_CD_PER = 5000;</code>
     *
     * <pre>
     * 英雄技能入场CD万分比
     * </pre>
     */
    public static final int HERO_ENTER_CD_PER_VALUE = 5000;
    /**
     * <code>HERO_PUBLIC_CD = 0;</code>
     *
     * <pre>
     * 英雄技能公共CD
     * </pre>
     */
    public static final int HERO_PUBLIC_CD_VALUE = 0;
    /**
     * <code>USA_SOLDIER_ID = 11005;</code>
     *
     * <pre>
     * 美国大兵特殊ID
     * </pre>
     */
    public static final int USA_SOLDIER_ID_VALUE = 11005;
    /**
     * <code>USA_SOLDIER_ID_2 = 11008;</code>
     *
     * <pre>
     * 美国大兵特殊ID地面伞兵
     * </pre>
     */
    public static final int USA_SOLDIER_ID_2_VALUE = 11008;
    /**
     * <code>USA_SOLDIER_ID_3 = 11010;</code>
     *
     * <pre>
     * 美国大兵特殊ID地面伞兵（被动）
     * </pre>
     */
    public static final int USA_SOLDIER_ID_3_VALUE = 11010;
    /**
     * <code>SITDOWN_PERIOD = 500;</code>
     *
     * <pre>
     * 大兵坐下时间
     * </pre>
     */
    public static final int SITDOWN_PERIOD_VALUE = 500;
    /**
     * <code>MODEL_COUNT_ONE = 1;</code>
     *
     * <pre>
     * 战斗单元模型包含数量
     * </pre>
     */
    public static final int MODEL_COUNT_ONE_VALUE = 1;
    /**
     * <code>MODEL_COUNT_PVE = 100;</code>
     *
     * <pre>
     * 战斗单元模型包含数量
     * </pre>
     */
    public static final int MODEL_COUNT_PVE_VALUE = 100;
    /**
     * <code>MODEL_COUNT_PVP = 1000;</code>
     *
     * <pre>
     * 战斗单元模型包含数量
     * </pre>
     */
    public static final int MODEL_COUNT_PVP_VALUE = 1000;


    public final int getNumber() { return value; }

    public static BFConst valueOf(int value) {
      switch (value) {
        case 600000: return MAX_TICK_TIME;
        case 1000: return TROOP_UNIT_TYPE_ID;
        case 5: return MAX_TICK_RATE;
        case 8: return FRONT_DIR_COUNT;
        case 15000: return ATTACK_CRIT_RATE;
        case 50: return BATTLE_TICK_PERIOD;
        case 200: return DEAD_PERIOD;
        case 5000: return DISAPPEAR_PERIOD;
        case 0: return HERO_PUBLIC_CD;
        case 11005: return USA_SOLDIER_ID;
        case 11008: return USA_SOLDIER_ID_2;
        case 11010: return USA_SOLDIER_ID_3;
        case 500: return SITDOWN_PERIOD;
        case 1: return MODEL_COUNT_ONE;
        case 100: return MODEL_COUNT_PVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BFConst>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BFConst>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BFConst>() {
            public BFConst findValueByNumber(int number) {
              return BFConst.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(0);
    }

    private static final BFConst[] VALUES = {
      MAX_TICK_TIME, TROOP_UNIT_TYPE_ID, MAX_TICK_RATE, FRONT_DIR_COUNT, ATTACK_CRIT_RATE, BATTLE_TICK_PERIOD, BUFF_TICK_PERIOD, SKILL_TICK_PERIOD, DEAD_PERIOD, DISAPPEAR_PERIOD, HERO_ENTER_CD_PER, HERO_PUBLIC_CD, USA_SOLDIER_ID, USA_SOLDIER_ID_2, USA_SOLDIER_ID_3, SITDOWN_PERIOD, MODEL_COUNT_ONE, MODEL_COUNT_PVE, MODEL_COUNT_PVP, 
    };

    public static BFConst valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BFConst(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:BFConst)
  }

  /**
   * Protobuf enum {@code BFCfgType}
   *
   * <pre>
   * 配置类型
   * </pre>
   */
  public enum BFCfgType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CFG_MAP = 1;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    CFG_MAP(0, 1),
    /**
     * <code>CFG_MISSION = 2;</code>
     *
     * <pre>
     * 副本
     * </pre>
     */
    CFG_MISSION(1, 2),
    /**
     * <code>CFG_MONSTER = 3;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    CFG_MONSTER(2, 3),
    /**
     * <code>CFG_UNIT = 4;</code>
     *
     * <pre>
     * 兵种
     * </pre>
     */
    CFG_UNIT(3, 4),
    /**
     * <code>CFG_SKILL = 5;</code>
     *
     * <pre>
     * 技能
     * </pre>
     */
    CFG_SKILL(4, 5),
    /**
     * <code>CFG_BUFF = 6;</code>
     *
     * <pre>
     * Buff
     * </pre>
     */
    CFG_BUFF(5, 6),
    ;

    /**
     * <code>CFG_MAP = 1;</code>
     *
     * <pre>
     * 地图
     * </pre>
     */
    public static final int CFG_MAP_VALUE = 1;
    /**
     * <code>CFG_MISSION = 2;</code>
     *
     * <pre>
     * 副本
     * </pre>
     */
    public static final int CFG_MISSION_VALUE = 2;
    /**
     * <code>CFG_MONSTER = 3;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    public static final int CFG_MONSTER_VALUE = 3;
    /**
     * <code>CFG_UNIT = 4;</code>
     *
     * <pre>
     * 兵种
     * </pre>
     */
    public static final int CFG_UNIT_VALUE = 4;
    /**
     * <code>CFG_SKILL = 5;</code>
     *
     * <pre>
     * 技能
     * </pre>
     */
    public static final int CFG_SKILL_VALUE = 5;
    /**
     * <code>CFG_BUFF = 6;</code>
     *
     * <pre>
     * Buff
     * </pre>
     */
    public static final int CFG_BUFF_VALUE = 6;


    public final int getNumber() { return value; }

    public static BFCfgType valueOf(int value) {
      switch (value) {
        case 1: return CFG_MAP;
        case 2: return CFG_MISSION;
        case 3: return CFG_MONSTER;
        case 4: return CFG_UNIT;
        case 5: return CFG_SKILL;
        case 6: return CFG_BUFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BFCfgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BFCfgType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BFCfgType>() {
            public BFCfgType findValueByNumber(int number) {
              return BFCfgType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(1);
    }

    private static final BFCfgType[] VALUES = values();

    public static BFCfgType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BFCfgType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:BFCfgType)
  }

  /**
   * Protobuf enum {@code MissionType}
   *
   * <pre>
   * 关卡类型
   * </pre>
   */
  public enum MissionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MISSION_ATK = 1;</code>
     *
     * <pre>
     * 攻击关卡
     * </pre>
     */
    MISSION_ATK(0, 1),
    /**
     * <code>MISSION_DEF = 2;</code>
     *
     * <pre>
     * 防守关卡
     * </pre>
     */
    MISSION_DEF(1, 2),
    ;

    /**
     * <code>MISSION_ATK = 1;</code>
     *
     * <pre>
     * 攻击关卡
     * </pre>
     */
    public static final int MISSION_ATK_VALUE = 1;
    /**
     * <code>MISSION_DEF = 2;</code>
     *
     * <pre>
     * 防守关卡
     * </pre>
     */
    public static final int MISSION_DEF_VALUE = 2;


    public final int getNumber() { return value; }

    public static MissionType valueOf(int value) {
      switch (value) {
        case 1: return MISSION_ATK;
        case 2: return MISSION_DEF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MissionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MissionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MissionType>() {
            public MissionType findValueByNumber(int number) {
              return MissionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(2);
    }

    private static final MissionType[] VALUES = values();

    public static MissionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MissionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MissionType)
  }

  /**
   * Protobuf enum {@code ValueType}
   *
   * <pre>
   * 数值类型
   * </pre>
   */
  public enum ValueType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VALUE_PERCENT = 1;</code>
     *
     * <pre>
     * 万分比
     * </pre>
     */
    VALUE_PERCENT(0, 1),
    /**
     * <code>VALUE_NUMBER = 2;</code>
     *
     * <pre>
     * 数值
     * </pre>
     */
    VALUE_NUMBER(1, 2),
    ;

    /**
     * <code>VALUE_PERCENT = 1;</code>
     *
     * <pre>
     * 万分比
     * </pre>
     */
    public static final int VALUE_PERCENT_VALUE = 1;
    /**
     * <code>VALUE_NUMBER = 2;</code>
     *
     * <pre>
     * 数值
     * </pre>
     */
    public static final int VALUE_NUMBER_VALUE = 2;


    public final int getNumber() { return value; }

    public static ValueType valueOf(int value) {
      switch (value) {
        case 1: return VALUE_PERCENT;
        case 2: return VALUE_NUMBER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ValueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ValueType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ValueType>() {
            public ValueType findValueByNumber(int number) {
              return ValueType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(3);
    }

    private static final ValueType[] VALUES = values();

    public static ValueType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ValueType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ValueType)
  }

  /**
   * Protobuf enum {@code UnitType}
   *
   * <pre>
   * 战斗单元类型
   * </pre>
   */
  public enum UnitType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_HERO_FOOT = 1;</code>
     *
     * <pre>
     * 士兵英雄
     * </pre>
     */
    UNIT_HERO_FOOT(0, 1),
    /**
     * <code>UNIT_HERO_TANK = 2;</code>
     *
     * <pre>
     * 坦克英雄
     * </pre>
     */
    UNIT_HERO_TANK(1, 2),
    /**
     * <code>UNIT_HERO_PLANE = 3;</code>
     *
     * <pre>
     * 飞机英雄
     * </pre>
     */
    UNIT_HERO_PLANE(2, 3),
    /**
     * <code>UNIT_FOOT = 11;</code>
     *
     * <pre>
     * 士兵
     * </pre>
     */
    UNIT_FOOT(3, 11),
    /**
     * <code>UNIT_TANK = 12;</code>
     *
     * <pre>
     * 坦克
     * </pre>
     */
    UNIT_TANK(4, 12),
    /**
     * <code>UNIT_PLANE = 13;</code>
     *
     * <pre>
     * 飞机
     * </pre>
     */
    UNIT_PLANE(5, 13),
    /**
     * <code>UNIT_AIR_FOOT = 14;</code>
     *
     * <pre>
     * 空中步兵
     * </pre>
     */
    UNIT_AIR_FOOT(6, 14),
    /**
     * <code>UNIT_PTROOP = 15;</code>
     *
     * <pre>
     * 伞兵, 技能
     * </pre>
     */
    UNIT_PTROOP(7, 15),
    /**
     * <code>UNIT_MISSILE = 21;</code>
     *
     * <pre>
     * 导弹
     * </pre>
     */
    UNIT_MISSILE(8, 21),
    /**
     * <code>UNIT_BOMBER = 22;</code>
     *
     * <pre>
     * 轰炸机
     * </pre>
     */
    UNIT_BOMBER(9, 22),
    /**
     * <code>UNIT_BUILDING = 30;</code>
     *
     * <pre>
     * 建筑
     * </pre>
     */
    UNIT_BUILDING(10, 30),
    /**
     * <code>UNIT_DEFENCE = 40;</code>
     *
     * <pre>
     * 防御武器
     * </pre>
     */
    UNIT_DEFENCE(11, 40),
    /**
     * <code>UNIT_ORNAMENT = 50;</code>
     *
     * <pre>
     * 装饰物
     * </pre>
     */
    UNIT_ORNAMENT(12, 50),
    /**
     * <code>UNIT_VIRTUAL = 60;</code>
     *
     * <pre>
     * 虚拟的实体，目前用于充当玩家自己
     * </pre>
     */
    UNIT_VIRTUAL(13, 60),
    ;

    /**
     * <code>UNIT_HERO_FOOT = 1;</code>
     *
     * <pre>
     * 士兵英雄
     * </pre>
     */
    public static final int UNIT_HERO_FOOT_VALUE = 1;
    /**
     * <code>UNIT_HERO_TANK = 2;</code>
     *
     * <pre>
     * 坦克英雄
     * </pre>
     */
    public static final int UNIT_HERO_TANK_VALUE = 2;
    /**
     * <code>UNIT_HERO_PLANE = 3;</code>
     *
     * <pre>
     * 飞机英雄
     * </pre>
     */
    public static final int UNIT_HERO_PLANE_VALUE = 3;
    /**
     * <code>UNIT_FOOT = 11;</code>
     *
     * <pre>
     * 士兵
     * </pre>
     */
    public static final int UNIT_FOOT_VALUE = 11;
    /**
     * <code>UNIT_TANK = 12;</code>
     *
     * <pre>
     * 坦克
     * </pre>
     */
    public static final int UNIT_TANK_VALUE = 12;
    /**
     * <code>UNIT_PLANE = 13;</code>
     *
     * <pre>
     * 飞机
     * </pre>
     */
    public static final int UNIT_PLANE_VALUE = 13;
    /**
     * <code>UNIT_AIR_FOOT = 14;</code>
     *
     * <pre>
     * 空中步兵
     * </pre>
     */
    public static final int UNIT_AIR_FOOT_VALUE = 14;
    /**
     * <code>UNIT_PTROOP = 15;</code>
     *
     * <pre>
     * 伞兵, 技能
     * </pre>
     */
    public static final int UNIT_PTROOP_VALUE = 15;
    /**
     * <code>UNIT_MISSILE = 21;</code>
     *
     * <pre>
     * 导弹
     * </pre>
     */
    public static final int UNIT_MISSILE_VALUE = 21;
    /**
     * <code>UNIT_BOMBER = 22;</code>
     *
     * <pre>
     * 轰炸机
     * </pre>
     */
    public static final int UNIT_BOMBER_VALUE = 22;
    /**
     * <code>UNIT_BUILDING = 30;</code>
     *
     * <pre>
     * 建筑
     * </pre>
     */
    public static final int UNIT_BUILDING_VALUE = 30;
    /**
     * <code>UNIT_DEFENCE = 40;</code>
     *
     * <pre>
     * 防御武器
     * </pre>
     */
    public static final int UNIT_DEFENCE_VALUE = 40;
    /**
     * <code>UNIT_ORNAMENT = 50;</code>
     *
     * <pre>
     * 装饰物
     * </pre>
     */
    public static final int UNIT_ORNAMENT_VALUE = 50;
    /**
     * <code>UNIT_VIRTUAL = 60;</code>
     *
     * <pre>
     * 虚拟的实体，目前用于充当玩家自己
     * </pre>
     */
    public static final int UNIT_VIRTUAL_VALUE = 60;


    public final int getNumber() { return value; }

    public static UnitType valueOf(int value) {
      switch (value) {
        case 1: return UNIT_HERO_FOOT;
        case 2: return UNIT_HERO_TANK;
        case 3: return UNIT_HERO_PLANE;
        case 11: return UNIT_FOOT;
        case 12: return UNIT_TANK;
        case 13: return UNIT_PLANE;
        case 14: return UNIT_AIR_FOOT;
        case 15: return UNIT_PTROOP;
        case 21: return UNIT_MISSILE;
        case 22: return UNIT_BOMBER;
        case 30: return UNIT_BUILDING;
        case 40: return UNIT_DEFENCE;
        case 50: return UNIT_ORNAMENT;
        case 60: return UNIT_VIRTUAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<UnitType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitType>() {
            public UnitType findValueByNumber(int number) {
              return UnitType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(4);
    }

    private static final UnitType[] VALUES = values();

    public static UnitType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private UnitType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:UnitType)
  }

  /**
   * Protobuf enum {@code SkillTrigType}
   *
   * <pre>
   * 技能触发类型
   * </pre>
   */
  public enum SkillTrigType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRIG_MANUAL = 1;</code>
     *
     * <pre>
     * 手动触发
     * </pre>
     */
    TRIG_MANUAL(0, 1),
    /**
     * <code>TRIG_POST = 2;</code>
     *
     * <pre>
     * 被动连技触发
     * </pre>
     */
    TRIG_POST(1, 2),
    /**
     * <code>TRIG_DEAD = 3;</code>
     *
     * <pre>
     * 被动死亡触发
     * </pre>
     */
    TRIG_DEAD(2, 3),
    /**
     * <code>TRIG_ENTER = 4;</code>
     *
     * <pre>
     * 被动入场触发
     * </pre>
     */
    TRIG_ENTER(3, 4),
    /**
     * <code>TRIG_ATTACK = 5;</code>
     *
     * <pre>
     * 被动攻击触发
     * </pre>
     */
    TRIG_ATTACK(4, 5),
    ;

    /**
     * <code>TRIG_MANUAL = 1;</code>
     *
     * <pre>
     * 手动触发
     * </pre>
     */
    public static final int TRIG_MANUAL_VALUE = 1;
    /**
     * <code>TRIG_POST = 2;</code>
     *
     * <pre>
     * 被动连技触发
     * </pre>
     */
    public static final int TRIG_POST_VALUE = 2;
    /**
     * <code>TRIG_DEAD = 3;</code>
     *
     * <pre>
     * 被动死亡触发
     * </pre>
     */
    public static final int TRIG_DEAD_VALUE = 3;
    /**
     * <code>TRIG_ENTER = 4;</code>
     *
     * <pre>
     * 被动入场触发
     * </pre>
     */
    public static final int TRIG_ENTER_VALUE = 4;
    /**
     * <code>TRIG_ATTACK = 5;</code>
     *
     * <pre>
     * 被动攻击触发
     * </pre>
     */
    public static final int TRIG_ATTACK_VALUE = 5;


    public final int getNumber() { return value; }

    public static SkillTrigType valueOf(int value) {
      switch (value) {
        case 1: return TRIG_MANUAL;
        case 2: return TRIG_POST;
        case 3: return TRIG_DEAD;
        case 4: return TRIG_ENTER;
        case 5: return TRIG_ATTACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillTrigType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillTrigType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillTrigType>() {
            public SkillTrigType findValueByNumber(int number) {
              return SkillTrigType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(5);
    }

    private static final SkillTrigType[] VALUES = values();

    public static SkillTrigType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillTrigType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SkillTrigType)
  }

  /**
   * Protobuf enum {@code SkillCampType}
   *
   * <pre>
   * 技能阵营定义
   * </pre>
   */
  public enum SkillCampType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SKILL_CAMP_ENEMY = 1;</code>
     *
     * <pre>
     * 敌方阵营
     * </pre>
     */
    SKILL_CAMP_ENEMY(0, 1),
    /**
     * <code>SKILL_CAMP_OWNSIDE = 2;</code>
     *
     * <pre>
     * 己方阵营（包含自己）
     * </pre>
     */
    SKILL_CAMP_OWNSIDE(1, 2),
    /**
     * <code>SKILL_CAMP_FRIEND = 3;</code>
     *
     * <pre>
     * 己方阵营（不含自己）
     * </pre>
     */
    SKILL_CAMP_FRIEND(2, 3),
    /**
     * <code>SKILL_CAMP_SELF = 4;</code>
     *
     * <pre>
     * 自身
     * </pre>
     */
    SKILL_CAMP_SELF(3, 4),
    ;

    /**
     * <code>SKILL_CAMP_ENEMY = 1;</code>
     *
     * <pre>
     * 敌方阵营
     * </pre>
     */
    public static final int SKILL_CAMP_ENEMY_VALUE = 1;
    /**
     * <code>SKILL_CAMP_OWNSIDE = 2;</code>
     *
     * <pre>
     * 己方阵营（包含自己）
     * </pre>
     */
    public static final int SKILL_CAMP_OWNSIDE_VALUE = 2;
    /**
     * <code>SKILL_CAMP_FRIEND = 3;</code>
     *
     * <pre>
     * 己方阵营（不含自己）
     * </pre>
     */
    public static final int SKILL_CAMP_FRIEND_VALUE = 3;
    /**
     * <code>SKILL_CAMP_SELF = 4;</code>
     *
     * <pre>
     * 自身
     * </pre>
     */
    public static final int SKILL_CAMP_SELF_VALUE = 4;


    public final int getNumber() { return value; }

    public static SkillCampType valueOf(int value) {
      switch (value) {
        case 1: return SKILL_CAMP_ENEMY;
        case 2: return SKILL_CAMP_OWNSIDE;
        case 3: return SKILL_CAMP_FRIEND;
        case 4: return SKILL_CAMP_SELF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillCampType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillCampType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillCampType>() {
            public SkillCampType findValueByNumber(int number) {
              return SkillCampType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(6);
    }

    private static final SkillCampType[] VALUES = values();

    public static SkillCampType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillCampType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SkillCampType)
  }

  /**
   * Protobuf enum {@code CastCheckType}
   *
   * <pre>
   * 施放非普通攻击技能检查类型（后端自动施放技能时判断是否满足施放条件，明确技能的buff给谁挂）
   * </pre>
   */
  public enum CastCheckType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHECK_X_UNIT_SELF = 1;</code>
     *
     * <pre>
     * 无需目标，对单元：自己（如空中伞兵自杀）
     * </pre>
     */
    CHECK_X_UNIT_SELF(0, 1),
    /**
     * <code>CHECK_X_POS_SELF = 2;</code>
     *
     * <pre>
     * 无需目标，中心点：自己点（如空中伞兵、伞兵队长召唤）
     * </pre>
     */
    CHECK_X_POS_SELF(1, 2),
    /**
     * <code>CHECK_Y_UNIT_SELF = 3;</code>
     *
     * <pre>
     * 需要目标，对单元：自己（如遇敌给自己加保护）
     * </pre>
     */
    CHECK_Y_UNIT_SELF(2, 3),
    /**
     * <code>CHECK_Y_UNIT_TARGET = 4;</code>
     *
     * <pre>
     * 需要目标，对单元：目标（对敌挂炸弹）
     * </pre>
     */
    CHECK_Y_UNIT_TARGET(3, 4),
    /**
     * <code>CHECK_Y_POS_SELF = 5;</code>
     *
     * <pre>
     * 需要目标，中心点：自己点（如辐射工兵）
     * </pre>
     */
    CHECK_Y_POS_SELF(4, 5),
    /**
     * <code>CHECK_Y_POS_TARGET = 6;</code>
     *
     * <pre>
     * 需要目标，中心点：目标点（如鲍里斯）
     * </pre>
     */
    CHECK_Y_POS_TARGET(5, 6),
    ;

    /**
     * <code>CHECK_X_UNIT_SELF = 1;</code>
     *
     * <pre>
     * 无需目标，对单元：自己（如空中伞兵自杀）
     * </pre>
     */
    public static final int CHECK_X_UNIT_SELF_VALUE = 1;
    /**
     * <code>CHECK_X_POS_SELF = 2;</code>
     *
     * <pre>
     * 无需目标，中心点：自己点（如空中伞兵、伞兵队长召唤）
     * </pre>
     */
    public static final int CHECK_X_POS_SELF_VALUE = 2;
    /**
     * <code>CHECK_Y_UNIT_SELF = 3;</code>
     *
     * <pre>
     * 需要目标，对单元：自己（如遇敌给自己加保护）
     * </pre>
     */
    public static final int CHECK_Y_UNIT_SELF_VALUE = 3;
    /**
     * <code>CHECK_Y_UNIT_TARGET = 4;</code>
     *
     * <pre>
     * 需要目标，对单元：目标（对敌挂炸弹）
     * </pre>
     */
    public static final int CHECK_Y_UNIT_TARGET_VALUE = 4;
    /**
     * <code>CHECK_Y_POS_SELF = 5;</code>
     *
     * <pre>
     * 需要目标，中心点：自己点（如辐射工兵）
     * </pre>
     */
    public static final int CHECK_Y_POS_SELF_VALUE = 5;
    /**
     * <code>CHECK_Y_POS_TARGET = 6;</code>
     *
     * <pre>
     * 需要目标，中心点：目标点（如鲍里斯）
     * </pre>
     */
    public static final int CHECK_Y_POS_TARGET_VALUE = 6;


    public final int getNumber() { return value; }

    public static CastCheckType valueOf(int value) {
      switch (value) {
        case 1: return CHECK_X_UNIT_SELF;
        case 2: return CHECK_X_POS_SELF;
        case 3: return CHECK_Y_UNIT_SELF;
        case 4: return CHECK_Y_UNIT_TARGET;
        case 5: return CHECK_Y_POS_SELF;
        case 6: return CHECK_Y_POS_TARGET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CastCheckType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CastCheckType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CastCheckType>() {
            public CastCheckType findValueByNumber(int number) {
              return CastCheckType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(7);
    }

    private static final CastCheckType[] VALUES = values();

    public static CastCheckType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CastCheckType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CastCheckType)
  }

  /**
   * Protobuf enum {@code ModifyUnitAttrType}
   *
   * <pre>
   * 加成单位阵营属性类型
   * </pre>
   */
  public enum ModifyUnitAttrType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UAT_TROOP = 1;</code>
     *
     * <pre>
     * 阵营
     * </pre>
     */
    UAT_TROOP(0, 1),
    /**
     * <code>UAT_GROUP = 2;</code>
     *
     * <pre>
     * 组
     * </pre>
     */
    UAT_GROUP(1, 2),
    /**
     * <code>UAT_UNITLIST = 3;</code>
     *
     * <pre>
     * 单元列表
     * </pre>
     */
    UAT_UNITLIST(2, 3),
    ;

    /**
     * <code>UAT_TROOP = 1;</code>
     *
     * <pre>
     * 阵营
     * </pre>
     */
    public static final int UAT_TROOP_VALUE = 1;
    /**
     * <code>UAT_GROUP = 2;</code>
     *
     * <pre>
     * 组
     * </pre>
     */
    public static final int UAT_GROUP_VALUE = 2;
    /**
     * <code>UAT_UNITLIST = 3;</code>
     *
     * <pre>
     * 单元列表
     * </pre>
     */
    public static final int UAT_UNITLIST_VALUE = 3;


    public final int getNumber() { return value; }

    public static ModifyUnitAttrType valueOf(int value) {
      switch (value) {
        case 1: return UAT_TROOP;
        case 2: return UAT_GROUP;
        case 3: return UAT_UNITLIST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ModifyUnitAttrType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ModifyUnitAttrType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModifyUnitAttrType>() {
            public ModifyUnitAttrType findValueByNumber(int number) {
              return ModifyUnitAttrType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(8);
    }

    private static final ModifyUnitAttrType[] VALUES = values();

    public static ModifyUnitAttrType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ModifyUnitAttrType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ModifyUnitAttrType)
  }

  /**
   * Protobuf enum {@code TriggerActionType}
   *
   * <pre>
   * 触发器对应的action类型
   * </pre>
   */
  public enum TriggerActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>A_SetUnitMove = 1;</code>
     *
     * <pre>
     *设置单元移动
     * </pre>
     */
    A_SetUnitMove(0, 1),
    /**
     * <code>A_SetUnitAttack = 2;</code>
     *
     * <pre>
     *设置单元攻击
     * </pre>
     */
    A_SetUnitAttack(1, 2),
    /**
     * <code>A_SetUnitState = 3;</code>
     *
     * <pre>
     *设置单元状态
     * </pre>
     */
    A_SetUnitState(2, 3),
    /**
     * <code>A_SetTriggerState = 4;</code>
     *
     * <pre>
     *设置触发器状态
     * </pre>
     */
    A_SetTriggerState(3, 4),
    /**
     * <code>A_SetGameState = 5;</code>
     *
     * <pre>
     *设置游戏状态
     * </pre>
     */
    A_SetGameState(4, 5),
    /**
     * <code>A_SetUnitRevive = 6;</code>
     *
     * <pre>
     * 复活单位
     * </pre>
     */
    A_SetUnitRevive(5, 6),
    /**
     * <code>A_SetUnitProgress = 7;</code>
     *
     * <pre>
     * 游戏表现相关控制触发器动作 
     * </pre>
     */
    A_SetUnitProgress(6, 7),
    /**
     * <code>A_SendUIEvent = 8;</code>
     *
     * <pre>
     * 发送消息给Lua表现, 镜头，剧情，任务状态等
     * </pre>
     */
    A_SendUIEvent(7, 8),
    /**
     * <code>A_SetUnitGroupState = 9;</code>
     *
     * <pre>
     * 设置单位组状态， 根据battle_unit_conf.lua里的单位配置ID控制单位组的状态
     * </pre>
     */
    A_SetUnitGroupState(8, 9),
    /**
     * <code>A_SetUnitTroop = 10;</code>
     *
     * <pre>
     * 设置单位阵营
     * </pre>
     */
    A_SetUnitTroop(9, 10),
    /**
     * <code>A_CreateUnit = 11;</code>
     *
     * <pre>
     * 创建单位
     * </pre>
     */
    A_CreateUnit(10, 11),
    /**
     * <code>A_ModifyUnitGroup = 12;</code>
     *
     * <pre>
     * 修改单位分组
     * </pre>
     */
    A_ModifyUnitGroup(11, 12),
    /**
     * <code>A_ModifyUnitAttr = 13;</code>
     *
     * <pre>
     * 加成单位阵营属性
     * </pre>
     */
    A_ModifyUnitAttr(12, 13),
    /**
     * <code>A_SetVariable = 14;</code>
     *
     * <pre>
     * 定义触发器变量
     * </pre>
     */
    A_SetVariable(13, 14),
    /**
     * <code>A_ModifyVariable = 15;</code>
     *
     * <pre>
     * 修改触发器变量
     * </pre>
     */
    A_ModifyVariable(14, 15),
    ;

    /**
     * <code>A_SetUnitMove = 1;</code>
     *
     * <pre>
     *设置单元移动
     * </pre>
     */
    public static final int A_SetUnitMove_VALUE = 1;
    /**
     * <code>A_SetUnitAttack = 2;</code>
     *
     * <pre>
     *设置单元攻击
     * </pre>
     */
    public static final int A_SetUnitAttack_VALUE = 2;
    /**
     * <code>A_SetUnitState = 3;</code>
     *
     * <pre>
     *设置单元状态
     * </pre>
     */
    public static final int A_SetUnitState_VALUE = 3;
    /**
     * <code>A_SetTriggerState = 4;</code>
     *
     * <pre>
     *设置触发器状态
     * </pre>
     */
    public static final int A_SetTriggerState_VALUE = 4;
    /**
     * <code>A_SetGameState = 5;</code>
     *
     * <pre>
     *设置游戏状态
     * </pre>
     */
    public static final int A_SetGameState_VALUE = 5;
    /**
     * <code>A_SetUnitRevive = 6;</code>
     *
     * <pre>
     * 复活单位
     * </pre>
     */
    public static final int A_SetUnitRevive_VALUE = 6;
    /**
     * <code>A_SetUnitProgress = 7;</code>
     *
     * <pre>
     * 游戏表现相关控制触发器动作 
     * </pre>
     */
    public static final int A_SetUnitProgress_VALUE = 7;
    /**
     * <code>A_SendUIEvent = 8;</code>
     *
     * <pre>
     * 发送消息给Lua表现, 镜头，剧情，任务状态等
     * </pre>
     */
    public static final int A_SendUIEvent_VALUE = 8;
    /**
     * <code>A_SetUnitGroupState = 9;</code>
     *
     * <pre>
     * 设置单位组状态， 根据battle_unit_conf.lua里的单位配置ID控制单位组的状态
     * </pre>
     */
    public static final int A_SetUnitGroupState_VALUE = 9;
    /**
     * <code>A_SetUnitTroop = 10;</code>
     *
     * <pre>
     * 设置单位阵营
     * </pre>
     */
    public static final int A_SetUnitTroop_VALUE = 10;
    /**
     * <code>A_CreateUnit = 11;</code>
     *
     * <pre>
     * 创建单位
     * </pre>
     */
    public static final int A_CreateUnit_VALUE = 11;
    /**
     * <code>A_ModifyUnitGroup = 12;</code>
     *
     * <pre>
     * 修改单位分组
     * </pre>
     */
    public static final int A_ModifyUnitGroup_VALUE = 12;
    /**
     * <code>A_ModifyUnitAttr = 13;</code>
     *
     * <pre>
     * 加成单位阵营属性
     * </pre>
     */
    public static final int A_ModifyUnitAttr_VALUE = 13;
    /**
     * <code>A_SetVariable = 14;</code>
     *
     * <pre>
     * 定义触发器变量
     * </pre>
     */
    public static final int A_SetVariable_VALUE = 14;
    /**
     * <code>A_ModifyVariable = 15;</code>
     *
     * <pre>
     * 修改触发器变量
     * </pre>
     */
    public static final int A_ModifyVariable_VALUE = 15;


    public final int getNumber() { return value; }

    public static TriggerActionType valueOf(int value) {
      switch (value) {
        case 1: return A_SetUnitMove;
        case 2: return A_SetUnitAttack;
        case 3: return A_SetUnitState;
        case 4: return A_SetTriggerState;
        case 5: return A_SetGameState;
        case 6: return A_SetUnitRevive;
        case 7: return A_SetUnitProgress;
        case 8: return A_SendUIEvent;
        case 9: return A_SetUnitGroupState;
        case 10: return A_SetUnitTroop;
        case 11: return A_CreateUnit;
        case 12: return A_ModifyUnitGroup;
        case 13: return A_ModifyUnitAttr;
        case 14: return A_SetVariable;
        case 15: return A_ModifyVariable;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TriggerActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TriggerActionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TriggerActionType>() {
            public TriggerActionType findValueByNumber(int number) {
              return TriggerActionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(9);
    }

    private static final TriggerActionType[] VALUES = values();

    public static TriggerActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TriggerActionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TriggerActionType)
  }

  /**
   * Protobuf enum {@code SkillShapeType}
   *
   * <pre>
   * 技能范围类型（中心点对应的形状）
   * </pre>
   */
  public enum SkillShapeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SKILL_SHAPE_NULL = 0;</code>
     *
     * <pre>
     * 点，无形状
     * </pre>
     */
    SKILL_SHAPE_NULL(0, 0),
    /**
     * <code>SKILL_SHAPE_CIRCLE = 1;</code>
     *
     * <pre>
     * 圆形
     * </pre>
     */
    SKILL_SHAPE_CIRCLE(1, 1),
    /**
     * <code>SKILL_SHAPE_RECT = 2;</code>
     *
     * <pre>
     * 矩形
     * </pre>
     */
    SKILL_SHAPE_RECT(2, 2),
    /**
     * <code>SKILL_SHAPE_FAN = 3;</code>
     *
     * <pre>
     * 扇形
     * </pre>
     */
    SKILL_SHAPE_FAN(3, 3),
    /**
     * <code>SKILL_SHAPE_ALL = 9;</code>
     *
     * <pre>
     * 全地图
     * </pre>
     */
    SKILL_SHAPE_ALL(4, 9),
    ;

    /**
     * <code>SKILL_SHAPE_NULL = 0;</code>
     *
     * <pre>
     * 点，无形状
     * </pre>
     */
    public static final int SKILL_SHAPE_NULL_VALUE = 0;
    /**
     * <code>SKILL_SHAPE_CIRCLE = 1;</code>
     *
     * <pre>
     * 圆形
     * </pre>
     */
    public static final int SKILL_SHAPE_CIRCLE_VALUE = 1;
    /**
     * <code>SKILL_SHAPE_RECT = 2;</code>
     *
     * <pre>
     * 矩形
     * </pre>
     */
    public static final int SKILL_SHAPE_RECT_VALUE = 2;
    /**
     * <code>SKILL_SHAPE_FAN = 3;</code>
     *
     * <pre>
     * 扇形
     * </pre>
     */
    public static final int SKILL_SHAPE_FAN_VALUE = 3;
    /**
     * <code>SKILL_SHAPE_ALL = 9;</code>
     *
     * <pre>
     * 全地图
     * </pre>
     */
    public static final int SKILL_SHAPE_ALL_VALUE = 9;


    public final int getNumber() { return value; }

    public static SkillShapeType valueOf(int value) {
      switch (value) {
        case 0: return SKILL_SHAPE_NULL;
        case 1: return SKILL_SHAPE_CIRCLE;
        case 2: return SKILL_SHAPE_RECT;
        case 3: return SKILL_SHAPE_FAN;
        case 9: return SKILL_SHAPE_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillShapeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillShapeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillShapeType>() {
            public SkillShapeType findValueByNumber(int number) {
              return SkillShapeType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(10);
    }

    private static final SkillShapeType[] VALUES = values();

    public static SkillShapeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillShapeType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SkillShapeType)
  }

  /**
   * Protobuf enum {@code SkillType}
   *
   * <pre>
   * 技能ID类型
   * </pre>
   */
  public enum SkillType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SKILL_TYPE_ATTACK = 0;</code>
     *
     * <pre>
     * 默认为0表示普通攻击
     * </pre>
     */
    SKILL_TYPE_ATTACK(0, 0),
    /**
     * <code>SKILL_TYPE_COMMON = 1;</code>
     *
     * <pre>
     * 普通技能（英雄持有则为英雄技能）
     * </pre>
     */
    SKILL_TYPE_COMMON(1, 1),
    ;

    /**
     * <code>SKILL_TYPE_ATTACK = 0;</code>
     *
     * <pre>
     * 默认为0表示普通攻击
     * </pre>
     */
    public static final int SKILL_TYPE_ATTACK_VALUE = 0;
    /**
     * <code>SKILL_TYPE_COMMON = 1;</code>
     *
     * <pre>
     * 普通技能（英雄持有则为英雄技能）
     * </pre>
     */
    public static final int SKILL_TYPE_COMMON_VALUE = 1;


    public final int getNumber() { return value; }

    public static SkillType valueOf(int value) {
      switch (value) {
        case 0: return SKILL_TYPE_ATTACK;
        case 1: return SKILL_TYPE_COMMON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillType>() {
            public SkillType findValueByNumber(int number) {
              return SkillType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(11);
    }

    private static final SkillType[] VALUES = values();

    public static SkillType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SkillType)
  }

  /**
   * Protobuf enum {@code BuffType}
   *
   * <pre>
   * Buff类型
   * </pre>
   */
  public enum BuffType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BUFF_HURT = 1000;</code>
     *
     * <pre>
     * 造成伤害（攻击公式伤害）
     * </pre>
     */
    BUFF_HURT(0, 1000),
    /**
     * <code>BUFF_HP = 1001;</code>
     *
     * <pre>
     * 血量变化（加血飞机）减血（辐射工兵）
     * </pre>
     */
    BUFF_HP(1, 1001),
    /**
     * <code>BUFF_ATTACK = 1004;</code>
     *
     * <pre>
     * 攻击力变化，攻击力增或减
     * </pre>
     */
    BUFF_ATTACK(2, 1004),
    /**
     * <code>BUFF_DEFANCE = 1005;</code>
     *
     * <pre>
     * 防御力变化，防御力增或减
     * </pre>
     */
    BUFF_DEFANCE(3, 1005),
    /**
     * <code>BUFF_CIRT = 1006;</code>
     *
     * <pre>
     * 暴击变化，暴击增或减
     * </pre>
     */
    BUFF_CIRT(4, 1006),
    /**
     * <code>BUFF_ANTICIRT = 1007;</code>
     *
     * <pre>
     * 韧性变化，韧性增或减
     * </pre>
     */
    BUFF_ANTICIRT(5, 1007),
    /**
     * <code>BUFF_HIT = 1008;</code>
     *
     * <pre>
     * 命中变化，命中增或减
     * </pre>
     */
    BUFF_HIT(6, 1008),
    /**
     * <code>BUFF_MISS = 1009;</code>
     *
     * <pre>
     * 闪避变化，闪避增或减
     * </pre>
     */
    BUFF_MISS(7, 1009),
    /**
     * <code>BUFF_ATTACKPERIOD = 1010;</code>
     *
     * <pre>
     * 攻击速度变化，攻击时间增或减
     * </pre>
     */
    BUFF_ATTACKPERIOD(8, 1010),
    /**
     * <code>BUFF_MOVEPERIOD = 1011;</code>
     *
     * <pre>
     * 移动速度变化，移动时间增或减
     * </pre>
     */
    BUFF_MOVEPERIOD(9, 1011),
    /**
     * <code>BUFF_INVISIBLE = 1020;</code>
     *
     * <pre>
     * 隐身，不能被索敌，可被范围伤害
     * </pre>
     */
    BUFF_INVISIBLE(10, 1020),
    /**
     * <code>BUFF_SHIELD = 1021;</code>
     *
     * <pre>
     * 护盾，抵扣血
     * </pre>
     */
    BUFF_SHIELD(11, 1021),
    /**
     * <code>BUFF_TAUNT = 1022;</code>
     *
     * <pre>
     * 嘲讽，吸引周围火力
     * </pre>
     */
    BUFF_TAUNT(12, 1022),
    /**
     * <code>BUFF_CREATE = 1030;</code>
     *
     * <pre>
     * 生成子单位，子单位的属性加成 
     * </pre>
     */
    BUFF_CREATE(13, 1030),
    /**
     * <code>BUFF_CREATE_EXTEND = 1031;</code>
     *
     * <pre>
     * 生成子单位，子单位的属性继承父单位
     * </pre>
     */
    BUFF_CREATE_EXTEND(14, 1031),
    ;

    /**
     * <code>BUFF_HURT = 1000;</code>
     *
     * <pre>
     * 造成伤害（攻击公式伤害）
     * </pre>
     */
    public static final int BUFF_HURT_VALUE = 1000;
    /**
     * <code>BUFF_HP = 1001;</code>
     *
     * <pre>
     * 血量变化（加血飞机）减血（辐射工兵）
     * </pre>
     */
    public static final int BUFF_HP_VALUE = 1001;
    /**
     * <code>BUFF_ATTACK = 1004;</code>
     *
     * <pre>
     * 攻击力变化，攻击力增或减
     * </pre>
     */
    public static final int BUFF_ATTACK_VALUE = 1004;
    /**
     * <code>BUFF_DEFANCE = 1005;</code>
     *
     * <pre>
     * 防御力变化，防御力增或减
     * </pre>
     */
    public static final int BUFF_DEFANCE_VALUE = 1005;
    /**
     * <code>BUFF_CIRT = 1006;</code>
     *
     * <pre>
     * 暴击变化，暴击增或减
     * </pre>
     */
    public static final int BUFF_CIRT_VALUE = 1006;
    /**
     * <code>BUFF_ANTICIRT = 1007;</code>
     *
     * <pre>
     * 韧性变化，韧性增或减
     * </pre>
     */
    public static final int BUFF_ANTICIRT_VALUE = 1007;
    /**
     * <code>BUFF_HIT = 1008;</code>
     *
     * <pre>
     * 命中变化，命中增或减
     * </pre>
     */
    public static final int BUFF_HIT_VALUE = 1008;
    /**
     * <code>BUFF_MISS = 1009;</code>
     *
     * <pre>
     * 闪避变化，闪避增或减
     * </pre>
     */
    public static final int BUFF_MISS_VALUE = 1009;
    /**
     * <code>BUFF_ATTACKPERIOD = 1010;</code>
     *
     * <pre>
     * 攻击速度变化，攻击时间增或减
     * </pre>
     */
    public static final int BUFF_ATTACKPERIOD_VALUE = 1010;
    /**
     * <code>BUFF_MOVEPERIOD = 1011;</code>
     *
     * <pre>
     * 移动速度变化，移动时间增或减
     * </pre>
     */
    public static final int BUFF_MOVEPERIOD_VALUE = 1011;
    /**
     * <code>BUFF_INVISIBLE = 1020;</code>
     *
     * <pre>
     * 隐身，不能被索敌，可被范围伤害
     * </pre>
     */
    public static final int BUFF_INVISIBLE_VALUE = 1020;
    /**
     * <code>BUFF_SHIELD = 1021;</code>
     *
     * <pre>
     * 护盾，抵扣血
     * </pre>
     */
    public static final int BUFF_SHIELD_VALUE = 1021;
    /**
     * <code>BUFF_TAUNT = 1022;</code>
     *
     * <pre>
     * 嘲讽，吸引周围火力
     * </pre>
     */
    public static final int BUFF_TAUNT_VALUE = 1022;
    /**
     * <code>BUFF_CREATE = 1030;</code>
     *
     * <pre>
     * 生成子单位，子单位的属性加成 
     * </pre>
     */
    public static final int BUFF_CREATE_VALUE = 1030;
    /**
     * <code>BUFF_CREATE_EXTEND = 1031;</code>
     *
     * <pre>
     * 生成子单位，子单位的属性继承父单位
     * </pre>
     */
    public static final int BUFF_CREATE_EXTEND_VALUE = 1031;


    public final int getNumber() { return value; }

    public static BuffType valueOf(int value) {
      switch (value) {
        case 1000: return BUFF_HURT;
        case 1001: return BUFF_HP;
        case 1004: return BUFF_ATTACK;
        case 1005: return BUFF_DEFANCE;
        case 1006: return BUFF_CIRT;
        case 1007: return BUFF_ANTICIRT;
        case 1008: return BUFF_HIT;
        case 1009: return BUFF_MISS;
        case 1010: return BUFF_ATTACKPERIOD;
        case 1011: return BUFF_MOVEPERIOD;
        case 1020: return BUFF_INVISIBLE;
        case 1021: return BUFF_SHIELD;
        case 1022: return BUFF_TAUNT;
        case 1030: return BUFF_CREATE;
        case 1031: return BUFF_CREATE_EXTEND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BuffType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BuffType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BuffType>() {
            public BuffType findValueByNumber(int number) {
              return BuffType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(12);
    }

    private static final BuffType[] VALUES = values();

    public static BuffType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BuffType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:BuffType)
  }

  /**
   * Protobuf enum {@code DamageType}
   *
   * <pre>
   * 伤害类型
   * </pre>
   */
  public enum DamageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DMG_NORMAL = 1;</code>
     *
     * <pre>
     * 普通
     * </pre>
     */
    DMG_NORMAL(0, 1),
    /**
     * <code>DMG_MISS = 2;</code>
     *
     * <pre>
     * 闪避
     * </pre>
     */
    DMG_MISS(1, 2),
    /**
     * <code>DMG_CRIT = 3;</code>
     *
     * <pre>
     * 暴击
     * </pre>
     */
    DMG_CRIT(2, 3),
    /**
     * <code>DMG_SKILL = 4;</code>
     *
     * <pre>
     * 技能攻击
     * </pre>
     */
    DMG_SKILL(3, 4),
    ;

    /**
     * <code>DMG_NORMAL = 1;</code>
     *
     * <pre>
     * 普通
     * </pre>
     */
    public static final int DMG_NORMAL_VALUE = 1;
    /**
     * <code>DMG_MISS = 2;</code>
     *
     * <pre>
     * 闪避
     * </pre>
     */
    public static final int DMG_MISS_VALUE = 2;
    /**
     * <code>DMG_CRIT = 3;</code>
     *
     * <pre>
     * 暴击
     * </pre>
     */
    public static final int DMG_CRIT_VALUE = 3;
    /**
     * <code>DMG_SKILL = 4;</code>
     *
     * <pre>
     * 技能攻击
     * </pre>
     */
    public static final int DMG_SKILL_VALUE = 4;


    public final int getNumber() { return value; }

    public static DamageType valueOf(int value) {
      switch (value) {
        case 1: return DMG_NORMAL;
        case 2: return DMG_MISS;
        case 3: return DMG_CRIT;
        case 4: return DMG_SKILL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DamageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DamageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DamageType>() {
            public DamageType findValueByNumber(int number) {
              return DamageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.getDescriptor().getEnumTypes().get(13);
    }

    private static final DamageType[] VALUES = values();

    public static DamageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DamageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DamageType)
  }

  public interface SkillShapeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 shapeType = 1;
    /**
     * <code>required int32 shapeType = 1;</code>
     *
     * <pre>
     * 技能形状 @see SkillShapeType
     * </pre>
     */
    boolean hasShapeType();
    /**
     * <code>required int32 shapeType = 1;</code>
     *
     * <pre>
     * 技能形状 @see SkillShapeType
     * </pre>
     */
    int getShapeType();

    // optional int32 width = 2;
    /**
     * <code>optional int32 width = 2;</code>
     *
     * <pre>
     * 矩形宽
     * </pre>
     */
    boolean hasWidth();
    /**
     * <code>optional int32 width = 2;</code>
     *
     * <pre>
     * 矩形宽
     * </pre>
     */
    int getWidth();

    // optional int32 height = 3;
    /**
     * <code>optional int32 height = 3;</code>
     *
     * <pre>
     * 矩形长
     * </pre>
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 3;</code>
     *
     * <pre>
     * 矩形长
     * </pre>
     */
    int getHeight();

    // optional int32 range = 4;
    /**
     * <code>optional int32 range = 4;</code>
     *
     * <pre>
     * 半径
     * </pre>
     */
    boolean hasRange();
    /**
     * <code>optional int32 range = 4;</code>
     *
     * <pre>
     * 半径
     * </pre>
     */
    int getRange();

    // optional int32 angle = 5;
    /**
     * <code>optional int32 angle = 5;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    boolean hasAngle();
    /**
     * <code>optional int32 angle = 5;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    int getAngle();
  }
  /**
   * Protobuf type {@code SkillShape}
   *
   * <pre>
   * 技能形状
   * </pre>
   */
  public static final class SkillShape extends
      com.google.protobuf.GeneratedMessage
      implements SkillShapeOrBuilder {
    // Use SkillShape.newBuilder() to construct.
    private SkillShape(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillShape(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillShape defaultInstance;
    public static SkillShape getDefaultInstance() {
      return defaultInstance;
    }

    public SkillShape getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillShape(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              shapeType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              height_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              range_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              angle_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_SkillShape_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_SkillShape_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.SkillShape.class, com.hawk.game.protocol.BattleCfg.SkillShape.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillShape> PARSER =
        new com.google.protobuf.AbstractParser<SkillShape>() {
      public SkillShape parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillShape(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillShape> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 shapeType = 1;
    public static final int SHAPETYPE_FIELD_NUMBER = 1;
    private int shapeType_;
    /**
     * <code>required int32 shapeType = 1;</code>
     *
     * <pre>
     * 技能形状 @see SkillShapeType
     * </pre>
     */
    public boolean hasShapeType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 shapeType = 1;</code>
     *
     * <pre>
     * 技能形状 @see SkillShapeType
     * </pre>
     */
    public int getShapeType() {
      return shapeType_;
    }

    // optional int32 width = 2;
    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <code>optional int32 width = 2;</code>
     *
     * <pre>
     * 矩形宽
     * </pre>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 width = 2;</code>
     *
     * <pre>
     * 矩形宽
     * </pre>
     */
    public int getWidth() {
      return width_;
    }

    // optional int32 height = 3;
    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <code>optional int32 height = 3;</code>
     *
     * <pre>
     * 矩形长
     * </pre>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 height = 3;</code>
     *
     * <pre>
     * 矩形长
     * </pre>
     */
    public int getHeight() {
      return height_;
    }

    // optional int32 range = 4;
    public static final int RANGE_FIELD_NUMBER = 4;
    private int range_;
    /**
     * <code>optional int32 range = 4;</code>
     *
     * <pre>
     * 半径
     * </pre>
     */
    public boolean hasRange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 range = 4;</code>
     *
     * <pre>
     * 半径
     * </pre>
     */
    public int getRange() {
      return range_;
    }

    // optional int32 angle = 5;
    public static final int ANGLE_FIELD_NUMBER = 5;
    private int angle_;
    /**
     * <code>optional int32 angle = 5;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 angle = 5;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    public int getAngle() {
      return angle_;
    }

    private void initFields() {
      shapeType_ = 0;
      width_ = 0;
      height_ = 0;
      range_ = 0;
      angle_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasShapeType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, shapeType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, range_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, angle_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, shapeType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, range_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, angle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillShape parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.SkillShape prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillShape}
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_SkillShape_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_SkillShape_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.SkillShape.class, com.hawk.game.protocol.BattleCfg.SkillShape.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.SkillShape.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        shapeType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        range_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        angle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_SkillShape_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.SkillShape getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.SkillShape build() {
        com.hawk.game.protocol.BattleCfg.SkillShape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.SkillShape buildPartial() {
        com.hawk.game.protocol.BattleCfg.SkillShape result = new com.hawk.game.protocol.BattleCfg.SkillShape(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.shapeType_ = shapeType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.range_ = range_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.angle_ = angle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.SkillShape) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.SkillShape)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.SkillShape other) {
        if (other == com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance()) return this;
        if (other.hasShapeType()) {
          setShapeType(other.getShapeType());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasRange()) {
          setRange(other.getRange());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasShapeType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.SkillShape parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.SkillShape) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 shapeType = 1;
      private int shapeType_ ;
      /**
       * <code>required int32 shapeType = 1;</code>
       *
       * <pre>
       * 技能形状 @see SkillShapeType
       * </pre>
       */
      public boolean hasShapeType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 shapeType = 1;</code>
       *
       * <pre>
       * 技能形状 @see SkillShapeType
       * </pre>
       */
      public int getShapeType() {
        return shapeType_;
      }
      /**
       * <code>required int32 shapeType = 1;</code>
       *
       * <pre>
       * 技能形状 @see SkillShapeType
       * </pre>
       */
      public Builder setShapeType(int value) {
        bitField0_ |= 0x00000001;
        shapeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 shapeType = 1;</code>
       *
       * <pre>
       * 技能形状 @see SkillShapeType
       * </pre>
       */
      public Builder clearShapeType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        shapeType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 width = 2;
      private int width_ ;
      /**
       * <code>optional int32 width = 2;</code>
       *
       * <pre>
       * 矩形宽
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 width = 2;</code>
       *
       * <pre>
       * 矩形宽
       * </pre>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 2;</code>
       *
       * <pre>
       * 矩形宽
       * </pre>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 2;</code>
       *
       * <pre>
       * 矩形宽
       * </pre>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        onChanged();
        return this;
      }

      // optional int32 height = 3;
      private int height_ ;
      /**
       * <code>optional int32 height = 3;</code>
       *
       * <pre>
       * 矩形长
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 height = 3;</code>
       *
       * <pre>
       * 矩形长
       * </pre>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 3;</code>
       *
       * <pre>
       * 矩形长
       * </pre>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 3;</code>
       *
       * <pre>
       * 矩形长
       * </pre>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        onChanged();
        return this;
      }

      // optional int32 range = 4;
      private int range_ ;
      /**
       * <code>optional int32 range = 4;</code>
       *
       * <pre>
       * 半径
       * </pre>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 range = 4;</code>
       *
       * <pre>
       * 半径
       * </pre>
       */
      public int getRange() {
        return range_;
      }
      /**
       * <code>optional int32 range = 4;</code>
       *
       * <pre>
       * 半径
       * </pre>
       */
      public Builder setRange(int value) {
        bitField0_ |= 0x00000008;
        range_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 range = 4;</code>
       *
       * <pre>
       * 半径
       * </pre>
       */
      public Builder clearRange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        range_ = 0;
        onChanged();
        return this;
      }

      // optional int32 angle = 5;
      private int angle_ ;
      /**
       * <code>optional int32 angle = 5;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 angle = 5;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public int getAngle() {
        return angle_;
      }
      /**
       * <code>optional int32 angle = 5;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public Builder setAngle(int value) {
        bitField0_ |= 0x00000010;
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 angle = 5;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        angle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SkillShape)
    }

    static {
      defaultInstance = new SkillShape(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillShape)
  }

  public interface UnitSizeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 width = 1;
    /**
     * <code>required int32 width = 1;</code>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 1;</code>
     */
    int getWidth();

    // required int32 height = 2;
    /**
     * <code>required int32 height = 2;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 2;</code>
     */
    int getHeight();
  }
  /**
   * Protobuf type {@code UnitSize}
   *
   * <pre>
   * 大小定义
   * </pre>
   */
  public static final class UnitSize extends
      com.google.protobuf.GeneratedMessage
      implements UnitSizeOrBuilder {
    // Use UnitSize.newBuilder() to construct.
    private UnitSize(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnitSize(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnitSize defaultInstance;
    public static UnitSize getDefaultInstance() {
      return defaultInstance;
    }

    public UnitSize getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnitSize(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              width_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              height_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitSize_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitSize_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.UnitSize.class, com.hawk.game.protocol.BattleCfg.UnitSize.Builder.class);
    }

    public static com.google.protobuf.Parser<UnitSize> PARSER =
        new com.google.protobuf.AbstractParser<UnitSize>() {
      public UnitSize parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitSize(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnitSize> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 width = 1;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <code>required int32 width = 1;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 width = 1;</code>
     */
    public int getWidth() {
      return width_;
    }

    // required int32 height = 2;
    public static final int HEIGHT_FIELD_NUMBER = 2;
    private int height_;
    /**
     * <code>required int32 height = 2;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 height = 2;</code>
     */
    public int getHeight() {
      return height_;
    }

    private void initFields() {
      width_ = 0;
      height_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, height_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitSize parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.UnitSize prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UnitSize}
     *
     * <pre>
     * 大小定义
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitSize_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitSize_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.UnitSize.class, com.hawk.game.protocol.BattleCfg.UnitSize.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.UnitSize.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitSize_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.UnitSize getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.UnitSize build() {
        com.hawk.game.protocol.BattleCfg.UnitSize result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.UnitSize buildPartial() {
        com.hawk.game.protocol.BattleCfg.UnitSize result = new com.hawk.game.protocol.BattleCfg.UnitSize(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.UnitSize) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.UnitSize)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.UnitSize other) {
        if (other == com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.UnitSize parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.UnitSize) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 width = 1;
      private int width_ ;
      /**
       * <code>required int32 width = 1;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 width = 1;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        onChanged();
        return this;
      }

      // required int32 height = 2;
      private int height_ ;
      /**
       * <code>required int32 height = 2;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 height = 2;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UnitSize)
    }

    static {
      defaultInstance = new UnitSize(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UnitSize)
  }

  public interface UnitPosOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 x = 1;
    /**
     * <code>required int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 x = 1;</code>
     */
    int getX();

    // required int32 y = 2;
    /**
     * <code>required int32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required int32 y = 2;</code>
     */
    int getY();
  }
  /**
   * Protobuf type {@code UnitPos}
   *
   * <pre>
   * 位置定义
   * </pre>
   */
  public static final class UnitPos extends
      com.google.protobuf.GeneratedMessage
      implements UnitPosOrBuilder {
    // Use UnitPos.newBuilder() to construct.
    private UnitPos(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnitPos(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnitPos defaultInstance;
    public static UnitPos getDefaultInstance() {
      return defaultInstance;
    }

    public UnitPos getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnitPos(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitPos_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitPos_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.UnitPos.class, com.hawk.game.protocol.BattleCfg.UnitPos.Builder.class);
    }

    public static com.google.protobuf.Parser<UnitPos> PARSER =
        new com.google.protobuf.AbstractParser<UnitPos>() {
      public UnitPos parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitPos(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnitPos> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>required int32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    private void initFields() {
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitPos parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.UnitPos prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UnitPos}
     *
     * <pre>
     * 位置定义
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitPos_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitPos_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.UnitPos.class, com.hawk.game.protocol.BattleCfg.UnitPos.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitPos_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.UnitPos getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.UnitPos build() {
        com.hawk.game.protocol.BattleCfg.UnitPos result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.UnitPos buildPartial() {
        com.hawk.game.protocol.BattleCfg.UnitPos result = new com.hawk.game.protocol.BattleCfg.UnitPos(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.UnitPos) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.UnitPos)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.UnitPos other) {
        if (other == com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.UnitPos parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.UnitPos) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 x = 1;
      private int x_ ;
      /**
       * <code>required int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      // required int32 y = 2;
      private int y_ ;
      /**
       * <code>required int32 y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UnitPos)
    }

    static {
      defaultInstance = new UnitPos(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UnitPos)
  }

  public interface UnitAttrOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 unitHp = 1;
    /**
     * <code>optional int32 unitHp = 1;</code>
     *
     * <pre>
     * 战斗单元总血量
     * </pre>
     */
    boolean hasUnitHp();
    /**
     * <code>optional int32 unitHp = 1;</code>
     *
     * <pre>
     * 战斗单元总血量
     * </pre>
     */
    int getUnitHp();

    // optional int32 unitAttack = 2;
    /**
     * <code>optional int32 unitAttack = 2;</code>
     *
     * <pre>
     * 单元伤害
     * </pre>
     */
    boolean hasUnitAttack();
    /**
     * <code>optional int32 unitAttack = 2;</code>
     *
     * <pre>
     * 单元伤害
     * </pre>
     */
    int getUnitAttack();

    // optional int32 unitDefence = 3;
    /**
     * <code>optional int32 unitDefence = 3;</code>
     *
     * <pre>
     * 单元防御
     * </pre>
     */
    boolean hasUnitDefence();
    /**
     * <code>optional int32 unitDefence = 3;</code>
     *
     * <pre>
     * 单元防御
     * </pre>
     */
    int getUnitDefence();

    // optional int32 unitHit = 4;
    /**
     * <code>optional int32 unitHit = 4;</code>
     *
     * <pre>
     * 单元命中
     * </pre>
     */
    boolean hasUnitHit();
    /**
     * <code>optional int32 unitHit = 4;</code>
     *
     * <pre>
     * 单元命中
     * </pre>
     */
    int getUnitHit();

    // optional int32 unitMiss = 5;
    /**
     * <code>optional int32 unitMiss = 5;</code>
     *
     * <pre>
     * 单元闪避
     * </pre>
     */
    boolean hasUnitMiss();
    /**
     * <code>optional int32 unitMiss = 5;</code>
     *
     * <pre>
     * 单元闪避
     * </pre>
     */
    int getUnitMiss();

    // optional int32 unitCrit = 6;
    /**
     * <code>optional int32 unitCrit = 6;</code>
     *
     * <pre>
     * 单元暴击
     * </pre>
     */
    boolean hasUnitCrit();
    /**
     * <code>optional int32 unitCrit = 6;</code>
     *
     * <pre>
     * 单元暴击
     * </pre>
     */
    int getUnitCrit();

    // optional int32 unitAntiCrit = 7;
    /**
     * <code>optional int32 unitAntiCrit = 7;</code>
     *
     * <pre>
     * 单元韧性
     * </pre>
     */
    boolean hasUnitAntiCrit();
    /**
     * <code>optional int32 unitAntiCrit = 7;</code>
     *
     * <pre>
     * 单元韧性
     * </pre>
     */
    int getUnitAntiCrit();
  }
  /**
   * Protobuf type {@code UnitAttr}
   *
   * <pre>
   * 战场上一个战斗单元的总属性，已包含外部系统对战斗单元的数值加成影响。
   * </pre>
   */
  public static final class UnitAttr extends
      com.google.protobuf.GeneratedMessage
      implements UnitAttrOrBuilder {
    // Use UnitAttr.newBuilder() to construct.
    private UnitAttr(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnitAttr(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnitAttr defaultInstance;
    public static UnitAttr getDefaultInstance() {
      return defaultInstance;
    }

    public UnitAttr getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnitAttr(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitHp_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              unitAttack_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              unitDefence_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              unitHit_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              unitMiss_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              unitCrit_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              unitAntiCrit_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitAttr_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitAttr_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.UnitAttr.class, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder.class);
    }

    public static com.google.protobuf.Parser<UnitAttr> PARSER =
        new com.google.protobuf.AbstractParser<UnitAttr>() {
      public UnitAttr parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitAttr(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnitAttr> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 unitHp = 1;
    public static final int UNITHP_FIELD_NUMBER = 1;
    private int unitHp_;
    /**
     * <code>optional int32 unitHp = 1;</code>
     *
     * <pre>
     * 战斗单元总血量
     * </pre>
     */
    public boolean hasUnitHp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 unitHp = 1;</code>
     *
     * <pre>
     * 战斗单元总血量
     * </pre>
     */
    public int getUnitHp() {
      return unitHp_;
    }

    // optional int32 unitAttack = 2;
    public static final int UNITATTACK_FIELD_NUMBER = 2;
    private int unitAttack_;
    /**
     * <code>optional int32 unitAttack = 2;</code>
     *
     * <pre>
     * 单元伤害
     * </pre>
     */
    public boolean hasUnitAttack() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 unitAttack = 2;</code>
     *
     * <pre>
     * 单元伤害
     * </pre>
     */
    public int getUnitAttack() {
      return unitAttack_;
    }

    // optional int32 unitDefence = 3;
    public static final int UNITDEFENCE_FIELD_NUMBER = 3;
    private int unitDefence_;
    /**
     * <code>optional int32 unitDefence = 3;</code>
     *
     * <pre>
     * 单元防御
     * </pre>
     */
    public boolean hasUnitDefence() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 unitDefence = 3;</code>
     *
     * <pre>
     * 单元防御
     * </pre>
     */
    public int getUnitDefence() {
      return unitDefence_;
    }

    // optional int32 unitHit = 4;
    public static final int UNITHIT_FIELD_NUMBER = 4;
    private int unitHit_;
    /**
     * <code>optional int32 unitHit = 4;</code>
     *
     * <pre>
     * 单元命中
     * </pre>
     */
    public boolean hasUnitHit() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 unitHit = 4;</code>
     *
     * <pre>
     * 单元命中
     * </pre>
     */
    public int getUnitHit() {
      return unitHit_;
    }

    // optional int32 unitMiss = 5;
    public static final int UNITMISS_FIELD_NUMBER = 5;
    private int unitMiss_;
    /**
     * <code>optional int32 unitMiss = 5;</code>
     *
     * <pre>
     * 单元闪避
     * </pre>
     */
    public boolean hasUnitMiss() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 unitMiss = 5;</code>
     *
     * <pre>
     * 单元闪避
     * </pre>
     */
    public int getUnitMiss() {
      return unitMiss_;
    }

    // optional int32 unitCrit = 6;
    public static final int UNITCRIT_FIELD_NUMBER = 6;
    private int unitCrit_;
    /**
     * <code>optional int32 unitCrit = 6;</code>
     *
     * <pre>
     * 单元暴击
     * </pre>
     */
    public boolean hasUnitCrit() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 unitCrit = 6;</code>
     *
     * <pre>
     * 单元暴击
     * </pre>
     */
    public int getUnitCrit() {
      return unitCrit_;
    }

    // optional int32 unitAntiCrit = 7;
    public static final int UNITANTICRIT_FIELD_NUMBER = 7;
    private int unitAntiCrit_;
    /**
     * <code>optional int32 unitAntiCrit = 7;</code>
     *
     * <pre>
     * 单元韧性
     * </pre>
     */
    public boolean hasUnitAntiCrit() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 unitAntiCrit = 7;</code>
     *
     * <pre>
     * 单元韧性
     * </pre>
     */
    public int getUnitAntiCrit() {
      return unitAntiCrit_;
    }

    private void initFields() {
      unitHp_ = 0;
      unitAttack_ = 0;
      unitDefence_ = 0;
      unitHit_ = 0;
      unitMiss_ = 0;
      unitCrit_ = 0;
      unitAntiCrit_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, unitHp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, unitAttack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, unitDefence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, unitHit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, unitMiss_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, unitCrit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, unitAntiCrit_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unitHp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, unitAttack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unitDefence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unitHit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, unitMiss_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, unitCrit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, unitAntiCrit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitAttr parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.UnitAttr prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UnitAttr}
     *
     * <pre>
     * 战场上一个战斗单元的总属性，已包含外部系统对战斗单元的数值加成影响。
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitAttr_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitAttr_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.UnitAttr.class, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.UnitAttr.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitHp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        unitAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        unitDefence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        unitHit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        unitMiss_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        unitCrit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unitAntiCrit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitAttr_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.UnitAttr getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.UnitAttr build() {
        com.hawk.game.protocol.BattleCfg.UnitAttr result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.UnitAttr buildPartial() {
        com.hawk.game.protocol.BattleCfg.UnitAttr result = new com.hawk.game.protocol.BattleCfg.UnitAttr(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitHp_ = unitHp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.unitAttack_ = unitAttack_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.unitDefence_ = unitDefence_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.unitHit_ = unitHit_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.unitMiss_ = unitMiss_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.unitCrit_ = unitCrit_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unitAntiCrit_ = unitAntiCrit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.UnitAttr) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.UnitAttr)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.UnitAttr other) {
        if (other == com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance()) return this;
        if (other.hasUnitHp()) {
          setUnitHp(other.getUnitHp());
        }
        if (other.hasUnitAttack()) {
          setUnitAttack(other.getUnitAttack());
        }
        if (other.hasUnitDefence()) {
          setUnitDefence(other.getUnitDefence());
        }
        if (other.hasUnitHit()) {
          setUnitHit(other.getUnitHit());
        }
        if (other.hasUnitMiss()) {
          setUnitMiss(other.getUnitMiss());
        }
        if (other.hasUnitCrit()) {
          setUnitCrit(other.getUnitCrit());
        }
        if (other.hasUnitAntiCrit()) {
          setUnitAntiCrit(other.getUnitAntiCrit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.UnitAttr parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.UnitAttr) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 unitHp = 1;
      private int unitHp_ ;
      /**
       * <code>optional int32 unitHp = 1;</code>
       *
       * <pre>
       * 战斗单元总血量
       * </pre>
       */
      public boolean hasUnitHp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 unitHp = 1;</code>
       *
       * <pre>
       * 战斗单元总血量
       * </pre>
       */
      public int getUnitHp() {
        return unitHp_;
      }
      /**
       * <code>optional int32 unitHp = 1;</code>
       *
       * <pre>
       * 战斗单元总血量
       * </pre>
       */
      public Builder setUnitHp(int value) {
        bitField0_ |= 0x00000001;
        unitHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitHp = 1;</code>
       *
       * <pre>
       * 战斗单元总血量
       * </pre>
       */
      public Builder clearUnitHp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitHp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitAttack = 2;
      private int unitAttack_ ;
      /**
       * <code>optional int32 unitAttack = 2;</code>
       *
       * <pre>
       * 单元伤害
       * </pre>
       */
      public boolean hasUnitAttack() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 unitAttack = 2;</code>
       *
       * <pre>
       * 单元伤害
       * </pre>
       */
      public int getUnitAttack() {
        return unitAttack_;
      }
      /**
       * <code>optional int32 unitAttack = 2;</code>
       *
       * <pre>
       * 单元伤害
       * </pre>
       */
      public Builder setUnitAttack(int value) {
        bitField0_ |= 0x00000002;
        unitAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitAttack = 2;</code>
       *
       * <pre>
       * 单元伤害
       * </pre>
       */
      public Builder clearUnitAttack() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unitAttack_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitDefence = 3;
      private int unitDefence_ ;
      /**
       * <code>optional int32 unitDefence = 3;</code>
       *
       * <pre>
       * 单元防御
       * </pre>
       */
      public boolean hasUnitDefence() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 unitDefence = 3;</code>
       *
       * <pre>
       * 单元防御
       * </pre>
       */
      public int getUnitDefence() {
        return unitDefence_;
      }
      /**
       * <code>optional int32 unitDefence = 3;</code>
       *
       * <pre>
       * 单元防御
       * </pre>
       */
      public Builder setUnitDefence(int value) {
        bitField0_ |= 0x00000004;
        unitDefence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitDefence = 3;</code>
       *
       * <pre>
       * 单元防御
       * </pre>
       */
      public Builder clearUnitDefence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unitDefence_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitHit = 4;
      private int unitHit_ ;
      /**
       * <code>optional int32 unitHit = 4;</code>
       *
       * <pre>
       * 单元命中
       * </pre>
       */
      public boolean hasUnitHit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 unitHit = 4;</code>
       *
       * <pre>
       * 单元命中
       * </pre>
       */
      public int getUnitHit() {
        return unitHit_;
      }
      /**
       * <code>optional int32 unitHit = 4;</code>
       *
       * <pre>
       * 单元命中
       * </pre>
       */
      public Builder setUnitHit(int value) {
        bitField0_ |= 0x00000008;
        unitHit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitHit = 4;</code>
       *
       * <pre>
       * 单元命中
       * </pre>
       */
      public Builder clearUnitHit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unitHit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitMiss = 5;
      private int unitMiss_ ;
      /**
       * <code>optional int32 unitMiss = 5;</code>
       *
       * <pre>
       * 单元闪避
       * </pre>
       */
      public boolean hasUnitMiss() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 unitMiss = 5;</code>
       *
       * <pre>
       * 单元闪避
       * </pre>
       */
      public int getUnitMiss() {
        return unitMiss_;
      }
      /**
       * <code>optional int32 unitMiss = 5;</code>
       *
       * <pre>
       * 单元闪避
       * </pre>
       */
      public Builder setUnitMiss(int value) {
        bitField0_ |= 0x00000010;
        unitMiss_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitMiss = 5;</code>
       *
       * <pre>
       * 单元闪避
       * </pre>
       */
      public Builder clearUnitMiss() {
        bitField0_ = (bitField0_ & ~0x00000010);
        unitMiss_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitCrit = 6;
      private int unitCrit_ ;
      /**
       * <code>optional int32 unitCrit = 6;</code>
       *
       * <pre>
       * 单元暴击
       * </pre>
       */
      public boolean hasUnitCrit() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 unitCrit = 6;</code>
       *
       * <pre>
       * 单元暴击
       * </pre>
       */
      public int getUnitCrit() {
        return unitCrit_;
      }
      /**
       * <code>optional int32 unitCrit = 6;</code>
       *
       * <pre>
       * 单元暴击
       * </pre>
       */
      public Builder setUnitCrit(int value) {
        bitField0_ |= 0x00000020;
        unitCrit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitCrit = 6;</code>
       *
       * <pre>
       * 单元暴击
       * </pre>
       */
      public Builder clearUnitCrit() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unitCrit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 unitAntiCrit = 7;
      private int unitAntiCrit_ ;
      /**
       * <code>optional int32 unitAntiCrit = 7;</code>
       *
       * <pre>
       * 单元韧性
       * </pre>
       */
      public boolean hasUnitAntiCrit() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 unitAntiCrit = 7;</code>
       *
       * <pre>
       * 单元韧性
       * </pre>
       */
      public int getUnitAntiCrit() {
        return unitAntiCrit_;
      }
      /**
       * <code>optional int32 unitAntiCrit = 7;</code>
       *
       * <pre>
       * 单元韧性
       * </pre>
       */
      public Builder setUnitAntiCrit(int value) {
        bitField0_ |= 0x00000040;
        unitAntiCrit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unitAntiCrit = 7;</code>
       *
       * <pre>
       * 单元韧性
       * </pre>
       */
      public Builder clearUnitAntiCrit() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unitAntiCrit_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UnitAttr)
    }

    static {
      defaultInstance = new UnitAttr(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UnitAttr)
  }

  public interface UnitDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 战斗单元ID（此处ID为非配置ID）
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 战斗单元ID（此处ID为非配置ID）
     * </pre>
     */
    int getId();

    // required int32 itemId = 2;
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    int getItemId();

    // required int32 count = 3;
    /**
     * <code>required int32 count = 3;</code>
     *
     * <pre>
     * 战斗单元当前组成的数量
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>required int32 count = 3;</code>
     *
     * <pre>
     * 战斗单元当前组成的数量
     * </pre>
     */
    int getCount();

    // optional int32 hp = 4;
    /**
     * <code>optional int32 hp = 4;</code>
     *
     * <pre>
     * 战斗单元当前血量
     * </pre>
     */
    boolean hasHp();
    /**
     * <code>optional int32 hp = 4;</code>
     *
     * <pre>
     * 战斗单元当前血量
     * </pre>
     */
    int getHp();

    // optional int32 monsterId = 5;
    /**
     * <code>optional int32 monsterId = 5;</code>
     *
     * <pre>
     * PVE怪物ID
     * </pre>
     */
    boolean hasMonsterId();
    /**
     * <code>optional int32 monsterId = 5;</code>
     *
     * <pre>
     * PVE怪物ID
     * </pre>
     */
    int getMonsterId();

    // optional .UnitAttr unitAttr = 6;
    /**
     * <code>optional .UnitAttr unitAttr = 6;</code>
     *
     * <pre>
     * 战斗单元属性（含外部加成影响），玩家传怪物不传
     * </pre>
     */
    boolean hasUnitAttr();
    /**
     * <code>optional .UnitAttr unitAttr = 6;</code>
     *
     * <pre>
     * 战斗单元属性（含外部加成影响），玩家传怪物不传
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitAttr getUnitAttr();
    /**
     * <code>optional .UnitAttr unitAttr = 6;</code>
     *
     * <pre>
     * 战斗单元属性（含外部加成影响），玩家传怪物不传
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder getUnitAttrOrBuilder();

    // optional int32 level = 7;
    /**
     * <code>optional int32 level = 7;</code>
     *
     * <pre>
     * 战斗单元等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 7;</code>
     *
     * <pre>
     * 战斗单元等级
     * </pre>
     */
    int getLevel();

    // optional int32 troopType = 8;
    /**
     * <code>optional int32 troopType = 8;</code>
     *
     * <pre>
     * 阵营数据
     * </pre>
     */
    boolean hasTroopType();
    /**
     * <code>optional int32 troopType = 8;</code>
     *
     * <pre>
     * 阵营数据
     * </pre>
     */
    int getTroopType();

    // optional int32 groupId = 9;
    /**
     * <code>optional int32 groupId = 9;</code>
     *
     * <pre>
     * 创建单位的组ID
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>optional int32 groupId = 9;</code>
     *
     * <pre>
     * 创建单位的组ID
     * </pre>
     */
    int getGroupId();

    // optional int32 extendState = 10;
    /**
     * <code>optional int32 extendState = 10;</code>
     *
     * <pre>
     * 单位扩展属性
     * </pre>
     */
    boolean hasExtendState();
    /**
     * <code>optional int32 extendState = 10;</code>
     *
     * <pre>
     * 单位扩展属性
     * </pre>
     */
    int getExtendState();

    // optional string playerId = 11;
    /**
     * <code>optional string playerId = 11;</code>
     *
     * <pre>
     * pvp玩家ID，pve不用传
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional string playerId = 11;</code>
     *
     * <pre>
     * pvp玩家ID，pve不用传
     * </pre>
     */
    java.lang.String getPlayerId();
    /**
     * <code>optional string playerId = 11;</code>
     *
     * <pre>
     * pvp玩家ID，pve不用传
     * </pre>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    // optional .UnitPos pos = 12;
    /**
     * <code>optional .UnitPos pos = 12;</code>
     *
     * <pre>
     * pvp防御武器，pve战斗单元固定位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>optional .UnitPos pos = 12;</code>
     *
     * <pre>
     * pvp防御武器，pve战斗单元固定位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getPos();
    /**
     * <code>optional .UnitPos pos = 12;</code>
     *
     * <pre>
     * pvp防御武器，pve战斗单元固定位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getPosOrBuilder();

    // repeated .SkillData skillDatas = 13;
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> 
        getSkillDatasList();
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index);
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    int getSkillDatasCount();
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
        getSkillDatasOrBuilderList();
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
        int index);

    // repeated .KillData killDatas = 14;
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.KillData> 
        getKillDatasList();
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.KillData getKillDatas(int index);
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    int getKillDatasCount();
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.KillDataOrBuilder> 
        getKillDatasOrBuilderList();
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.KillDataOrBuilder getKillDatasOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code UnitData}
   *
   * <pre>
   * 战斗单元数据
   * </pre>
   */
  public static final class UnitData extends
      com.google.protobuf.GeneratedMessage
      implements UnitDataOrBuilder {
    // Use UnitData.newBuilder() to construct.
    private UnitData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UnitData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UnitData defaultInstance;
    public static UnitData getDefaultInstance() {
      return defaultInstance;
    }

    public UnitData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UnitData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              count_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hp_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              monsterId_ = input.readInt32();
              break;
            }
            case 50: {
              com.hawk.game.protocol.BattleCfg.UnitAttr.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = unitAttr_.toBuilder();
              }
              unitAttr_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitAttr.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unitAttr_);
                unitAttr_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              level_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              troopType_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              groupId_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              extendState_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              playerId_ = input.readBytes();
              break;
            }
            case 98: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = pos_.toBuilder();
              }
              pos_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pos_);
                pos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                skillDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.SkillData>();
                mutable_bitField0_ |= 0x00001000;
              }
              skillDatas_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.SkillData.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                killDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.KillData>();
                mutable_bitField0_ |= 0x00002000;
              }
              killDatas_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.KillData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          skillDatas_ = java.util.Collections.unmodifiableList(skillDatas_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          killDatas_ = java.util.Collections.unmodifiableList(killDatas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_UnitData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.UnitData.class, com.hawk.game.protocol.BattleCfg.UnitData.Builder.class);
    }

    public static com.google.protobuf.Parser<UnitData> PARSER =
        new com.google.protobuf.AbstractParser<UnitData>() {
      public UnitData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UnitData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 战斗单元ID（此处ID为非配置ID）
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 战斗单元ID（此处ID为非配置ID）
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 itemId = 2;
    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemId_;
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    public int getItemId() {
      return itemId_;
    }

    // required int32 count = 3;
    public static final int COUNT_FIELD_NUMBER = 3;
    private int count_;
    /**
     * <code>required int32 count = 3;</code>
     *
     * <pre>
     * 战斗单元当前组成的数量
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 count = 3;</code>
     *
     * <pre>
     * 战斗单元当前组成的数量
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    // optional int32 hp = 4;
    public static final int HP_FIELD_NUMBER = 4;
    private int hp_;
    /**
     * <code>optional int32 hp = 4;</code>
     *
     * <pre>
     * 战斗单元当前血量
     * </pre>
     */
    public boolean hasHp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 hp = 4;</code>
     *
     * <pre>
     * 战斗单元当前血量
     * </pre>
     */
    public int getHp() {
      return hp_;
    }

    // optional int32 monsterId = 5;
    public static final int MONSTERID_FIELD_NUMBER = 5;
    private int monsterId_;
    /**
     * <code>optional int32 monsterId = 5;</code>
     *
     * <pre>
     * PVE怪物ID
     * </pre>
     */
    public boolean hasMonsterId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 monsterId = 5;</code>
     *
     * <pre>
     * PVE怪物ID
     * </pre>
     */
    public int getMonsterId() {
      return monsterId_;
    }

    // optional .UnitAttr unitAttr = 6;
    public static final int UNITATTR_FIELD_NUMBER = 6;
    private com.hawk.game.protocol.BattleCfg.UnitAttr unitAttr_;
    /**
     * <code>optional .UnitAttr unitAttr = 6;</code>
     *
     * <pre>
     * 战斗单元属性（含外部加成影响），玩家传怪物不传
     * </pre>
     */
    public boolean hasUnitAttr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .UnitAttr unitAttr = 6;</code>
     *
     * <pre>
     * 战斗单元属性（含外部加成影响），玩家传怪物不传
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitAttr getUnitAttr() {
      return unitAttr_;
    }
    /**
     * <code>optional .UnitAttr unitAttr = 6;</code>
     *
     * <pre>
     * 战斗单元属性（含外部加成影响），玩家传怪物不传
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder getUnitAttrOrBuilder() {
      return unitAttr_;
    }

    // optional int32 level = 7;
    public static final int LEVEL_FIELD_NUMBER = 7;
    private int level_;
    /**
     * <code>optional int32 level = 7;</code>
     *
     * <pre>
     * 战斗单元等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 level = 7;</code>
     *
     * <pre>
     * 战斗单元等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // optional int32 troopType = 8;
    public static final int TROOPTYPE_FIELD_NUMBER = 8;
    private int troopType_;
    /**
     * <code>optional int32 troopType = 8;</code>
     *
     * <pre>
     * 阵营数据
     * </pre>
     */
    public boolean hasTroopType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 troopType = 8;</code>
     *
     * <pre>
     * 阵营数据
     * </pre>
     */
    public int getTroopType() {
      return troopType_;
    }

    // optional int32 groupId = 9;
    public static final int GROUPID_FIELD_NUMBER = 9;
    private int groupId_;
    /**
     * <code>optional int32 groupId = 9;</code>
     *
     * <pre>
     * 创建单位的组ID
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 groupId = 9;</code>
     *
     * <pre>
     * 创建单位的组ID
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // optional int32 extendState = 10;
    public static final int EXTENDSTATE_FIELD_NUMBER = 10;
    private int extendState_;
    /**
     * <code>optional int32 extendState = 10;</code>
     *
     * <pre>
     * 单位扩展属性
     * </pre>
     */
    public boolean hasExtendState() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 extendState = 10;</code>
     *
     * <pre>
     * 单位扩展属性
     * </pre>
     */
    public int getExtendState() {
      return extendState_;
    }

    // optional string playerId = 11;
    public static final int PLAYERID_FIELD_NUMBER = 11;
    private java.lang.Object playerId_;
    /**
     * <code>optional string playerId = 11;</code>
     *
     * <pre>
     * pvp玩家ID，pve不用传
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string playerId = 11;</code>
     *
     * <pre>
     * pvp玩家ID，pve不用传
     * </pre>
     */
    public java.lang.String getPlayerId() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string playerId = 11;</code>
     *
     * <pre>
     * pvp玩家ID，pve不用传
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .UnitPos pos = 12;
    public static final int POS_FIELD_NUMBER = 12;
    private com.hawk.game.protocol.BattleCfg.UnitPos pos_;
    /**
     * <code>optional .UnitPos pos = 12;</code>
     *
     * <pre>
     * pvp防御武器，pve战斗单元固定位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .UnitPos pos = 12;</code>
     *
     * <pre>
     * pvp防御武器，pve战斗单元固定位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getPos() {
      return pos_;
    }
    /**
     * <code>optional .UnitPos pos = 12;</code>
     *
     * <pre>
     * pvp防御武器，pve战斗单元固定位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getPosOrBuilder() {
      return pos_;
    }

    // repeated .SkillData skillDatas = 13;
    public static final int SKILLDATAS_FIELD_NUMBER = 13;
    private java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> skillDatas_;
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> getSkillDatasList() {
      return skillDatas_;
    }
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
        getSkillDatasOrBuilderList() {
      return skillDatas_;
    }
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    public int getSkillDatasCount() {
      return skillDatas_.size();
    }
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index) {
      return skillDatas_.get(index);
    }
    /**
     * <code>repeated .SkillData skillDatas = 13;</code>
     *
     * <pre>
     * pvp技能列表（player开启的技能列表）	
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
        int index) {
      return skillDatas_.get(index);
    }

    // repeated .KillData killDatas = 14;
    public static final int KILLDATAS_FIELD_NUMBER = 14;
    private java.util.List<com.hawk.game.protocol.BattleCfg.KillData> killDatas_;
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.KillData> getKillDatasList() {
      return killDatas_;
    }
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.KillDataOrBuilder> 
        getKillDatasOrBuilderList() {
      return killDatas_;
    }
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    public int getKillDatasCount() {
      return killDatas_.size();
    }
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.KillData getKillDatas(int index) {
      return killDatas_.get(index);
    }
    /**
     * <code>repeated .KillData killDatas = 14;</code>
     *
     * <pre>
     * pvp击杀列表（战斗结算用）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.KillDataOrBuilder getKillDatasOrBuilder(
        int index) {
      return killDatas_.get(index);
    }

    private void initFields() {
      id_ = 0;
      itemId_ = 0;
      count_ = 0;
      hp_ = 0;
      monsterId_ = 0;
      unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
      level_ = 0;
      troopType_ = 0;
      groupId_ = 0;
      extendState_ = 0;
      playerId_ = "";
      pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      skillDatas_ = java.util.Collections.emptyList();
      killDatas_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPos()) {
        if (!getPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSkillDatasCount(); i++) {
        if (!getSkillDatas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getKillDatasCount(); i++) {
        if (!getKillDatas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, count_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, hp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, monsterId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, unitAttr_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, level_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, troopType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, groupId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, extendState_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getPlayerIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, pos_);
      }
      for (int i = 0; i < skillDatas_.size(); i++) {
        output.writeMessage(13, skillDatas_.get(i));
      }
      for (int i = 0; i < killDatas_.size(); i++) {
        output.writeMessage(14, killDatas_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, count_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, hp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, monsterId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, unitAttr_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, level_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, troopType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, groupId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, extendState_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getPlayerIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, pos_);
      }
      for (int i = 0; i < skillDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, skillDatas_.get(i));
      }
      for (int i = 0; i < killDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, killDatas_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.UnitData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.UnitData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UnitData}
     *
     * <pre>
     * 战斗单元数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.UnitDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.UnitData.class, com.hawk.game.protocol.BattleCfg.UnitData.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.UnitData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUnitAttrFieldBuilder();
          getPosFieldBuilder();
          getSkillDatasFieldBuilder();
          getKillDatasFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        monsterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (unitAttrBuilder_ == null) {
          unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
        } else {
          unitAttrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        troopType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        extendState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        playerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        if (posBuilder_ == null) {
          pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          posBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (skillDatasBuilder_ == null) {
          skillDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          skillDatasBuilder_.clear();
        }
        if (killDatasBuilder_ == null) {
          killDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          killDatasBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_UnitData_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.UnitData getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.UnitData.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.UnitData build() {
        com.hawk.game.protocol.BattleCfg.UnitData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.UnitData buildPartial() {
        com.hawk.game.protocol.BattleCfg.UnitData result = new com.hawk.game.protocol.BattleCfg.UnitData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.monsterId_ = monsterId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (unitAttrBuilder_ == null) {
          result.unitAttr_ = unitAttr_;
        } else {
          result.unitAttr_ = unitAttrBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.troopType_ = troopType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.extendState_ = extendState_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (posBuilder_ == null) {
          result.pos_ = pos_;
        } else {
          result.pos_ = posBuilder_.build();
        }
        if (skillDatasBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            skillDatas_ = java.util.Collections.unmodifiableList(skillDatas_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.skillDatas_ = skillDatas_;
        } else {
          result.skillDatas_ = skillDatasBuilder_.build();
        }
        if (killDatasBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            killDatas_ = java.util.Collections.unmodifiableList(killDatas_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.killDatas_ = killDatas_;
        } else {
          result.killDatas_ = killDatasBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.UnitData) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.UnitData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.UnitData other) {
        if (other == com.hawk.game.protocol.BattleCfg.UnitData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasMonsterId()) {
          setMonsterId(other.getMonsterId());
        }
        if (other.hasUnitAttr()) {
          mergeUnitAttr(other.getUnitAttr());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasTroopType()) {
          setTroopType(other.getTroopType());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasExtendState()) {
          setExtendState(other.getExtendState());
        }
        if (other.hasPlayerId()) {
          bitField0_ |= 0x00000400;
          playerId_ = other.playerId_;
          onChanged();
        }
        if (other.hasPos()) {
          mergePos(other.getPos());
        }
        if (skillDatasBuilder_ == null) {
          if (!other.skillDatas_.isEmpty()) {
            if (skillDatas_.isEmpty()) {
              skillDatas_ = other.skillDatas_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureSkillDatasIsMutable();
              skillDatas_.addAll(other.skillDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.skillDatas_.isEmpty()) {
            if (skillDatasBuilder_.isEmpty()) {
              skillDatasBuilder_.dispose();
              skillDatasBuilder_ = null;
              skillDatas_ = other.skillDatas_;
              bitField0_ = (bitField0_ & ~0x00001000);
              skillDatasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSkillDatasFieldBuilder() : null;
            } else {
              skillDatasBuilder_.addAllMessages(other.skillDatas_);
            }
          }
        }
        if (killDatasBuilder_ == null) {
          if (!other.killDatas_.isEmpty()) {
            if (killDatas_.isEmpty()) {
              killDatas_ = other.killDatas_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureKillDatasIsMutable();
              killDatas_.addAll(other.killDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.killDatas_.isEmpty()) {
            if (killDatasBuilder_.isEmpty()) {
              killDatasBuilder_.dispose();
              killDatasBuilder_ = null;
              killDatas_ = other.killDatas_;
              bitField0_ = (bitField0_ & ~0x00002000);
              killDatasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKillDatasFieldBuilder() : null;
            } else {
              killDatasBuilder_.addAllMessages(other.killDatas_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasItemId()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        if (hasPos()) {
          if (!getPos().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSkillDatasCount(); i++) {
          if (!getSkillDatas(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getKillDatasCount(); i++) {
          if (!getKillDatas(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.UnitData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.UnitData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 战斗单元ID（此处ID为非配置ID）
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 战斗单元ID（此处ID为非配置ID）
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 战斗单元ID（此处ID为非配置ID）
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 战斗单元ID（此处ID为非配置ID）
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 itemId = 2;
      private int itemId_ ;
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // required int32 count = 3;
      private int count_ ;
      /**
       * <code>required int32 count = 3;</code>
       *
       * <pre>
       * 战斗单元当前组成的数量
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 count = 3;</code>
       *
       * <pre>
       * 战斗单元当前组成的数量
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required int32 count = 3;</code>
       *
       * <pre>
       * 战斗单元当前组成的数量
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000004;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 count = 3;</code>
       *
       * <pre>
       * 战斗单元当前组成的数量
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hp = 4;
      private int hp_ ;
      /**
       * <code>optional int32 hp = 4;</code>
       *
       * <pre>
       * 战斗单元当前血量
       * </pre>
       */
      public boolean hasHp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hp = 4;</code>
       *
       * <pre>
       * 战斗单元当前血量
       * </pre>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>optional int32 hp = 4;</code>
       *
       * <pre>
       * 战斗单元当前血量
       * </pre>
       */
      public Builder setHp(int value) {
        bitField0_ |= 0x00000008;
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hp = 4;</code>
       *
       * <pre>
       * 战斗单元当前血量
       * </pre>
       */
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 monsterId = 5;
      private int monsterId_ ;
      /**
       * <code>optional int32 monsterId = 5;</code>
       *
       * <pre>
       * PVE怪物ID
       * </pre>
       */
      public boolean hasMonsterId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 monsterId = 5;</code>
       *
       * <pre>
       * PVE怪物ID
       * </pre>
       */
      public int getMonsterId() {
        return monsterId_;
      }
      /**
       * <code>optional int32 monsterId = 5;</code>
       *
       * <pre>
       * PVE怪物ID
       * </pre>
       */
      public Builder setMonsterId(int value) {
        bitField0_ |= 0x00000010;
        monsterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 monsterId = 5;</code>
       *
       * <pre>
       * PVE怪物ID
       * </pre>
       */
      public Builder clearMonsterId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        monsterId_ = 0;
        onChanged();
        return this;
      }

      // optional .UnitAttr unitAttr = 6;
      private com.hawk.game.protocol.BattleCfg.UnitAttr unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitAttr, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder, com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder> unitAttrBuilder_;
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public boolean hasUnitAttr() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitAttr getUnitAttr() {
        if (unitAttrBuilder_ == null) {
          return unitAttr_;
        } else {
          return unitAttrBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public Builder setUnitAttr(com.hawk.game.protocol.BattleCfg.UnitAttr value) {
        if (unitAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unitAttr_ = value;
          onChanged();
        } else {
          unitAttrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public Builder setUnitAttr(
          com.hawk.game.protocol.BattleCfg.UnitAttr.Builder builderForValue) {
        if (unitAttrBuilder_ == null) {
          unitAttr_ = builderForValue.build();
          onChanged();
        } else {
          unitAttrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public Builder mergeUnitAttr(com.hawk.game.protocol.BattleCfg.UnitAttr value) {
        if (unitAttrBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              unitAttr_ != com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance()) {
            unitAttr_ =
              com.hawk.game.protocol.BattleCfg.UnitAttr.newBuilder(unitAttr_).mergeFrom(value).buildPartial();
          } else {
            unitAttr_ = value;
          }
          onChanged();
        } else {
          unitAttrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public Builder clearUnitAttr() {
        if (unitAttrBuilder_ == null) {
          unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
          onChanged();
        } else {
          unitAttrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitAttr.Builder getUnitAttrBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getUnitAttrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder getUnitAttrOrBuilder() {
        if (unitAttrBuilder_ != null) {
          return unitAttrBuilder_.getMessageOrBuilder();
        } else {
          return unitAttr_;
        }
      }
      /**
       * <code>optional .UnitAttr unitAttr = 6;</code>
       *
       * <pre>
       * 战斗单元属性（含外部加成影响），玩家传怪物不传
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitAttr, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder, com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder> 
          getUnitAttrFieldBuilder() {
        if (unitAttrBuilder_ == null) {
          unitAttrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitAttr, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder, com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder>(
                  unitAttr_,
                  getParentForChildren(),
                  isClean());
          unitAttr_ = null;
        }
        return unitAttrBuilder_;
      }

      // optional int32 level = 7;
      private int level_ ;
      /**
       * <code>optional int32 level = 7;</code>
       *
       * <pre>
       * 战斗单元等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 level = 7;</code>
       *
       * <pre>
       * 战斗单元等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 7;</code>
       *
       * <pre>
       * 战斗单元等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000040;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 7;</code>
       *
       * <pre>
       * 战斗单元等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        level_ = 0;
        onChanged();
        return this;
      }

      // optional int32 troopType = 8;
      private int troopType_ ;
      /**
       * <code>optional int32 troopType = 8;</code>
       *
       * <pre>
       * 阵营数据
       * </pre>
       */
      public boolean hasTroopType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 troopType = 8;</code>
       *
       * <pre>
       * 阵营数据
       * </pre>
       */
      public int getTroopType() {
        return troopType_;
      }
      /**
       * <code>optional int32 troopType = 8;</code>
       *
       * <pre>
       * 阵营数据
       * </pre>
       */
      public Builder setTroopType(int value) {
        bitField0_ |= 0x00000080;
        troopType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 troopType = 8;</code>
       *
       * <pre>
       * 阵营数据
       * </pre>
       */
      public Builder clearTroopType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        troopType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 groupId = 9;
      private int groupId_ ;
      /**
       * <code>optional int32 groupId = 9;</code>
       *
       * <pre>
       * 创建单位的组ID
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 groupId = 9;</code>
       *
       * <pre>
       * 创建单位的组ID
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>optional int32 groupId = 9;</code>
       *
       * <pre>
       * 创建单位的组ID
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000100;
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 groupId = 9;</code>
       *
       * <pre>
       * 创建单位的组ID
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        groupId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 extendState = 10;
      private int extendState_ ;
      /**
       * <code>optional int32 extendState = 10;</code>
       *
       * <pre>
       * 单位扩展属性
       * </pre>
       */
      public boolean hasExtendState() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 extendState = 10;</code>
       *
       * <pre>
       * 单位扩展属性
       * </pre>
       */
      public int getExtendState() {
        return extendState_;
      }
      /**
       * <code>optional int32 extendState = 10;</code>
       *
       * <pre>
       * 单位扩展属性
       * </pre>
       */
      public Builder setExtendState(int value) {
        bitField0_ |= 0x00000200;
        extendState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 extendState = 10;</code>
       *
       * <pre>
       * 单位扩展属性
       * </pre>
       */
      public Builder clearExtendState() {
        bitField0_ = (bitField0_ & ~0x00000200);
        extendState_ = 0;
        onChanged();
        return this;
      }

      // optional string playerId = 11;
      private java.lang.Object playerId_ = "";
      /**
       * <code>optional string playerId = 11;</code>
       *
       * <pre>
       * pvp玩家ID，pve不用传
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string playerId = 11;</code>
       *
       * <pre>
       * pvp玩家ID，pve不用传
       * </pre>
       */
      public java.lang.String getPlayerId() {
        java.lang.Object ref = playerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string playerId = 11;</code>
       *
       * <pre>
       * pvp玩家ID，pve不用传
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        java.lang.Object ref = playerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string playerId = 11;</code>
       *
       * <pre>
       * pvp玩家ID，pve不用传
       * </pre>
       */
      public Builder setPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerId = 11;</code>
       *
       * <pre>
       * pvp玩家ID，pve不用传
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        playerId_ = getDefaultInstance().getPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerId = 11;</code>
       *
       * <pre>
       * pvp玩家ID，pve不用传
       * </pre>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        playerId_ = value;
        onChanged();
        return this;
      }

      // optional .UnitPos pos = 12;
      private com.hawk.game.protocol.BattleCfg.UnitPos pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> posBuilder_;
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getPos() {
        if (posBuilder_ == null) {
          return pos_;
        } else {
          return posBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public Builder setPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (posBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pos_ = value;
          onChanged();
        } else {
          posBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public Builder setPos(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (posBuilder_ == null) {
          pos_ = builderForValue.build();
          onChanged();
        } else {
          posBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public Builder mergePos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (posBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              pos_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            pos_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(pos_).mergeFrom(value).buildPartial();
          } else {
            pos_ = value;
          }
          onChanged();
        } else {
          posBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public Builder clearPos() {
        if (posBuilder_ == null) {
          pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          posBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getPosBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getPosOrBuilder() {
        if (posBuilder_ != null) {
          return posBuilder_.getMessageOrBuilder();
        } else {
          return pos_;
        }
      }
      /**
       * <code>optional .UnitPos pos = 12;</code>
       *
       * <pre>
       * pvp防御武器，pve战斗单元固定位置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getPosFieldBuilder() {
        if (posBuilder_ == null) {
          posBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  pos_,
                  getParentForChildren(),
                  isClean());
          pos_ = null;
        }
        return posBuilder_;
      }

      // repeated .SkillData skillDatas = 13;
      private java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> skillDatas_ =
        java.util.Collections.emptyList();
      private void ensureSkillDatasIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          skillDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.SkillData>(skillDatas_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> skillDatasBuilder_;

      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> getSkillDatasList() {
        if (skillDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillDatas_);
        } else {
          return skillDatasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public int getSkillDatasCount() {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.size();
        } else {
          return skillDatasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index) {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.get(index);
        } else {
          return skillDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder setSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.set(index, value);
          onChanged();
        } else {
          skillDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder setSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder addSkillDatas(com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.add(value);
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder addSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.add(index, value);
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder addSkillDatas(
          com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.add(builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder addSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder addAllSkillDatas(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.SkillData> values) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          super.addAll(values, skillDatas_);
          onChanged();
        } else {
          skillDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder clearSkillDatas() {
        if (skillDatasBuilder_ == null) {
          skillDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          skillDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public Builder removeSkillDatas(int index) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.remove(index);
          onChanged();
        } else {
          skillDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder getSkillDatasBuilder(
          int index) {
        return getSkillDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
          int index) {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.get(index);  } else {
          return skillDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
           getSkillDatasOrBuilderList() {
        if (skillDatasBuilder_ != null) {
          return skillDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillDatas_);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder addSkillDatasBuilder() {
        return getSkillDatasFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder addSkillDatasBuilder(
          int index) {
        return getSkillDatasFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillData skillDatas = 13;</code>
       *
       * <pre>
       * pvp技能列表（player开启的技能列表）	
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData.Builder> 
           getSkillDatasBuilderList() {
        return getSkillDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
          getSkillDatasFieldBuilder() {
        if (skillDatasBuilder_ == null) {
          skillDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder>(
                  skillDatas_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          skillDatas_ = null;
        }
        return skillDatasBuilder_;
      }

      // repeated .KillData killDatas = 14;
      private java.util.List<com.hawk.game.protocol.BattleCfg.KillData> killDatas_ =
        java.util.Collections.emptyList();
      private void ensureKillDatasIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          killDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.KillData>(killDatas_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.KillData, com.hawk.game.protocol.BattleCfg.KillData.Builder, com.hawk.game.protocol.BattleCfg.KillDataOrBuilder> killDatasBuilder_;

      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.KillData> getKillDatasList() {
        if (killDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(killDatas_);
        } else {
          return killDatasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public int getKillDatasCount() {
        if (killDatasBuilder_ == null) {
          return killDatas_.size();
        } else {
          return killDatasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.KillData getKillDatas(int index) {
        if (killDatasBuilder_ == null) {
          return killDatas_.get(index);
        } else {
          return killDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder setKillDatas(
          int index, com.hawk.game.protocol.BattleCfg.KillData value) {
        if (killDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillDatasIsMutable();
          killDatas_.set(index, value);
          onChanged();
        } else {
          killDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder setKillDatas(
          int index, com.hawk.game.protocol.BattleCfg.KillData.Builder builderForValue) {
        if (killDatasBuilder_ == null) {
          ensureKillDatasIsMutable();
          killDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          killDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder addKillDatas(com.hawk.game.protocol.BattleCfg.KillData value) {
        if (killDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillDatasIsMutable();
          killDatas_.add(value);
          onChanged();
        } else {
          killDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder addKillDatas(
          int index, com.hawk.game.protocol.BattleCfg.KillData value) {
        if (killDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKillDatasIsMutable();
          killDatas_.add(index, value);
          onChanged();
        } else {
          killDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder addKillDatas(
          com.hawk.game.protocol.BattleCfg.KillData.Builder builderForValue) {
        if (killDatasBuilder_ == null) {
          ensureKillDatasIsMutable();
          killDatas_.add(builderForValue.build());
          onChanged();
        } else {
          killDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder addKillDatas(
          int index, com.hawk.game.protocol.BattleCfg.KillData.Builder builderForValue) {
        if (killDatasBuilder_ == null) {
          ensureKillDatasIsMutable();
          killDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          killDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder addAllKillDatas(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.KillData> values) {
        if (killDatasBuilder_ == null) {
          ensureKillDatasIsMutable();
          super.addAll(values, killDatas_);
          onChanged();
        } else {
          killDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder clearKillDatas() {
        if (killDatasBuilder_ == null) {
          killDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          killDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public Builder removeKillDatas(int index) {
        if (killDatasBuilder_ == null) {
          ensureKillDatasIsMutable();
          killDatas_.remove(index);
          onChanged();
        } else {
          killDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.KillData.Builder getKillDatasBuilder(
          int index) {
        return getKillDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.KillDataOrBuilder getKillDatasOrBuilder(
          int index) {
        if (killDatasBuilder_ == null) {
          return killDatas_.get(index);  } else {
          return killDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.KillDataOrBuilder> 
           getKillDatasOrBuilderList() {
        if (killDatasBuilder_ != null) {
          return killDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(killDatas_);
        }
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.KillData.Builder addKillDatasBuilder() {
        return getKillDatasFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.KillData.getDefaultInstance());
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.KillData.Builder addKillDatasBuilder(
          int index) {
        return getKillDatasFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.KillData.getDefaultInstance());
      }
      /**
       * <code>repeated .KillData killDatas = 14;</code>
       *
       * <pre>
       * pvp击杀列表（战斗结算用）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.KillData.Builder> 
           getKillDatasBuilderList() {
        return getKillDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.KillData, com.hawk.game.protocol.BattleCfg.KillData.Builder, com.hawk.game.protocol.BattleCfg.KillDataOrBuilder> 
          getKillDatasFieldBuilder() {
        if (killDatasBuilder_ == null) {
          killDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.KillData, com.hawk.game.protocol.BattleCfg.KillData.Builder, com.hawk.game.protocol.BattleCfg.KillDataOrBuilder>(
                  killDatas_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          killDatas_ = null;
        }
        return killDatasBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:UnitData)
    }

    static {
      defaultInstance = new UnitData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UnitData)
  }

  public interface KillDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 兵种ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 兵种ID
     * </pre>
     */
    int getId();

    // required int32 count = 2;
    /**
     * <code>required int32 count = 2;</code>
     *
     * <pre>
     * 击杀数量
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>required int32 count = 2;</code>
     *
     * <pre>
     * 击杀数量
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code KillData}
   *
   * <pre>
   * 击杀
   * </pre>
   */
  public static final class KillData extends
      com.google.protobuf.GeneratedMessage
      implements KillDataOrBuilder {
    // Use KillData.newBuilder() to construct.
    private KillData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KillData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KillData defaultInstance;
    public static KillData getDefaultInstance() {
      return defaultInstance;
    }

    public KillData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KillData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_KillData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_KillData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.KillData.class, com.hawk.game.protocol.BattleCfg.KillData.Builder.class);
    }

    public static com.google.protobuf.Parser<KillData> PARSER =
        new com.google.protobuf.AbstractParser<KillData>() {
      public KillData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KillData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KillData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 兵种ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 兵种ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>required int32 count = 2;</code>
     *
     * <pre>
     * 击杀数量
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 count = 2;</code>
     *
     * <pre>
     * 击杀数量
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      id_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.KillData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.KillData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KillData}
     *
     * <pre>
     * 击杀
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.KillDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_KillData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_KillData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.KillData.class, com.hawk.game.protocol.BattleCfg.KillData.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.KillData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_KillData_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.KillData getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.KillData.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.KillData build() {
        com.hawk.game.protocol.BattleCfg.KillData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.KillData buildPartial() {
        com.hawk.game.protocol.BattleCfg.KillData result = new com.hawk.game.protocol.BattleCfg.KillData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.KillData) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.KillData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.KillData other) {
        if (other == com.hawk.game.protocol.BattleCfg.KillData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.KillData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.KillData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 兵种ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 兵种ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 兵种ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 兵种ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 count = 2;
      private int count_ ;
      /**
       * <code>required int32 count = 2;</code>
       *
       * <pre>
       * 击杀数量
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 count = 2;</code>
       *
       * <pre>
       * 击杀数量
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required int32 count = 2;</code>
       *
       * <pre>
       * 击杀数量
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 count = 2;</code>
       *
       * <pre>
       * 击杀数量
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:KillData)
    }

    static {
      defaultInstance = new KillData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:KillData)
  }

  public interface SkillDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    int getId();

    // required int32 level = 2;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     * 技能等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     * 技能等级
     * </pre>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code SkillData}
   *
   * <pre>
   * 开启的技能数据
   * </pre>
   */
  public static final class SkillData extends
      com.google.protobuf.GeneratedMessage
      implements SkillDataOrBuilder {
    // Use SkillData.newBuilder() to construct.
    private SkillData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SkillData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SkillData defaultInstance;
    public static SkillData getDefaultInstance() {
      return defaultInstance;
    }

    public SkillData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SkillData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_SkillData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_SkillData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.SkillData.class, com.hawk.game.protocol.BattleCfg.SkillData.Builder.class);
    }

    public static com.google.protobuf.Parser<SkillData> PARSER =
        new com.google.protobuf.AbstractParser<SkillData>() {
      public SkillData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SkillData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SkillData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 level = 2;
    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     * 技能等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 level = 2;</code>
     *
     * <pre>
     * 技能等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    private void initFields() {
      id_ = 0;
      level_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.SkillData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.SkillData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SkillData}
     *
     * <pre>
     * 开启的技能数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_SkillData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_SkillData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.SkillData.class, com.hawk.game.protocol.BattleCfg.SkillData.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.SkillData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_SkillData_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.SkillData getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.SkillData build() {
        com.hawk.game.protocol.BattleCfg.SkillData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.SkillData buildPartial() {
        com.hawk.game.protocol.BattleCfg.SkillData result = new com.hawk.game.protocol.BattleCfg.SkillData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.SkillData) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.SkillData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.SkillData other) {
        if (other == com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.SkillData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.SkillData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 level = 2;
      private int level_ ;
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       * 技能等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       * 技能等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       * 技能等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 2;</code>
       *
       * <pre>
       * 技能等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SkillData)
    }

    static {
      defaultInstance = new SkillData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SkillData)
  }

  public interface BFMapCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 地图ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 地图ID
     * </pre>
     */
    int getId();

    // required int32 width = 2;
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     * 地图宽
     * </pre>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     * 地图宽
     * </pre>
     */
    int getWidth();

    // required int32 height = 3;
    /**
     * <code>required int32 height = 3;</code>
     *
     * <pre>
     * 地图高
     * </pre>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 3;</code>
     *
     * <pre>
     * 地图高
     * </pre>
     */
    int getHeight();

    // required int32 tileWidth = 4;
    /**
     * <code>required int32 tileWidth = 4;</code>
     *
     * <pre>
     * 地图格子宽
     * </pre>
     */
    boolean hasTileWidth();
    /**
     * <code>required int32 tileWidth = 4;</code>
     *
     * <pre>
     * 地图格子宽
     * </pre>
     */
    int getTileWidth();

    // required int32 tileHeight = 5;
    /**
     * <code>required int32 tileHeight = 5;</code>
     *
     * <pre>
     * 地图格子高
     * </pre>
     */
    boolean hasTileHeight();
    /**
     * <code>required int32 tileHeight = 5;</code>
     *
     * <pre>
     * 地图格子高
     * </pre>
     */
    int getTileHeight();

    // required .UnitPos atkPos = 10;
    /**
     * <code>required .UnitPos atkPos = 10;</code>
     *
     * <pre>
     * 攻方开始位置
     * </pre>
     */
    boolean hasAtkPos();
    /**
     * <code>required .UnitPos atkPos = 10;</code>
     *
     * <pre>
     * 攻方开始位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getAtkPos();
    /**
     * <code>required .UnitPos atkPos = 10;</code>
     *
     * <pre>
     * 攻方开始位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getAtkPosOrBuilder();

    // required .UnitPos defPos = 11;
    /**
     * <code>required .UnitPos defPos = 11;</code>
     *
     * <pre>
     * 防方开始位置
     * </pre>
     */
    boolean hasDefPos();
    /**
     * <code>required .UnitPos defPos = 11;</code>
     *
     * <pre>
     * 防方开始位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getDefPos();
    /**
     * <code>required .UnitPos defPos = 11;</code>
     *
     * <pre>
     * 防方开始位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getDefPosOrBuilder();

    // optional .UnitPos warPos = 12;
    /**
     * <code>optional .UnitPos warPos = 12;</code>
     *
     * <pre>
     * 地图交战中心位置	
     * </pre>
     */
    boolean hasWarPos();
    /**
     * <code>optional .UnitPos warPos = 12;</code>
     *
     * <pre>
     * 地图交战中心位置	
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getWarPos();
    /**
     * <code>optional .UnitPos warPos = 12;</code>
     *
     * <pre>
     * 地图交战中心位置	
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getWarPosOrBuilder();

    // optional int32 hoverTime = 13;
    /**
     * <code>optional int32 hoverTime = 13;</code>
     *
     * <pre>
     * 盘旋时间
     * </pre>
     */
    boolean hasHoverTime();
    /**
     * <code>optional int32 hoverTime = 13;</code>
     *
     * <pre>
     * 盘旋时间
     * </pre>
     */
    int getHoverTime();

    // optional int32 maxFindStep = 14;
    /**
     * <code>optional int32 maxFindStep = 14;</code>
     *
     * <pre>
     * A*寻路最大步数
     * </pre>
     */
    boolean hasMaxFindStep();
    /**
     * <code>optional int32 maxFindStep = 14;</code>
     *
     * <pre>
     * A*寻路最大步数
     * </pre>
     */
    int getMaxFindStep();

    // optional int32 crawlFindMode = 15;
    /**
     * <code>optional int32 crawlFindMode = 15;</code>
     *
     * <pre>
     * 爬虫寻路模式, 1: RTS, 2: CR
     * </pre>
     */
    boolean hasCrawlFindMode();
    /**
     * <code>optional int32 crawlFindMode = 15;</code>
     *
     * <pre>
     * 爬虫寻路模式, 1: RTS, 2: CR
     * </pre>
     */
    int getCrawlFindMode();

    // repeated int32 datas = 20;
    /**
     * <code>repeated int32 datas = 20;</code>
     *
     * <pre>
     * 地图阻挡信息
     * </pre>
     */
    java.util.List<java.lang.Integer> getDatasList();
    /**
     * <code>repeated int32 datas = 20;</code>
     *
     * <pre>
     * 地图阻挡信息
     * </pre>
     */
    int getDatasCount();
    /**
     * <code>repeated int32 datas = 20;</code>
     *
     * <pre>
     * 地图阻挡信息
     * </pre>
     */
    int getDatas(int index);

    // repeated .UnitPos navmeshes = 21;
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.UnitPos> 
        getNavmeshesList();
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getNavmeshes(int index);
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    int getNavmeshesCount();
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
        getNavmeshesOrBuilderList();
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getNavmeshesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BFMapCfg}
   *
   * <pre>
   * 战场地图配置
   * </pre>
   */
  public static final class BFMapCfg extends
      com.google.protobuf.GeneratedMessage
      implements BFMapCfgOrBuilder {
    // Use BFMapCfg.newBuilder() to construct.
    private BFMapCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BFMapCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BFMapCfg defaultInstance;
    public static BFMapCfg getDefaultInstance() {
      return defaultInstance;
    }

    public BFMapCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BFMapCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              height_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              tileWidth_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              tileHeight_ = input.readInt32();
              break;
            }
            case 82: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = atkPos_.toBuilder();
              }
              atkPos_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(atkPos_);
                atkPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 90: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = defPos_.toBuilder();
              }
              defPos_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defPos_);
                defPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 98: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = warPos_.toBuilder();
              }
              warPos_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(warPos_);
                warPos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              hoverTime_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000200;
              maxFindStep_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000400;
              crawlFindMode_ = input.readInt32();
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                datas_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              datas_.add(input.readInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                datas_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                datas_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                navmeshes_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.UnitPos>();
                mutable_bitField0_ |= 0x00001000;
              }
              navmeshes_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          datas_ = java.util.Collections.unmodifiableList(datas_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          navmeshes_ = java.util.Collections.unmodifiableList(navmeshes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFMapCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFMapCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BFMapCfg.class, com.hawk.game.protocol.BattleCfg.BFMapCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<BFMapCfg> PARSER =
        new com.google.protobuf.AbstractParser<BFMapCfg>() {
      public BFMapCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BFMapCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BFMapCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 地图ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 地图ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 width = 2;
    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     * 地图宽
     * </pre>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 width = 2;</code>
     *
     * <pre>
     * 地图宽
     * </pre>
     */
    public int getWidth() {
      return width_;
    }

    // required int32 height = 3;
    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <code>required int32 height = 3;</code>
     *
     * <pre>
     * 地图高
     * </pre>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 height = 3;</code>
     *
     * <pre>
     * 地图高
     * </pre>
     */
    public int getHeight() {
      return height_;
    }

    // required int32 tileWidth = 4;
    public static final int TILEWIDTH_FIELD_NUMBER = 4;
    private int tileWidth_;
    /**
     * <code>required int32 tileWidth = 4;</code>
     *
     * <pre>
     * 地图格子宽
     * </pre>
     */
    public boolean hasTileWidth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 tileWidth = 4;</code>
     *
     * <pre>
     * 地图格子宽
     * </pre>
     */
    public int getTileWidth() {
      return tileWidth_;
    }

    // required int32 tileHeight = 5;
    public static final int TILEHEIGHT_FIELD_NUMBER = 5;
    private int tileHeight_;
    /**
     * <code>required int32 tileHeight = 5;</code>
     *
     * <pre>
     * 地图格子高
     * </pre>
     */
    public boolean hasTileHeight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 tileHeight = 5;</code>
     *
     * <pre>
     * 地图格子高
     * </pre>
     */
    public int getTileHeight() {
      return tileHeight_;
    }

    // required .UnitPos atkPos = 10;
    public static final int ATKPOS_FIELD_NUMBER = 10;
    private com.hawk.game.protocol.BattleCfg.UnitPos atkPos_;
    /**
     * <code>required .UnitPos atkPos = 10;</code>
     *
     * <pre>
     * 攻方开始位置
     * </pre>
     */
    public boolean hasAtkPos() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .UnitPos atkPos = 10;</code>
     *
     * <pre>
     * 攻方开始位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getAtkPos() {
      return atkPos_;
    }
    /**
     * <code>required .UnitPos atkPos = 10;</code>
     *
     * <pre>
     * 攻方开始位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getAtkPosOrBuilder() {
      return atkPos_;
    }

    // required .UnitPos defPos = 11;
    public static final int DEFPOS_FIELD_NUMBER = 11;
    private com.hawk.game.protocol.BattleCfg.UnitPos defPos_;
    /**
     * <code>required .UnitPos defPos = 11;</code>
     *
     * <pre>
     * 防方开始位置
     * </pre>
     */
    public boolean hasDefPos() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .UnitPos defPos = 11;</code>
     *
     * <pre>
     * 防方开始位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getDefPos() {
      return defPos_;
    }
    /**
     * <code>required .UnitPos defPos = 11;</code>
     *
     * <pre>
     * 防方开始位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getDefPosOrBuilder() {
      return defPos_;
    }

    // optional .UnitPos warPos = 12;
    public static final int WARPOS_FIELD_NUMBER = 12;
    private com.hawk.game.protocol.BattleCfg.UnitPos warPos_;
    /**
     * <code>optional .UnitPos warPos = 12;</code>
     *
     * <pre>
     * 地图交战中心位置	
     * </pre>
     */
    public boolean hasWarPos() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .UnitPos warPos = 12;</code>
     *
     * <pre>
     * 地图交战中心位置	
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getWarPos() {
      return warPos_;
    }
    /**
     * <code>optional .UnitPos warPos = 12;</code>
     *
     * <pre>
     * 地图交战中心位置	
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getWarPosOrBuilder() {
      return warPos_;
    }

    // optional int32 hoverTime = 13;
    public static final int HOVERTIME_FIELD_NUMBER = 13;
    private int hoverTime_;
    /**
     * <code>optional int32 hoverTime = 13;</code>
     *
     * <pre>
     * 盘旋时间
     * </pre>
     */
    public boolean hasHoverTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 hoverTime = 13;</code>
     *
     * <pre>
     * 盘旋时间
     * </pre>
     */
    public int getHoverTime() {
      return hoverTime_;
    }

    // optional int32 maxFindStep = 14;
    public static final int MAXFINDSTEP_FIELD_NUMBER = 14;
    private int maxFindStep_;
    /**
     * <code>optional int32 maxFindStep = 14;</code>
     *
     * <pre>
     * A*寻路最大步数
     * </pre>
     */
    public boolean hasMaxFindStep() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 maxFindStep = 14;</code>
     *
     * <pre>
     * A*寻路最大步数
     * </pre>
     */
    public int getMaxFindStep() {
      return maxFindStep_;
    }

    // optional int32 crawlFindMode = 15;
    public static final int CRAWLFINDMODE_FIELD_NUMBER = 15;
    private int crawlFindMode_;
    /**
     * <code>optional int32 crawlFindMode = 15;</code>
     *
     * <pre>
     * 爬虫寻路模式, 1: RTS, 2: CR
     * </pre>
     */
    public boolean hasCrawlFindMode() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 crawlFindMode = 15;</code>
     *
     * <pre>
     * 爬虫寻路模式, 1: RTS, 2: CR
     * </pre>
     */
    public int getCrawlFindMode() {
      return crawlFindMode_;
    }

    // repeated int32 datas = 20;
    public static final int DATAS_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> datas_;
    /**
     * <code>repeated int32 datas = 20;</code>
     *
     * <pre>
     * 地图阻挡信息
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDatasList() {
      return datas_;
    }
    /**
     * <code>repeated int32 datas = 20;</code>
     *
     * <pre>
     * 地图阻挡信息
     * </pre>
     */
    public int getDatasCount() {
      return datas_.size();
    }
    /**
     * <code>repeated int32 datas = 20;</code>
     *
     * <pre>
     * 地图阻挡信息
     * </pre>
     */
    public int getDatas(int index) {
      return datas_.get(index);
    }

    // repeated .UnitPos navmeshes = 21;
    public static final int NAVMESHES_FIELD_NUMBER = 21;
    private java.util.List<com.hawk.game.protocol.BattleCfg.UnitPos> navmeshes_;
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.UnitPos> getNavmeshesList() {
      return navmeshes_;
    }
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
        getNavmeshesOrBuilderList() {
      return navmeshes_;
    }
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    public int getNavmeshesCount() {
      return navmeshes_.size();
    }
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getNavmeshes(int index) {
      return navmeshes_.get(index);
    }
    /**
     * <code>repeated .UnitPos navmeshes = 21;</code>
     *
     * <pre>
     * 地图导航网格
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getNavmeshesOrBuilder(
        int index) {
      return navmeshes_.get(index);
    }

    private void initFields() {
      id_ = 0;
      width_ = 0;
      height_ = 0;
      tileWidth_ = 0;
      tileHeight_ = 0;
      atkPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      defPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      warPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      hoverTime_ = 0;
      maxFindStep_ = 0;
      crawlFindMode_ = 0;
      datas_ = java.util.Collections.emptyList();
      navmeshes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTileWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTileHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAtkPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAtkPos().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDefPos().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasWarPos()) {
        if (!getWarPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getNavmeshesCount(); i++) {
        if (!getNavmeshes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, tileWidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, tileHeight_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, atkPos_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(11, defPos_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(12, warPos_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(13, hoverTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(14, maxFindStep_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(15, crawlFindMode_);
      }
      for (int i = 0; i < datas_.size(); i++) {
        output.writeInt32(20, datas_.get(i));
      }
      for (int i = 0; i < navmeshes_.size(); i++) {
        output.writeMessage(21, navmeshes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, tileWidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, tileHeight_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, atkPos_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, defPos_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, warPos_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, hoverTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, maxFindStep_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, crawlFindMode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < datas_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(datas_.get(i));
        }
        size += dataSize;
        size += 2 * getDatasList().size();
      }
      for (int i = 0; i < navmeshes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, navmeshes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMapCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BFMapCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BFMapCfg}
     *
     * <pre>
     * 战场地图配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BFMapCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMapCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMapCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BFMapCfg.class, com.hawk.game.protocol.BattleCfg.BFMapCfg.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BFMapCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAtkPosFieldBuilder();
          getDefPosFieldBuilder();
          getWarPosFieldBuilder();
          getNavmeshesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tileWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        tileHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (atkPosBuilder_ == null) {
          atkPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          atkPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (defPosBuilder_ == null) {
          defPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          defPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (warPosBuilder_ == null) {
          warPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          warPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        hoverTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        maxFindStep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        crawlFindMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        datas_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        if (navmeshesBuilder_ == null) {
          navmeshes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          navmeshesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMapCfg_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BFMapCfg getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BFMapCfg.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BFMapCfg build() {
        com.hawk.game.protocol.BattleCfg.BFMapCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BFMapCfg buildPartial() {
        com.hawk.game.protocol.BattleCfg.BFMapCfg result = new com.hawk.game.protocol.BattleCfg.BFMapCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tileWidth_ = tileWidth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tileHeight_ = tileHeight_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (atkPosBuilder_ == null) {
          result.atkPos_ = atkPos_;
        } else {
          result.atkPos_ = atkPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (defPosBuilder_ == null) {
          result.defPos_ = defPos_;
        } else {
          result.defPos_ = defPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (warPosBuilder_ == null) {
          result.warPos_ = warPos_;
        } else {
          result.warPos_ = warPosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.hoverTime_ = hoverTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.maxFindStep_ = maxFindStep_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.crawlFindMode_ = crawlFindMode_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          datas_ = java.util.Collections.unmodifiableList(datas_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.datas_ = datas_;
        if (navmeshesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            navmeshes_ = java.util.Collections.unmodifiableList(navmeshes_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.navmeshes_ = navmeshes_;
        } else {
          result.navmeshes_ = navmeshesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BFMapCfg) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BFMapCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BFMapCfg other) {
        if (other == com.hawk.game.protocol.BattleCfg.BFMapCfg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasTileWidth()) {
          setTileWidth(other.getTileWidth());
        }
        if (other.hasTileHeight()) {
          setTileHeight(other.getTileHeight());
        }
        if (other.hasAtkPos()) {
          mergeAtkPos(other.getAtkPos());
        }
        if (other.hasDefPos()) {
          mergeDefPos(other.getDefPos());
        }
        if (other.hasWarPos()) {
          mergeWarPos(other.getWarPos());
        }
        if (other.hasHoverTime()) {
          setHoverTime(other.getHoverTime());
        }
        if (other.hasMaxFindStep()) {
          setMaxFindStep(other.getMaxFindStep());
        }
        if (other.hasCrawlFindMode()) {
          setCrawlFindMode(other.getCrawlFindMode());
        }
        if (!other.datas_.isEmpty()) {
          if (datas_.isEmpty()) {
            datas_ = other.datas_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureDatasIsMutable();
            datas_.addAll(other.datas_);
          }
          onChanged();
        }
        if (navmeshesBuilder_ == null) {
          if (!other.navmeshes_.isEmpty()) {
            if (navmeshes_.isEmpty()) {
              navmeshes_ = other.navmeshes_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureNavmeshesIsMutable();
              navmeshes_.addAll(other.navmeshes_);
            }
            onChanged();
          }
        } else {
          if (!other.navmeshes_.isEmpty()) {
            if (navmeshesBuilder_.isEmpty()) {
              navmeshesBuilder_.dispose();
              navmeshesBuilder_ = null;
              navmeshes_ = other.navmeshes_;
              bitField0_ = (bitField0_ & ~0x00001000);
              navmeshesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNavmeshesFieldBuilder() : null;
            } else {
              navmeshesBuilder_.addAllMessages(other.navmeshes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        if (!hasTileWidth()) {
          
          return false;
        }
        if (!hasTileHeight()) {
          
          return false;
        }
        if (!hasAtkPos()) {
          
          return false;
        }
        if (!hasDefPos()) {
          
          return false;
        }
        if (!getAtkPos().isInitialized()) {
          
          return false;
        }
        if (!getDefPos().isInitialized()) {
          
          return false;
        }
        if (hasWarPos()) {
          if (!getWarPos().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getNavmeshesCount(); i++) {
          if (!getNavmeshes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BFMapCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BFMapCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 地图ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 地图ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 地图ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 地图ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 width = 2;
      private int width_ ;
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       * 地图宽
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       * 地图宽
       * </pre>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       * 地图宽
       * </pre>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 width = 2;</code>
       *
       * <pre>
       * 地图宽
       * </pre>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        onChanged();
        return this;
      }

      // required int32 height = 3;
      private int height_ ;
      /**
       * <code>required int32 height = 3;</code>
       *
       * <pre>
       * 地图高
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 height = 3;</code>
       *
       * <pre>
       * 地图高
       * </pre>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 3;</code>
       *
       * <pre>
       * 地图高
       * </pre>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 height = 3;</code>
       *
       * <pre>
       * 地图高
       * </pre>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        onChanged();
        return this;
      }

      // required int32 tileWidth = 4;
      private int tileWidth_ ;
      /**
       * <code>required int32 tileWidth = 4;</code>
       *
       * <pre>
       * 地图格子宽
       * </pre>
       */
      public boolean hasTileWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 tileWidth = 4;</code>
       *
       * <pre>
       * 地图格子宽
       * </pre>
       */
      public int getTileWidth() {
        return tileWidth_;
      }
      /**
       * <code>required int32 tileWidth = 4;</code>
       *
       * <pre>
       * 地图格子宽
       * </pre>
       */
      public Builder setTileWidth(int value) {
        bitField0_ |= 0x00000008;
        tileWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 tileWidth = 4;</code>
       *
       * <pre>
       * 地图格子宽
       * </pre>
       */
      public Builder clearTileWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tileWidth_ = 0;
        onChanged();
        return this;
      }

      // required int32 tileHeight = 5;
      private int tileHeight_ ;
      /**
       * <code>required int32 tileHeight = 5;</code>
       *
       * <pre>
       * 地图格子高
       * </pre>
       */
      public boolean hasTileHeight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 tileHeight = 5;</code>
       *
       * <pre>
       * 地图格子高
       * </pre>
       */
      public int getTileHeight() {
        return tileHeight_;
      }
      /**
       * <code>required int32 tileHeight = 5;</code>
       *
       * <pre>
       * 地图格子高
       * </pre>
       */
      public Builder setTileHeight(int value) {
        bitField0_ |= 0x00000010;
        tileHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 tileHeight = 5;</code>
       *
       * <pre>
       * 地图格子高
       * </pre>
       */
      public Builder clearTileHeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tileHeight_ = 0;
        onChanged();
        return this;
      }

      // required .UnitPos atkPos = 10;
      private com.hawk.game.protocol.BattleCfg.UnitPos atkPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> atkPosBuilder_;
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public boolean hasAtkPos() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getAtkPos() {
        if (atkPosBuilder_ == null) {
          return atkPos_;
        } else {
          return atkPosBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public Builder setAtkPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (atkPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          atkPos_ = value;
          onChanged();
        } else {
          atkPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public Builder setAtkPos(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (atkPosBuilder_ == null) {
          atkPos_ = builderForValue.build();
          onChanged();
        } else {
          atkPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public Builder mergeAtkPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (atkPosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              atkPos_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            atkPos_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(atkPos_).mergeFrom(value).buildPartial();
          } else {
            atkPos_ = value;
          }
          onChanged();
        } else {
          atkPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public Builder clearAtkPos() {
        if (atkPosBuilder_ == null) {
          atkPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          atkPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getAtkPosBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getAtkPosFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getAtkPosOrBuilder() {
        if (atkPosBuilder_ != null) {
          return atkPosBuilder_.getMessageOrBuilder();
        } else {
          return atkPos_;
        }
      }
      /**
       * <code>required .UnitPos atkPos = 10;</code>
       *
       * <pre>
       * 攻方开始位置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getAtkPosFieldBuilder() {
        if (atkPosBuilder_ == null) {
          atkPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  atkPos_,
                  getParentForChildren(),
                  isClean());
          atkPos_ = null;
        }
        return atkPosBuilder_;
      }

      // required .UnitPos defPos = 11;
      private com.hawk.game.protocol.BattleCfg.UnitPos defPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> defPosBuilder_;
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public boolean hasDefPos() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getDefPos() {
        if (defPosBuilder_ == null) {
          return defPos_;
        } else {
          return defPosBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public Builder setDefPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (defPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defPos_ = value;
          onChanged();
        } else {
          defPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public Builder setDefPos(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (defPosBuilder_ == null) {
          defPos_ = builderForValue.build();
          onChanged();
        } else {
          defPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public Builder mergeDefPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (defPosBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              defPos_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            defPos_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(defPos_).mergeFrom(value).buildPartial();
          } else {
            defPos_ = value;
          }
          onChanged();
        } else {
          defPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public Builder clearDefPos() {
        if (defPosBuilder_ == null) {
          defPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          defPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getDefPosBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getDefPosFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getDefPosOrBuilder() {
        if (defPosBuilder_ != null) {
          return defPosBuilder_.getMessageOrBuilder();
        } else {
          return defPos_;
        }
      }
      /**
       * <code>required .UnitPos defPos = 11;</code>
       *
       * <pre>
       * 防方开始位置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getDefPosFieldBuilder() {
        if (defPosBuilder_ == null) {
          defPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  defPos_,
                  getParentForChildren(),
                  isClean());
          defPos_ = null;
        }
        return defPosBuilder_;
      }

      // optional .UnitPos warPos = 12;
      private com.hawk.game.protocol.BattleCfg.UnitPos warPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> warPosBuilder_;
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public boolean hasWarPos() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getWarPos() {
        if (warPosBuilder_ == null) {
          return warPos_;
        } else {
          return warPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public Builder setWarPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (warPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          warPos_ = value;
          onChanged();
        } else {
          warPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public Builder setWarPos(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (warPosBuilder_ == null) {
          warPos_ = builderForValue.build();
          onChanged();
        } else {
          warPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public Builder mergeWarPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (warPosBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              warPos_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            warPos_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(warPos_).mergeFrom(value).buildPartial();
          } else {
            warPos_ = value;
          }
          onChanged();
        } else {
          warPosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public Builder clearWarPos() {
        if (warPosBuilder_ == null) {
          warPos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          warPosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getWarPosBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getWarPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getWarPosOrBuilder() {
        if (warPosBuilder_ != null) {
          return warPosBuilder_.getMessageOrBuilder();
        } else {
          return warPos_;
        }
      }
      /**
       * <code>optional .UnitPos warPos = 12;</code>
       *
       * <pre>
       * 地图交战中心位置	
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getWarPosFieldBuilder() {
        if (warPosBuilder_ == null) {
          warPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  warPos_,
                  getParentForChildren(),
                  isClean());
          warPos_ = null;
        }
        return warPosBuilder_;
      }

      // optional int32 hoverTime = 13;
      private int hoverTime_ ;
      /**
       * <code>optional int32 hoverTime = 13;</code>
       *
       * <pre>
       * 盘旋时间
       * </pre>
       */
      public boolean hasHoverTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 hoverTime = 13;</code>
       *
       * <pre>
       * 盘旋时间
       * </pre>
       */
      public int getHoverTime() {
        return hoverTime_;
      }
      /**
       * <code>optional int32 hoverTime = 13;</code>
       *
       * <pre>
       * 盘旋时间
       * </pre>
       */
      public Builder setHoverTime(int value) {
        bitField0_ |= 0x00000100;
        hoverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hoverTime = 13;</code>
       *
       * <pre>
       * 盘旋时间
       * </pre>
       */
      public Builder clearHoverTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hoverTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxFindStep = 14;
      private int maxFindStep_ ;
      /**
       * <code>optional int32 maxFindStep = 14;</code>
       *
       * <pre>
       * A*寻路最大步数
       * </pre>
       */
      public boolean hasMaxFindStep() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 maxFindStep = 14;</code>
       *
       * <pre>
       * A*寻路最大步数
       * </pre>
       */
      public int getMaxFindStep() {
        return maxFindStep_;
      }
      /**
       * <code>optional int32 maxFindStep = 14;</code>
       *
       * <pre>
       * A*寻路最大步数
       * </pre>
       */
      public Builder setMaxFindStep(int value) {
        bitField0_ |= 0x00000200;
        maxFindStep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxFindStep = 14;</code>
       *
       * <pre>
       * A*寻路最大步数
       * </pre>
       */
      public Builder clearMaxFindStep() {
        bitField0_ = (bitField0_ & ~0x00000200);
        maxFindStep_ = 0;
        onChanged();
        return this;
      }

      // optional int32 crawlFindMode = 15;
      private int crawlFindMode_ ;
      /**
       * <code>optional int32 crawlFindMode = 15;</code>
       *
       * <pre>
       * 爬虫寻路模式, 1: RTS, 2: CR
       * </pre>
       */
      public boolean hasCrawlFindMode() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 crawlFindMode = 15;</code>
       *
       * <pre>
       * 爬虫寻路模式, 1: RTS, 2: CR
       * </pre>
       */
      public int getCrawlFindMode() {
        return crawlFindMode_;
      }
      /**
       * <code>optional int32 crawlFindMode = 15;</code>
       *
       * <pre>
       * 爬虫寻路模式, 1: RTS, 2: CR
       * </pre>
       */
      public Builder setCrawlFindMode(int value) {
        bitField0_ |= 0x00000400;
        crawlFindMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crawlFindMode = 15;</code>
       *
       * <pre>
       * 爬虫寻路模式, 1: RTS, 2: CR
       * </pre>
       */
      public Builder clearCrawlFindMode() {
        bitField0_ = (bitField0_ & ~0x00000400);
        crawlFindMode_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 datas = 20;
      private java.util.List<java.lang.Integer> datas_ = java.util.Collections.emptyList();
      private void ensureDatasIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          datas_ = new java.util.ArrayList<java.lang.Integer>(datas_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDatasList() {
        return java.util.Collections.unmodifiableList(datas_);
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public int getDatasCount() {
        return datas_.size();
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public int getDatas(int index) {
        return datas_.get(index);
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public Builder setDatas(
          int index, int value) {
        ensureDatasIsMutable();
        datas_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public Builder addDatas(int value) {
        ensureDatasIsMutable();
        datas_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public Builder addAllDatas(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDatasIsMutable();
        super.addAll(values, datas_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 datas = 20;</code>
       *
       * <pre>
       * 地图阻挡信息
       * </pre>
       */
      public Builder clearDatas() {
        datas_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated .UnitPos navmeshes = 21;
      private java.util.List<com.hawk.game.protocol.BattleCfg.UnitPos> navmeshes_ =
        java.util.Collections.emptyList();
      private void ensureNavmeshesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          navmeshes_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.UnitPos>(navmeshes_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> navmeshesBuilder_;

      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.UnitPos> getNavmeshesList() {
        if (navmeshesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(navmeshes_);
        } else {
          return navmeshesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public int getNavmeshesCount() {
        if (navmeshesBuilder_ == null) {
          return navmeshes_.size();
        } else {
          return navmeshesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getNavmeshes(int index) {
        if (navmeshesBuilder_ == null) {
          return navmeshes_.get(index);
        } else {
          return navmeshesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder setNavmeshes(
          int index, com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (navmeshesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNavmeshesIsMutable();
          navmeshes_.set(index, value);
          onChanged();
        } else {
          navmeshesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder setNavmeshes(
          int index, com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (navmeshesBuilder_ == null) {
          ensureNavmeshesIsMutable();
          navmeshes_.set(index, builderForValue.build());
          onChanged();
        } else {
          navmeshesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder addNavmeshes(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (navmeshesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNavmeshesIsMutable();
          navmeshes_.add(value);
          onChanged();
        } else {
          navmeshesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder addNavmeshes(
          int index, com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (navmeshesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNavmeshesIsMutable();
          navmeshes_.add(index, value);
          onChanged();
        } else {
          navmeshesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder addNavmeshes(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (navmeshesBuilder_ == null) {
          ensureNavmeshesIsMutable();
          navmeshes_.add(builderForValue.build());
          onChanged();
        } else {
          navmeshesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder addNavmeshes(
          int index, com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (navmeshesBuilder_ == null) {
          ensureNavmeshesIsMutable();
          navmeshes_.add(index, builderForValue.build());
          onChanged();
        } else {
          navmeshesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder addAllNavmeshes(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.UnitPos> values) {
        if (navmeshesBuilder_ == null) {
          ensureNavmeshesIsMutable();
          super.addAll(values, navmeshes_);
          onChanged();
        } else {
          navmeshesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder clearNavmeshes() {
        if (navmeshesBuilder_ == null) {
          navmeshes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          navmeshesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public Builder removeNavmeshes(int index) {
        if (navmeshesBuilder_ == null) {
          ensureNavmeshesIsMutable();
          navmeshes_.remove(index);
          onChanged();
        } else {
          navmeshesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getNavmeshesBuilder(
          int index) {
        return getNavmeshesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getNavmeshesOrBuilder(
          int index) {
        if (navmeshesBuilder_ == null) {
          return navmeshes_.get(index);  } else {
          return navmeshesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
           getNavmeshesOrBuilderList() {
        if (navmeshesBuilder_ != null) {
          return navmeshesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(navmeshes_);
        }
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder addNavmeshesBuilder() {
        return getNavmeshesFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance());
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder addNavmeshesBuilder(
          int index) {
        return getNavmeshesFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance());
      }
      /**
       * <code>repeated .UnitPos navmeshes = 21;</code>
       *
       * <pre>
       * 地图导航网格
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.UnitPos.Builder> 
           getNavmeshesBuilderList() {
        return getNavmeshesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getNavmeshesFieldBuilder() {
        if (navmeshesBuilder_ == null) {
          navmeshesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  navmeshes_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          navmeshes_ = null;
        }
        return navmeshesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BFMapCfg)
    }

    static {
      defaultInstance = new BFMapCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BFMapCfg)
  }

  public interface BFMissionCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 关卡ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 关卡ID
     * </pre>
     */
    int getId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡type @see MissionType
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡type @see MissionType
     * </pre>
     */
    int getType();

    // required int32 mapId = 3;
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     * 使用地图ID
     * </pre>
     */
    boolean hasMapId();
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     * 使用地图ID
     * </pre>
     */
    int getMapId();

    // required int32 timeLimit = 4;
    /**
     * <code>required int32 timeLimit = 4;</code>
     *
     * <pre>
     * 最长时间
     * </pre>
     */
    boolean hasTimeLimit();
    /**
     * <code>required int32 timeLimit = 4;</code>
     *
     * <pre>
     * 最长时间
     * </pre>
     */
    int getTimeLimit();

    // required int32 atkWarningY = 6;
    /**
     * <code>required int32 atkWarningY = 6;</code>
     *
     * <pre>
     * 攻方警戒线
     * </pre>
     */
    boolean hasAtkWarningY();
    /**
     * <code>required int32 atkWarningY = 6;</code>
     *
     * <pre>
     * 攻方警戒线
     * </pre>
     */
    int getAtkWarningY();

    // required int32 defWarningY = 7;
    /**
     * <code>required int32 defWarningY = 7;</code>
     *
     * <pre>
     * 防方警戒线
     * </pre>
     */
    boolean hasDefWarningY();
    /**
     * <code>required int32 defWarningY = 7;</code>
     *
     * <pre>
     * 防方警戒线
     * </pre>
     */
    int getDefWarningY();

    // repeated int32 atkTargetItems = 11;
    /**
     * <code>repeated int32 atkTargetItems = 11;</code>
     *
     * <pre>
     * 攻方需要保护的目标单元列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getAtkTargetItemsList();
    /**
     * <code>repeated int32 atkTargetItems = 11;</code>
     *
     * <pre>
     * 攻方需要保护的目标单元列表
     * </pre>
     */
    int getAtkTargetItemsCount();
    /**
     * <code>repeated int32 atkTargetItems = 11;</code>
     *
     * <pre>
     * 攻方需要保护的目标单元列表
     * </pre>
     */
    int getAtkTargetItems(int index);

    // repeated int32 defTargetItems = 12;
    /**
     * <code>repeated int32 defTargetItems = 12;</code>
     *
     * <pre>
     * 防方需要保护的目标单元列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getDefTargetItemsList();
    /**
     * <code>repeated int32 defTargetItems = 12;</code>
     *
     * <pre>
     * 防方需要保护的目标单元列表
     * </pre>
     */
    int getDefTargetItemsCount();
    /**
     * <code>repeated int32 defTargetItems = 12;</code>
     *
     * <pre>
     * 防方需要保护的目标单元列表
     * </pre>
     */
    int getDefTargetItems(int index);

    // repeated .MissionUnit atkUnits = 13;
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> 
        getAtkUnitsList();
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.MissionUnit getAtkUnits(int index);
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    int getAtkUnitsCount();
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
        getAtkUnitsOrBuilderList();
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder getAtkUnitsOrBuilder(
        int index);

    // repeated .MissionUnit defUnits = 14;
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> 
        getDefUnitsList();
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.MissionUnit getDefUnits(int index);
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    int getDefUnitsCount();
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
        getDefUnitsOrBuilderList();
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder getDefUnitsOrBuilder(
        int index);

    // repeated .DeployRange deployRangeList = 15;
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.DeployRange> 
        getDeployRangeListList();
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.DeployRange getDeployRangeList(int index);
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    int getDeployRangeListCount();
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder> 
        getDeployRangeListOrBuilderList();
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder getDeployRangeListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BFMissionCfg}
   *
   * <pre>
   * 关卡配置
   * </pre>
   */
  public static final class BFMissionCfg extends
      com.google.protobuf.GeneratedMessage
      implements BFMissionCfgOrBuilder {
    // Use BFMissionCfg.newBuilder() to construct.
    private BFMissionCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BFMissionCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BFMissionCfg defaultInstance;
    public static BFMissionCfg getDefaultInstance() {
      return defaultInstance;
    }

    public BFMissionCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BFMissionCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mapId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeLimit_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              atkWarningY_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              defWarningY_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                atkTargetItems_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              atkTargetItems_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                atkTargetItems_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                atkTargetItems_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                defTargetItems_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              defTargetItems_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                defTargetItems_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                defTargetItems_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                atkUnits_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.MissionUnit>();
                mutable_bitField0_ |= 0x00000100;
              }
              atkUnits_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.MissionUnit.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                defUnits_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.MissionUnit>();
                mutable_bitField0_ |= 0x00000200;
              }
              defUnits_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.MissionUnit.PARSER, extensionRegistry));
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                deployRangeList_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.DeployRange>();
                mutable_bitField0_ |= 0x00000400;
              }
              deployRangeList_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.DeployRange.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          atkTargetItems_ = java.util.Collections.unmodifiableList(atkTargetItems_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          defTargetItems_ = java.util.Collections.unmodifiableList(defTargetItems_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          atkUnits_ = java.util.Collections.unmodifiableList(atkUnits_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          defUnits_ = java.util.Collections.unmodifiableList(defUnits_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          deployRangeList_ = java.util.Collections.unmodifiableList(deployRangeList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFMissionCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFMissionCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BFMissionCfg.class, com.hawk.game.protocol.BattleCfg.BFMissionCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<BFMissionCfg> PARSER =
        new com.google.protobuf.AbstractParser<BFMissionCfg>() {
      public BFMissionCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BFMissionCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BFMissionCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 关卡ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 关卡ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡type @see MissionType
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 关卡type @see MissionType
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 mapId = 3;
    public static final int MAPID_FIELD_NUMBER = 3;
    private int mapId_;
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     * 使用地图ID
     * </pre>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 mapId = 3;</code>
     *
     * <pre>
     * 使用地图ID
     * </pre>
     */
    public int getMapId() {
      return mapId_;
    }

    // required int32 timeLimit = 4;
    public static final int TIMELIMIT_FIELD_NUMBER = 4;
    private int timeLimit_;
    /**
     * <code>required int32 timeLimit = 4;</code>
     *
     * <pre>
     * 最长时间
     * </pre>
     */
    public boolean hasTimeLimit() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 timeLimit = 4;</code>
     *
     * <pre>
     * 最长时间
     * </pre>
     */
    public int getTimeLimit() {
      return timeLimit_;
    }

    // required int32 atkWarningY = 6;
    public static final int ATKWARNINGY_FIELD_NUMBER = 6;
    private int atkWarningY_;
    /**
     * <code>required int32 atkWarningY = 6;</code>
     *
     * <pre>
     * 攻方警戒线
     * </pre>
     */
    public boolean hasAtkWarningY() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 atkWarningY = 6;</code>
     *
     * <pre>
     * 攻方警戒线
     * </pre>
     */
    public int getAtkWarningY() {
      return atkWarningY_;
    }

    // required int32 defWarningY = 7;
    public static final int DEFWARNINGY_FIELD_NUMBER = 7;
    private int defWarningY_;
    /**
     * <code>required int32 defWarningY = 7;</code>
     *
     * <pre>
     * 防方警戒线
     * </pre>
     */
    public boolean hasDefWarningY() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 defWarningY = 7;</code>
     *
     * <pre>
     * 防方警戒线
     * </pre>
     */
    public int getDefWarningY() {
      return defWarningY_;
    }

    // repeated int32 atkTargetItems = 11;
    public static final int ATKTARGETITEMS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> atkTargetItems_;
    /**
     * <code>repeated int32 atkTargetItems = 11;</code>
     *
     * <pre>
     * 攻方需要保护的目标单元列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAtkTargetItemsList() {
      return atkTargetItems_;
    }
    /**
     * <code>repeated int32 atkTargetItems = 11;</code>
     *
     * <pre>
     * 攻方需要保护的目标单元列表
     * </pre>
     */
    public int getAtkTargetItemsCount() {
      return atkTargetItems_.size();
    }
    /**
     * <code>repeated int32 atkTargetItems = 11;</code>
     *
     * <pre>
     * 攻方需要保护的目标单元列表
     * </pre>
     */
    public int getAtkTargetItems(int index) {
      return atkTargetItems_.get(index);
    }

    // repeated int32 defTargetItems = 12;
    public static final int DEFTARGETITEMS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> defTargetItems_;
    /**
     * <code>repeated int32 defTargetItems = 12;</code>
     *
     * <pre>
     * 防方需要保护的目标单元列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDefTargetItemsList() {
      return defTargetItems_;
    }
    /**
     * <code>repeated int32 defTargetItems = 12;</code>
     *
     * <pre>
     * 防方需要保护的目标单元列表
     * </pre>
     */
    public int getDefTargetItemsCount() {
      return defTargetItems_.size();
    }
    /**
     * <code>repeated int32 defTargetItems = 12;</code>
     *
     * <pre>
     * 防方需要保护的目标单元列表
     * </pre>
     */
    public int getDefTargetItems(int index) {
      return defTargetItems_.get(index);
    }

    // repeated .MissionUnit atkUnits = 13;
    public static final int ATKUNITS_FIELD_NUMBER = 13;
    private java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> atkUnits_;
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> getAtkUnitsList() {
      return atkUnits_;
    }
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
        getAtkUnitsOrBuilderList() {
      return atkUnits_;
    }
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    public int getAtkUnitsCount() {
      return atkUnits_.size();
    }
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.MissionUnit getAtkUnits(int index) {
      return atkUnits_.get(index);
    }
    /**
     * <code>repeated .MissionUnit atkUnits = 13;</code>
     *
     * <pre>
     * 战斗单元（攻方）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder getAtkUnitsOrBuilder(
        int index) {
      return atkUnits_.get(index);
    }

    // repeated .MissionUnit defUnits = 14;
    public static final int DEFUNITS_FIELD_NUMBER = 14;
    private java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> defUnits_;
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> getDefUnitsList() {
      return defUnits_;
    }
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
        getDefUnitsOrBuilderList() {
      return defUnits_;
    }
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    public int getDefUnitsCount() {
      return defUnits_.size();
    }
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.MissionUnit getDefUnits(int index) {
      return defUnits_.get(index);
    }
    /**
     * <code>repeated .MissionUnit defUnits = 14;</code>
     *
     * <pre>
     * 战斗单元（防方）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder getDefUnitsOrBuilder(
        int index) {
      return defUnits_.get(index);
    }

    // repeated .DeployRange deployRangeList = 15;
    public static final int DEPLOYRANGELIST_FIELD_NUMBER = 15;
    private java.util.List<com.hawk.game.protocol.BattleCfg.DeployRange> deployRangeList_;
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.DeployRange> getDeployRangeListList() {
      return deployRangeList_;
    }
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder> 
        getDeployRangeListOrBuilderList() {
      return deployRangeList_;
    }
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    public int getDeployRangeListCount() {
      return deployRangeList_.size();
    }
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.DeployRange getDeployRangeList(int index) {
      return deployRangeList_.get(index);
    }
    /**
     * <code>repeated .DeployRange deployRangeList = 15;</code>
     *
     * <pre>
     * 可布阵坐标范围
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder getDeployRangeListOrBuilder(
        int index) {
      return deployRangeList_.get(index);
    }

    private void initFields() {
      id_ = 0;
      type_ = 0;
      mapId_ = 0;
      timeLimit_ = 0;
      atkWarningY_ = 0;
      defWarningY_ = 0;
      atkTargetItems_ = java.util.Collections.emptyList();
      defTargetItems_ = java.util.Collections.emptyList();
      atkUnits_ = java.util.Collections.emptyList();
      defUnits_ = java.util.Collections.emptyList();
      deployRangeList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeLimit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAtkWarningY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefWarningY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAtkUnitsCount(); i++) {
        if (!getAtkUnits(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDefUnitsCount(); i++) {
        if (!getDefUnits(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDeployRangeListCount(); i++) {
        if (!getDeployRangeList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, mapId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, timeLimit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, atkWarningY_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, defWarningY_);
      }
      for (int i = 0; i < atkTargetItems_.size(); i++) {
        output.writeInt32(11, atkTargetItems_.get(i));
      }
      for (int i = 0; i < defTargetItems_.size(); i++) {
        output.writeInt32(12, defTargetItems_.get(i));
      }
      for (int i = 0; i < atkUnits_.size(); i++) {
        output.writeMessage(13, atkUnits_.get(i));
      }
      for (int i = 0; i < defUnits_.size(); i++) {
        output.writeMessage(14, defUnits_.get(i));
      }
      for (int i = 0; i < deployRangeList_.size(); i++) {
        output.writeMessage(15, deployRangeList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mapId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, timeLimit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, atkWarningY_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, defWarningY_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < atkTargetItems_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(atkTargetItems_.get(i));
        }
        size += dataSize;
        size += 1 * getAtkTargetItemsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < defTargetItems_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(defTargetItems_.get(i));
        }
        size += dataSize;
        size += 1 * getDefTargetItemsList().size();
      }
      for (int i = 0; i < atkUnits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, atkUnits_.get(i));
      }
      for (int i = 0; i < defUnits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, defUnits_.get(i));
      }
      for (int i = 0; i < deployRangeList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, deployRangeList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMissionCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BFMissionCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BFMissionCfg}
     *
     * <pre>
     * 关卡配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BFMissionCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMissionCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMissionCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BFMissionCfg.class, com.hawk.game.protocol.BattleCfg.BFMissionCfg.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BFMissionCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAtkUnitsFieldBuilder();
          getDefUnitsFieldBuilder();
          getDeployRangeListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mapId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        atkWarningY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        defWarningY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        atkTargetItems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        defTargetItems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (atkUnitsBuilder_ == null) {
          atkUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          atkUnitsBuilder_.clear();
        }
        if (defUnitsBuilder_ == null) {
          defUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          defUnitsBuilder_.clear();
        }
        if (deployRangeListBuilder_ == null) {
          deployRangeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          deployRangeListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMissionCfg_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BFMissionCfg getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BFMissionCfg.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BFMissionCfg build() {
        com.hawk.game.protocol.BattleCfg.BFMissionCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BFMissionCfg buildPartial() {
        com.hawk.game.protocol.BattleCfg.BFMissionCfg result = new com.hawk.game.protocol.BattleCfg.BFMissionCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeLimit_ = timeLimit_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.atkWarningY_ = atkWarningY_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.defWarningY_ = defWarningY_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          atkTargetItems_ = java.util.Collections.unmodifiableList(atkTargetItems_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.atkTargetItems_ = atkTargetItems_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          defTargetItems_ = java.util.Collections.unmodifiableList(defTargetItems_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.defTargetItems_ = defTargetItems_;
        if (atkUnitsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            atkUnits_ = java.util.Collections.unmodifiableList(atkUnits_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.atkUnits_ = atkUnits_;
        } else {
          result.atkUnits_ = atkUnitsBuilder_.build();
        }
        if (defUnitsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            defUnits_ = java.util.Collections.unmodifiableList(defUnits_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.defUnits_ = defUnits_;
        } else {
          result.defUnits_ = defUnitsBuilder_.build();
        }
        if (deployRangeListBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            deployRangeList_ = java.util.Collections.unmodifiableList(deployRangeList_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.deployRangeList_ = deployRangeList_;
        } else {
          result.deployRangeList_ = deployRangeListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BFMissionCfg) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BFMissionCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BFMissionCfg other) {
        if (other == com.hawk.game.protocol.BattleCfg.BFMissionCfg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasMapId()) {
          setMapId(other.getMapId());
        }
        if (other.hasTimeLimit()) {
          setTimeLimit(other.getTimeLimit());
        }
        if (other.hasAtkWarningY()) {
          setAtkWarningY(other.getAtkWarningY());
        }
        if (other.hasDefWarningY()) {
          setDefWarningY(other.getDefWarningY());
        }
        if (!other.atkTargetItems_.isEmpty()) {
          if (atkTargetItems_.isEmpty()) {
            atkTargetItems_ = other.atkTargetItems_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAtkTargetItemsIsMutable();
            atkTargetItems_.addAll(other.atkTargetItems_);
          }
          onChanged();
        }
        if (!other.defTargetItems_.isEmpty()) {
          if (defTargetItems_.isEmpty()) {
            defTargetItems_ = other.defTargetItems_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureDefTargetItemsIsMutable();
            defTargetItems_.addAll(other.defTargetItems_);
          }
          onChanged();
        }
        if (atkUnitsBuilder_ == null) {
          if (!other.atkUnits_.isEmpty()) {
            if (atkUnits_.isEmpty()) {
              atkUnits_ = other.atkUnits_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureAtkUnitsIsMutable();
              atkUnits_.addAll(other.atkUnits_);
            }
            onChanged();
          }
        } else {
          if (!other.atkUnits_.isEmpty()) {
            if (atkUnitsBuilder_.isEmpty()) {
              atkUnitsBuilder_.dispose();
              atkUnitsBuilder_ = null;
              atkUnits_ = other.atkUnits_;
              bitField0_ = (bitField0_ & ~0x00000100);
              atkUnitsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAtkUnitsFieldBuilder() : null;
            } else {
              atkUnitsBuilder_.addAllMessages(other.atkUnits_);
            }
          }
        }
        if (defUnitsBuilder_ == null) {
          if (!other.defUnits_.isEmpty()) {
            if (defUnits_.isEmpty()) {
              defUnits_ = other.defUnits_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureDefUnitsIsMutable();
              defUnits_.addAll(other.defUnits_);
            }
            onChanged();
          }
        } else {
          if (!other.defUnits_.isEmpty()) {
            if (defUnitsBuilder_.isEmpty()) {
              defUnitsBuilder_.dispose();
              defUnitsBuilder_ = null;
              defUnits_ = other.defUnits_;
              bitField0_ = (bitField0_ & ~0x00000200);
              defUnitsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDefUnitsFieldBuilder() : null;
            } else {
              defUnitsBuilder_.addAllMessages(other.defUnits_);
            }
          }
        }
        if (deployRangeListBuilder_ == null) {
          if (!other.deployRangeList_.isEmpty()) {
            if (deployRangeList_.isEmpty()) {
              deployRangeList_ = other.deployRangeList_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureDeployRangeListIsMutable();
              deployRangeList_.addAll(other.deployRangeList_);
            }
            onChanged();
          }
        } else {
          if (!other.deployRangeList_.isEmpty()) {
            if (deployRangeListBuilder_.isEmpty()) {
              deployRangeListBuilder_.dispose();
              deployRangeListBuilder_ = null;
              deployRangeList_ = other.deployRangeList_;
              bitField0_ = (bitField0_ & ~0x00000400);
              deployRangeListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDeployRangeListFieldBuilder() : null;
            } else {
              deployRangeListBuilder_.addAllMessages(other.deployRangeList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasMapId()) {
          
          return false;
        }
        if (!hasTimeLimit()) {
          
          return false;
        }
        if (!hasAtkWarningY()) {
          
          return false;
        }
        if (!hasDefWarningY()) {
          
          return false;
        }
        for (int i = 0; i < getAtkUnitsCount(); i++) {
          if (!getAtkUnits(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDefUnitsCount(); i++) {
          if (!getDefUnits(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDeployRangeListCount(); i++) {
          if (!getDeployRangeList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BFMissionCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BFMissionCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 关卡ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 关卡ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 关卡ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 关卡ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡type @see MissionType
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡type @see MissionType
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡type @see MissionType
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 关卡type @see MissionType
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 mapId = 3;
      private int mapId_ ;
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       * 使用地图ID
       * </pre>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       * 使用地图ID
       * </pre>
       */
      public int getMapId() {
        return mapId_;
      }
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       * 使用地图ID
       * </pre>
       */
      public Builder setMapId(int value) {
        bitField0_ |= 0x00000004;
        mapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mapId = 3;</code>
       *
       * <pre>
       * 使用地图ID
       * </pre>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mapId_ = 0;
        onChanged();
        return this;
      }

      // required int32 timeLimit = 4;
      private int timeLimit_ ;
      /**
       * <code>required int32 timeLimit = 4;</code>
       *
       * <pre>
       * 最长时间
       * </pre>
       */
      public boolean hasTimeLimit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 timeLimit = 4;</code>
       *
       * <pre>
       * 最长时间
       * </pre>
       */
      public int getTimeLimit() {
        return timeLimit_;
      }
      /**
       * <code>required int32 timeLimit = 4;</code>
       *
       * <pre>
       * 最长时间
       * </pre>
       */
      public Builder setTimeLimit(int value) {
        bitField0_ |= 0x00000008;
        timeLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timeLimit = 4;</code>
       *
       * <pre>
       * 最长时间
       * </pre>
       */
      public Builder clearTimeLimit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeLimit_ = 0;
        onChanged();
        return this;
      }

      // required int32 atkWarningY = 6;
      private int atkWarningY_ ;
      /**
       * <code>required int32 atkWarningY = 6;</code>
       *
       * <pre>
       * 攻方警戒线
       * </pre>
       */
      public boolean hasAtkWarningY() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 atkWarningY = 6;</code>
       *
       * <pre>
       * 攻方警戒线
       * </pre>
       */
      public int getAtkWarningY() {
        return atkWarningY_;
      }
      /**
       * <code>required int32 atkWarningY = 6;</code>
       *
       * <pre>
       * 攻方警戒线
       * </pre>
       */
      public Builder setAtkWarningY(int value) {
        bitField0_ |= 0x00000010;
        atkWarningY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 atkWarningY = 6;</code>
       *
       * <pre>
       * 攻方警戒线
       * </pre>
       */
      public Builder clearAtkWarningY() {
        bitField0_ = (bitField0_ & ~0x00000010);
        atkWarningY_ = 0;
        onChanged();
        return this;
      }

      // required int32 defWarningY = 7;
      private int defWarningY_ ;
      /**
       * <code>required int32 defWarningY = 7;</code>
       *
       * <pre>
       * 防方警戒线
       * </pre>
       */
      public boolean hasDefWarningY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 defWarningY = 7;</code>
       *
       * <pre>
       * 防方警戒线
       * </pre>
       */
      public int getDefWarningY() {
        return defWarningY_;
      }
      /**
       * <code>required int32 defWarningY = 7;</code>
       *
       * <pre>
       * 防方警戒线
       * </pre>
       */
      public Builder setDefWarningY(int value) {
        bitField0_ |= 0x00000020;
        defWarningY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 defWarningY = 7;</code>
       *
       * <pre>
       * 防方警戒线
       * </pre>
       */
      public Builder clearDefWarningY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        defWarningY_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 atkTargetItems = 11;
      private java.util.List<java.lang.Integer> atkTargetItems_ = java.util.Collections.emptyList();
      private void ensureAtkTargetItemsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          atkTargetItems_ = new java.util.ArrayList<java.lang.Integer>(atkTargetItems_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAtkTargetItemsList() {
        return java.util.Collections.unmodifiableList(atkTargetItems_);
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public int getAtkTargetItemsCount() {
        return atkTargetItems_.size();
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public int getAtkTargetItems(int index) {
        return atkTargetItems_.get(index);
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public Builder setAtkTargetItems(
          int index, int value) {
        ensureAtkTargetItemsIsMutable();
        atkTargetItems_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public Builder addAtkTargetItems(int value) {
        ensureAtkTargetItemsIsMutable();
        atkTargetItems_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public Builder addAllAtkTargetItems(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAtkTargetItemsIsMutable();
        super.addAll(values, atkTargetItems_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 atkTargetItems = 11;</code>
       *
       * <pre>
       * 攻方需要保护的目标单元列表
       * </pre>
       */
      public Builder clearAtkTargetItems() {
        atkTargetItems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 defTargetItems = 12;
      private java.util.List<java.lang.Integer> defTargetItems_ = java.util.Collections.emptyList();
      private void ensureDefTargetItemsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          defTargetItems_ = new java.util.ArrayList<java.lang.Integer>(defTargetItems_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDefTargetItemsList() {
        return java.util.Collections.unmodifiableList(defTargetItems_);
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public int getDefTargetItemsCount() {
        return defTargetItems_.size();
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public int getDefTargetItems(int index) {
        return defTargetItems_.get(index);
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public Builder setDefTargetItems(
          int index, int value) {
        ensureDefTargetItemsIsMutable();
        defTargetItems_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public Builder addDefTargetItems(int value) {
        ensureDefTargetItemsIsMutable();
        defTargetItems_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public Builder addAllDefTargetItems(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDefTargetItemsIsMutable();
        super.addAll(values, defTargetItems_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 defTargetItems = 12;</code>
       *
       * <pre>
       * 防方需要保护的目标单元列表
       * </pre>
       */
      public Builder clearDefTargetItems() {
        defTargetItems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated .MissionUnit atkUnits = 13;
      private java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> atkUnits_ =
        java.util.Collections.emptyList();
      private void ensureAtkUnitsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          atkUnits_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.MissionUnit>(atkUnits_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.MissionUnit, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder, com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> atkUnitsBuilder_;

      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> getAtkUnitsList() {
        if (atkUnitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(atkUnits_);
        } else {
          return atkUnitsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public int getAtkUnitsCount() {
        if (atkUnitsBuilder_ == null) {
          return atkUnits_.size();
        } else {
          return atkUnitsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit getAtkUnits(int index) {
        if (atkUnitsBuilder_ == null) {
          return atkUnits_.get(index);
        } else {
          return atkUnitsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder setAtkUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit value) {
        if (atkUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtkUnitsIsMutable();
          atkUnits_.set(index, value);
          onChanged();
        } else {
          atkUnitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder setAtkUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder builderForValue) {
        if (atkUnitsBuilder_ == null) {
          ensureAtkUnitsIsMutable();
          atkUnits_.set(index, builderForValue.build());
          onChanged();
        } else {
          atkUnitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder addAtkUnits(com.hawk.game.protocol.BattleCfg.MissionUnit value) {
        if (atkUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtkUnitsIsMutable();
          atkUnits_.add(value);
          onChanged();
        } else {
          atkUnitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder addAtkUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit value) {
        if (atkUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtkUnitsIsMutable();
          atkUnits_.add(index, value);
          onChanged();
        } else {
          atkUnitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder addAtkUnits(
          com.hawk.game.protocol.BattleCfg.MissionUnit.Builder builderForValue) {
        if (atkUnitsBuilder_ == null) {
          ensureAtkUnitsIsMutable();
          atkUnits_.add(builderForValue.build());
          onChanged();
        } else {
          atkUnitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder addAtkUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder builderForValue) {
        if (atkUnitsBuilder_ == null) {
          ensureAtkUnitsIsMutable();
          atkUnits_.add(index, builderForValue.build());
          onChanged();
        } else {
          atkUnitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder addAllAtkUnits(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.MissionUnit> values) {
        if (atkUnitsBuilder_ == null) {
          ensureAtkUnitsIsMutable();
          super.addAll(values, atkUnits_);
          onChanged();
        } else {
          atkUnitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder clearAtkUnits() {
        if (atkUnitsBuilder_ == null) {
          atkUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          atkUnitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public Builder removeAtkUnits(int index) {
        if (atkUnitsBuilder_ == null) {
          ensureAtkUnitsIsMutable();
          atkUnits_.remove(index);
          onChanged();
        } else {
          atkUnitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit.Builder getAtkUnitsBuilder(
          int index) {
        return getAtkUnitsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder getAtkUnitsOrBuilder(
          int index) {
        if (atkUnitsBuilder_ == null) {
          return atkUnits_.get(index);  } else {
          return atkUnitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
           getAtkUnitsOrBuilderList() {
        if (atkUnitsBuilder_ != null) {
          return atkUnitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(atkUnits_);
        }
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit.Builder addAtkUnitsBuilder() {
        return getAtkUnitsFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.MissionUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit.Builder addAtkUnitsBuilder(
          int index) {
        return getAtkUnitsFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.MissionUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionUnit atkUnits = 13;</code>
       *
       * <pre>
       * 战斗单元（攻方）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit.Builder> 
           getAtkUnitsBuilderList() {
        return getAtkUnitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.MissionUnit, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder, com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
          getAtkUnitsFieldBuilder() {
        if (atkUnitsBuilder_ == null) {
          atkUnitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.MissionUnit, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder, com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder>(
                  atkUnits_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          atkUnits_ = null;
        }
        return atkUnitsBuilder_;
      }

      // repeated .MissionUnit defUnits = 14;
      private java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> defUnits_ =
        java.util.Collections.emptyList();
      private void ensureDefUnitsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          defUnits_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.MissionUnit>(defUnits_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.MissionUnit, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder, com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> defUnitsBuilder_;

      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit> getDefUnitsList() {
        if (defUnitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(defUnits_);
        } else {
          return defUnitsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public int getDefUnitsCount() {
        if (defUnitsBuilder_ == null) {
          return defUnits_.size();
        } else {
          return defUnitsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit getDefUnits(int index) {
        if (defUnitsBuilder_ == null) {
          return defUnits_.get(index);
        } else {
          return defUnitsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder setDefUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit value) {
        if (defUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefUnitsIsMutable();
          defUnits_.set(index, value);
          onChanged();
        } else {
          defUnitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder setDefUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder builderForValue) {
        if (defUnitsBuilder_ == null) {
          ensureDefUnitsIsMutable();
          defUnits_.set(index, builderForValue.build());
          onChanged();
        } else {
          defUnitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder addDefUnits(com.hawk.game.protocol.BattleCfg.MissionUnit value) {
        if (defUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefUnitsIsMutable();
          defUnits_.add(value);
          onChanged();
        } else {
          defUnitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder addDefUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit value) {
        if (defUnitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDefUnitsIsMutable();
          defUnits_.add(index, value);
          onChanged();
        } else {
          defUnitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder addDefUnits(
          com.hawk.game.protocol.BattleCfg.MissionUnit.Builder builderForValue) {
        if (defUnitsBuilder_ == null) {
          ensureDefUnitsIsMutable();
          defUnits_.add(builderForValue.build());
          onChanged();
        } else {
          defUnitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder addDefUnits(
          int index, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder builderForValue) {
        if (defUnitsBuilder_ == null) {
          ensureDefUnitsIsMutable();
          defUnits_.add(index, builderForValue.build());
          onChanged();
        } else {
          defUnitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder addAllDefUnits(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.MissionUnit> values) {
        if (defUnitsBuilder_ == null) {
          ensureDefUnitsIsMutable();
          super.addAll(values, defUnits_);
          onChanged();
        } else {
          defUnitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder clearDefUnits() {
        if (defUnitsBuilder_ == null) {
          defUnits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          defUnitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public Builder removeDefUnits(int index) {
        if (defUnitsBuilder_ == null) {
          ensureDefUnitsIsMutable();
          defUnits_.remove(index);
          onChanged();
        } else {
          defUnitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit.Builder getDefUnitsBuilder(
          int index) {
        return getDefUnitsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder getDefUnitsOrBuilder(
          int index) {
        if (defUnitsBuilder_ == null) {
          return defUnits_.get(index);  } else {
          return defUnitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
           getDefUnitsOrBuilderList() {
        if (defUnitsBuilder_ != null) {
          return defUnitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(defUnits_);
        }
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit.Builder addDefUnitsBuilder() {
        return getDefUnitsFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.MissionUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.MissionUnit.Builder addDefUnitsBuilder(
          int index) {
        return getDefUnitsFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.MissionUnit.getDefaultInstance());
      }
      /**
       * <code>repeated .MissionUnit defUnits = 14;</code>
       *
       * <pre>
       * 战斗单元（防方）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.MissionUnit.Builder> 
           getDefUnitsBuilderList() {
        return getDefUnitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.MissionUnit, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder, com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder> 
          getDefUnitsFieldBuilder() {
        if (defUnitsBuilder_ == null) {
          defUnitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.MissionUnit, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder, com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder>(
                  defUnits_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          defUnits_ = null;
        }
        return defUnitsBuilder_;
      }

      // repeated .DeployRange deployRangeList = 15;
      private java.util.List<com.hawk.game.protocol.BattleCfg.DeployRange> deployRangeList_ =
        java.util.Collections.emptyList();
      private void ensureDeployRangeListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          deployRangeList_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.DeployRange>(deployRangeList_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.DeployRange, com.hawk.game.protocol.BattleCfg.DeployRange.Builder, com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder> deployRangeListBuilder_;

      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.DeployRange> getDeployRangeListList() {
        if (deployRangeListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deployRangeList_);
        } else {
          return deployRangeListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public int getDeployRangeListCount() {
        if (deployRangeListBuilder_ == null) {
          return deployRangeList_.size();
        } else {
          return deployRangeListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.DeployRange getDeployRangeList(int index) {
        if (deployRangeListBuilder_ == null) {
          return deployRangeList_.get(index);
        } else {
          return deployRangeListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder setDeployRangeList(
          int index, com.hawk.game.protocol.BattleCfg.DeployRange value) {
        if (deployRangeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeployRangeListIsMutable();
          deployRangeList_.set(index, value);
          onChanged();
        } else {
          deployRangeListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder setDeployRangeList(
          int index, com.hawk.game.protocol.BattleCfg.DeployRange.Builder builderForValue) {
        if (deployRangeListBuilder_ == null) {
          ensureDeployRangeListIsMutable();
          deployRangeList_.set(index, builderForValue.build());
          onChanged();
        } else {
          deployRangeListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder addDeployRangeList(com.hawk.game.protocol.BattleCfg.DeployRange value) {
        if (deployRangeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeployRangeListIsMutable();
          deployRangeList_.add(value);
          onChanged();
        } else {
          deployRangeListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder addDeployRangeList(
          int index, com.hawk.game.protocol.BattleCfg.DeployRange value) {
        if (deployRangeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeployRangeListIsMutable();
          deployRangeList_.add(index, value);
          onChanged();
        } else {
          deployRangeListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder addDeployRangeList(
          com.hawk.game.protocol.BattleCfg.DeployRange.Builder builderForValue) {
        if (deployRangeListBuilder_ == null) {
          ensureDeployRangeListIsMutable();
          deployRangeList_.add(builderForValue.build());
          onChanged();
        } else {
          deployRangeListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder addDeployRangeList(
          int index, com.hawk.game.protocol.BattleCfg.DeployRange.Builder builderForValue) {
        if (deployRangeListBuilder_ == null) {
          ensureDeployRangeListIsMutable();
          deployRangeList_.add(index, builderForValue.build());
          onChanged();
        } else {
          deployRangeListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder addAllDeployRangeList(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.DeployRange> values) {
        if (deployRangeListBuilder_ == null) {
          ensureDeployRangeListIsMutable();
          super.addAll(values, deployRangeList_);
          onChanged();
        } else {
          deployRangeListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder clearDeployRangeList() {
        if (deployRangeListBuilder_ == null) {
          deployRangeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          deployRangeListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public Builder removeDeployRangeList(int index) {
        if (deployRangeListBuilder_ == null) {
          ensureDeployRangeListIsMutable();
          deployRangeList_.remove(index);
          onChanged();
        } else {
          deployRangeListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.DeployRange.Builder getDeployRangeListBuilder(
          int index) {
        return getDeployRangeListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder getDeployRangeListOrBuilder(
          int index) {
        if (deployRangeListBuilder_ == null) {
          return deployRangeList_.get(index);  } else {
          return deployRangeListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder> 
           getDeployRangeListOrBuilderList() {
        if (deployRangeListBuilder_ != null) {
          return deployRangeListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deployRangeList_);
        }
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.DeployRange.Builder addDeployRangeListBuilder() {
        return getDeployRangeListFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.DeployRange.getDefaultInstance());
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.DeployRange.Builder addDeployRangeListBuilder(
          int index) {
        return getDeployRangeListFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.DeployRange.getDefaultInstance());
      }
      /**
       * <code>repeated .DeployRange deployRangeList = 15;</code>
       *
       * <pre>
       * 可布阵坐标范围
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.DeployRange.Builder> 
           getDeployRangeListBuilderList() {
        return getDeployRangeListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.DeployRange, com.hawk.game.protocol.BattleCfg.DeployRange.Builder, com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder> 
          getDeployRangeListFieldBuilder() {
        if (deployRangeListBuilder_ == null) {
          deployRangeListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.DeployRange, com.hawk.game.protocol.BattleCfg.DeployRange.Builder, com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder>(
                  deployRangeList_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          deployRangeList_ = null;
        }
        return deployRangeListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BFMissionCfg)
    }

    static {
      defaultInstance = new BFMissionCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BFMissionCfg)
  }

  public interface DeployRangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 reserved = 1;
    /**
     * <code>required int32 reserved = 1;</code>
     *
     * <pre>
     * unused, but must has this field, the protobuf can work fine.
     * </pre>
     */
    boolean hasReserved();
    /**
     * <code>required int32 reserved = 1;</code>
     *
     * <pre>
     * unused, but must has this field, the protobuf can work fine.
     * </pre>
     */
    int getReserved();

    // required .UnitPos rmin = 2;
    /**
     * <code>required .UnitPos rmin = 2;</code>
     *
     * <pre>
     * 最小坐标, 命名rmin避免C++编译冲突
     * </pre>
     */
    boolean hasRmin();
    /**
     * <code>required .UnitPos rmin = 2;</code>
     *
     * <pre>
     * 最小坐标, 命名rmin避免C++编译冲突
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getRmin();
    /**
     * <code>required .UnitPos rmin = 2;</code>
     *
     * <pre>
     * 最小坐标, 命名rmin避免C++编译冲突
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getRminOrBuilder();

    // required .UnitPos rmax = 3;
    /**
     * <code>required .UnitPos rmax = 3;</code>
     *
     * <pre>
     * 最大坐标, 命名rmax避免C++编译冲突
     * </pre>
     */
    boolean hasRmax();
    /**
     * <code>required .UnitPos rmax = 3;</code>
     *
     * <pre>
     * 最大坐标, 命名rmax避免C++编译冲突
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getRmax();
    /**
     * <code>required .UnitPos rmax = 3;</code>
     *
     * <pre>
     * 最大坐标, 命名rmax避免C++编译冲突
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getRmaxOrBuilder();
  }
  /**
   * Protobuf type {@code DeployRange}
   *
   * <pre>
   * 战场可布阵范围
   * </pre>
   */
  public static final class DeployRange extends
      com.google.protobuf.GeneratedMessage
      implements DeployRangeOrBuilder {
    // Use DeployRange.newBuilder() to construct.
    private DeployRange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeployRange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeployRange defaultInstance;
    public static DeployRange getDefaultInstance() {
      return defaultInstance;
    }

    public DeployRange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeployRange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              reserved_ = input.readInt32();
              break;
            }
            case 18: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = rmin_.toBuilder();
              }
              rmin_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rmin_);
                rmin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = rmax_.toBuilder();
              }
              rmax_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rmax_);
                rmax_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_DeployRange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_DeployRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.DeployRange.class, com.hawk.game.protocol.BattleCfg.DeployRange.Builder.class);
    }

    public static com.google.protobuf.Parser<DeployRange> PARSER =
        new com.google.protobuf.AbstractParser<DeployRange>() {
      public DeployRange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeployRange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeployRange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 reserved = 1;
    public static final int RESERVED_FIELD_NUMBER = 1;
    private int reserved_;
    /**
     * <code>required int32 reserved = 1;</code>
     *
     * <pre>
     * unused, but must has this field, the protobuf can work fine.
     * </pre>
     */
    public boolean hasReserved() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 reserved = 1;</code>
     *
     * <pre>
     * unused, but must has this field, the protobuf can work fine.
     * </pre>
     */
    public int getReserved() {
      return reserved_;
    }

    // required .UnitPos rmin = 2;
    public static final int RMIN_FIELD_NUMBER = 2;
    private com.hawk.game.protocol.BattleCfg.UnitPos rmin_;
    /**
     * <code>required .UnitPos rmin = 2;</code>
     *
     * <pre>
     * 最小坐标, 命名rmin避免C++编译冲突
     * </pre>
     */
    public boolean hasRmin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .UnitPos rmin = 2;</code>
     *
     * <pre>
     * 最小坐标, 命名rmin避免C++编译冲突
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getRmin() {
      return rmin_;
    }
    /**
     * <code>required .UnitPos rmin = 2;</code>
     *
     * <pre>
     * 最小坐标, 命名rmin避免C++编译冲突
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getRminOrBuilder() {
      return rmin_;
    }

    // required .UnitPos rmax = 3;
    public static final int RMAX_FIELD_NUMBER = 3;
    private com.hawk.game.protocol.BattleCfg.UnitPos rmax_;
    /**
     * <code>required .UnitPos rmax = 3;</code>
     *
     * <pre>
     * 最大坐标, 命名rmax避免C++编译冲突
     * </pre>
     */
    public boolean hasRmax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .UnitPos rmax = 3;</code>
     *
     * <pre>
     * 最大坐标, 命名rmax避免C++编译冲突
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getRmax() {
      return rmax_;
    }
    /**
     * <code>required .UnitPos rmax = 3;</code>
     *
     * <pre>
     * 最大坐标, 命名rmax避免C++编译冲突
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getRmaxOrBuilder() {
      return rmax_;
    }

    private void initFields() {
      reserved_ = 0;
      rmin_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      rmax_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReserved()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRmin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRmax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRmin().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRmax().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, reserved_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, rmin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, rmax_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, reserved_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rmin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, rmax_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.DeployRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.DeployRange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeployRange}
     *
     * <pre>
     * 战场可布阵范围
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.DeployRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_DeployRange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_DeployRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.DeployRange.class, com.hawk.game.protocol.BattleCfg.DeployRange.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.DeployRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRminFieldBuilder();
          getRmaxFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reserved_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rminBuilder_ == null) {
          rmin_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          rminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rmaxBuilder_ == null) {
          rmax_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          rmaxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_DeployRange_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.DeployRange getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.DeployRange.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.DeployRange build() {
        com.hawk.game.protocol.BattleCfg.DeployRange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.DeployRange buildPartial() {
        com.hawk.game.protocol.BattleCfg.DeployRange result = new com.hawk.game.protocol.BattleCfg.DeployRange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reserved_ = reserved_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rminBuilder_ == null) {
          result.rmin_ = rmin_;
        } else {
          result.rmin_ = rminBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (rmaxBuilder_ == null) {
          result.rmax_ = rmax_;
        } else {
          result.rmax_ = rmaxBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.DeployRange) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.DeployRange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.DeployRange other) {
        if (other == com.hawk.game.protocol.BattleCfg.DeployRange.getDefaultInstance()) return this;
        if (other.hasReserved()) {
          setReserved(other.getReserved());
        }
        if (other.hasRmin()) {
          mergeRmin(other.getRmin());
        }
        if (other.hasRmax()) {
          mergeRmax(other.getRmax());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReserved()) {
          
          return false;
        }
        if (!hasRmin()) {
          
          return false;
        }
        if (!hasRmax()) {
          
          return false;
        }
        if (!getRmin().isInitialized()) {
          
          return false;
        }
        if (!getRmax().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.DeployRange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.DeployRange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 reserved = 1;
      private int reserved_ ;
      /**
       * <code>required int32 reserved = 1;</code>
       *
       * <pre>
       * unused, but must has this field, the protobuf can work fine.
       * </pre>
       */
      public boolean hasReserved() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 reserved = 1;</code>
       *
       * <pre>
       * unused, but must has this field, the protobuf can work fine.
       * </pre>
       */
      public int getReserved() {
        return reserved_;
      }
      /**
       * <code>required int32 reserved = 1;</code>
       *
       * <pre>
       * unused, but must has this field, the protobuf can work fine.
       * </pre>
       */
      public Builder setReserved(int value) {
        bitField0_ |= 0x00000001;
        reserved_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 reserved = 1;</code>
       *
       * <pre>
       * unused, but must has this field, the protobuf can work fine.
       * </pre>
       */
      public Builder clearReserved() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reserved_ = 0;
        onChanged();
        return this;
      }

      // required .UnitPos rmin = 2;
      private com.hawk.game.protocol.BattleCfg.UnitPos rmin_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> rminBuilder_;
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public boolean hasRmin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getRmin() {
        if (rminBuilder_ == null) {
          return rmin_;
        } else {
          return rminBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public Builder setRmin(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (rminBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rmin_ = value;
          onChanged();
        } else {
          rminBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public Builder setRmin(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (rminBuilder_ == null) {
          rmin_ = builderForValue.build();
          onChanged();
        } else {
          rminBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public Builder mergeRmin(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (rminBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              rmin_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            rmin_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(rmin_).mergeFrom(value).buildPartial();
          } else {
            rmin_ = value;
          }
          onChanged();
        } else {
          rminBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public Builder clearRmin() {
        if (rminBuilder_ == null) {
          rmin_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          rminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getRminBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRminFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getRminOrBuilder() {
        if (rminBuilder_ != null) {
          return rminBuilder_.getMessageOrBuilder();
        } else {
          return rmin_;
        }
      }
      /**
       * <code>required .UnitPos rmin = 2;</code>
       *
       * <pre>
       * 最小坐标, 命名rmin避免C++编译冲突
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getRminFieldBuilder() {
        if (rminBuilder_ == null) {
          rminBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  rmin_,
                  getParentForChildren(),
                  isClean());
          rmin_ = null;
        }
        return rminBuilder_;
      }

      // required .UnitPos rmax = 3;
      private com.hawk.game.protocol.BattleCfg.UnitPos rmax_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> rmaxBuilder_;
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public boolean hasRmax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getRmax() {
        if (rmaxBuilder_ == null) {
          return rmax_;
        } else {
          return rmaxBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public Builder setRmax(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (rmaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rmax_ = value;
          onChanged();
        } else {
          rmaxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public Builder setRmax(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (rmaxBuilder_ == null) {
          rmax_ = builderForValue.build();
          onChanged();
        } else {
          rmaxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public Builder mergeRmax(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (rmaxBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rmax_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            rmax_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(rmax_).mergeFrom(value).buildPartial();
          } else {
            rmax_ = value;
          }
          onChanged();
        } else {
          rmaxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public Builder clearRmax() {
        if (rmaxBuilder_ == null) {
          rmax_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          rmaxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getRmaxBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRmaxFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getRmaxOrBuilder() {
        if (rmaxBuilder_ != null) {
          return rmaxBuilder_.getMessageOrBuilder();
        } else {
          return rmax_;
        }
      }
      /**
       * <code>required .UnitPos rmax = 3;</code>
       *
       * <pre>
       * 最大坐标, 命名rmax避免C++编译冲突
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getRmaxFieldBuilder() {
        if (rmaxBuilder_ == null) {
          rmaxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  rmax_,
                  getParentForChildren(),
                  isClean());
          rmax_ = null;
        }
        return rmaxBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DeployRange)
    }

    static {
      defaultInstance = new DeployRange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeployRange)
  }

  public interface MissionUnitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物配置ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物配置ID
     * </pre>
     */
    int getId();

    // required int32 objId = 2;
    /**
     * <code>required int32 objId = 2;</code>
     *
     * <pre>
     * 怪物实例ID
     * </pre>
     */
    boolean hasObjId();
    /**
     * <code>required int32 objId = 2;</code>
     *
     * <pre>
     * 怪物实例ID
     * </pre>
     */
    int getObjId();

    // required int32 groupId = 3;
    /**
     * <code>required int32 groupId = 3;</code>
     *
     * <pre>
     * 单位分组ID
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>required int32 groupId = 3;</code>
     *
     * <pre>
     * 单位分组ID
     * </pre>
     */
    int getGroupId();

    // required .UnitPos pos = 4;
    /**
     * <code>required .UnitPos pos = 4;</code>
     *
     * <pre>
     * pve战斗单元固定位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>required .UnitPos pos = 4;</code>
     *
     * <pre>
     * pve战斗单元固定位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPos getPos();
    /**
     * <code>required .UnitPos pos = 4;</code>
     *
     * <pre>
     * pve战斗单元固定位置
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getPosOrBuilder();

    // required int32 initDir = 5;
    /**
     * <code>required int32 initDir = 5;</code>
     *
     * <pre>
     * 战斗单元初始化角度0-15
     * </pre>
     */
    boolean hasInitDir();
    /**
     * <code>required int32 initDir = 5;</code>
     *
     * <pre>
     * 战斗单元初始化角度0-15
     * </pre>
     */
    int getInitDir();
  }
  /**
   * Protobuf type {@code MissionUnit}
   *
   * <pre>
   * 关卡怪物数据
   * </pre>
   */
  public static final class MissionUnit extends
      com.google.protobuf.GeneratedMessage
      implements MissionUnitOrBuilder {
    // Use MissionUnit.newBuilder() to construct.
    private MissionUnit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MissionUnit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MissionUnit defaultInstance;
    public static MissionUnit getDefaultInstance() {
      return defaultInstance;
    }

    public MissionUnit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MissionUnit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              objId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              groupId_ = input.readInt32();
              break;
            }
            case 34: {
              com.hawk.game.protocol.BattleCfg.UnitPos.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = pos_.toBuilder();
              }
              pos_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitPos.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pos_);
                pos_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              initDir_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_MissionUnit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_MissionUnit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.MissionUnit.class, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder.class);
    }

    public static com.google.protobuf.Parser<MissionUnit> PARSER =
        new com.google.protobuf.AbstractParser<MissionUnit>() {
      public MissionUnit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MissionUnit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MissionUnit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物配置ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物配置ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 objId = 2;
    public static final int OBJID_FIELD_NUMBER = 2;
    private int objId_;
    /**
     * <code>required int32 objId = 2;</code>
     *
     * <pre>
     * 怪物实例ID
     * </pre>
     */
    public boolean hasObjId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 objId = 2;</code>
     *
     * <pre>
     * 怪物实例ID
     * </pre>
     */
    public int getObjId() {
      return objId_;
    }

    // required int32 groupId = 3;
    public static final int GROUPID_FIELD_NUMBER = 3;
    private int groupId_;
    /**
     * <code>required int32 groupId = 3;</code>
     *
     * <pre>
     * 单位分组ID
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 groupId = 3;</code>
     *
     * <pre>
     * 单位分组ID
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // required .UnitPos pos = 4;
    public static final int POS_FIELD_NUMBER = 4;
    private com.hawk.game.protocol.BattleCfg.UnitPos pos_;
    /**
     * <code>required .UnitPos pos = 4;</code>
     *
     * <pre>
     * pve战斗单元固定位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .UnitPos pos = 4;</code>
     *
     * <pre>
     * pve战斗单元固定位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPos getPos() {
      return pos_;
    }
    /**
     * <code>required .UnitPos pos = 4;</code>
     *
     * <pre>
     * pve战斗单元固定位置
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getPosOrBuilder() {
      return pos_;
    }

    // required int32 initDir = 5;
    public static final int INITDIR_FIELD_NUMBER = 5;
    private int initDir_;
    /**
     * <code>required int32 initDir = 5;</code>
     *
     * <pre>
     * 战斗单元初始化角度0-15
     * </pre>
     */
    public boolean hasInitDir() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 initDir = 5;</code>
     *
     * <pre>
     * 战斗单元初始化角度0-15
     * </pre>
     */
    public int getInitDir() {
      return initDir_;
    }

    private void initFields() {
      id_ = 0;
      objId_ = 0;
      groupId_ = 0;
      pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      initDir_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObjId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInitDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPos().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, objId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, groupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, pos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, initDir_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, objId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, pos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, initDir_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.MissionUnit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.MissionUnit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MissionUnit}
     *
     * <pre>
     * 关卡怪物数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.MissionUnitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_MissionUnit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_MissionUnit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.MissionUnit.class, com.hawk.game.protocol.BattleCfg.MissionUnit.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.MissionUnit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        objId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (posBuilder_ == null) {
          pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
        } else {
          posBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        initDir_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_MissionUnit_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.MissionUnit getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.MissionUnit.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.MissionUnit build() {
        com.hawk.game.protocol.BattleCfg.MissionUnit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.MissionUnit buildPartial() {
        com.hawk.game.protocol.BattleCfg.MissionUnit result = new com.hawk.game.protocol.BattleCfg.MissionUnit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.objId_ = objId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (posBuilder_ == null) {
          result.pos_ = pos_;
        } else {
          result.pos_ = posBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.initDir_ = initDir_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.MissionUnit) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.MissionUnit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.MissionUnit other) {
        if (other == com.hawk.game.protocol.BattleCfg.MissionUnit.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasObjId()) {
          setObjId(other.getObjId());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasPos()) {
          mergePos(other.getPos());
        }
        if (other.hasInitDir()) {
          setInitDir(other.getInitDir());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasObjId()) {
          
          return false;
        }
        if (!hasGroupId()) {
          
          return false;
        }
        if (!hasPos()) {
          
          return false;
        }
        if (!hasInitDir()) {
          
          return false;
        }
        if (!getPos().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.MissionUnit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.MissionUnit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物配置ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物配置ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物配置ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物配置ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 objId = 2;
      private int objId_ ;
      /**
       * <code>required int32 objId = 2;</code>
       *
       * <pre>
       * 怪物实例ID
       * </pre>
       */
      public boolean hasObjId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 objId = 2;</code>
       *
       * <pre>
       * 怪物实例ID
       * </pre>
       */
      public int getObjId() {
        return objId_;
      }
      /**
       * <code>required int32 objId = 2;</code>
       *
       * <pre>
       * 怪物实例ID
       * </pre>
       */
      public Builder setObjId(int value) {
        bitField0_ |= 0x00000002;
        objId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 objId = 2;</code>
       *
       * <pre>
       * 怪物实例ID
       * </pre>
       */
      public Builder clearObjId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        objId_ = 0;
        onChanged();
        return this;
      }

      // required int32 groupId = 3;
      private int groupId_ ;
      /**
       * <code>required int32 groupId = 3;</code>
       *
       * <pre>
       * 单位分组ID
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 groupId = 3;</code>
       *
       * <pre>
       * 单位分组ID
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>required int32 groupId = 3;</code>
       *
       * <pre>
       * 单位分组ID
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000004;
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 groupId = 3;</code>
       *
       * <pre>
       * 单位分组ID
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        onChanged();
        return this;
      }

      // required .UnitPos pos = 4;
      private com.hawk.game.protocol.BattleCfg.UnitPos pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> posBuilder_;
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos getPos() {
        if (posBuilder_ == null) {
          return pos_;
        } else {
          return posBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public Builder setPos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (posBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pos_ = value;
          onChanged();
        } else {
          posBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public Builder setPos(
          com.hawk.game.protocol.BattleCfg.UnitPos.Builder builderForValue) {
        if (posBuilder_ == null) {
          pos_ = builderForValue.build();
          onChanged();
        } else {
          posBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public Builder mergePos(com.hawk.game.protocol.BattleCfg.UnitPos value) {
        if (posBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              pos_ != com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance()) {
            pos_ =
              com.hawk.game.protocol.BattleCfg.UnitPos.newBuilder(pos_).mergeFrom(value).buildPartial();
          } else {
            pos_ = value;
          }
          onChanged();
        } else {
          posBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public Builder clearPos() {
        if (posBuilder_ == null) {
          pos_ = com.hawk.game.protocol.BattleCfg.UnitPos.getDefaultInstance();
          onChanged();
        } else {
          posBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPos.Builder getPosBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPosFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder getPosOrBuilder() {
        if (posBuilder_ != null) {
          return posBuilder_.getMessageOrBuilder();
        } else {
          return pos_;
        }
      }
      /**
       * <code>required .UnitPos pos = 4;</code>
       *
       * <pre>
       * pve战斗单元固定位置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder> 
          getPosFieldBuilder() {
        if (posBuilder_ == null) {
          posBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitPos, com.hawk.game.protocol.BattleCfg.UnitPos.Builder, com.hawk.game.protocol.BattleCfg.UnitPosOrBuilder>(
                  pos_,
                  getParentForChildren(),
                  isClean());
          pos_ = null;
        }
        return posBuilder_;
      }

      // required int32 initDir = 5;
      private int initDir_ ;
      /**
       * <code>required int32 initDir = 5;</code>
       *
       * <pre>
       * 战斗单元初始化角度0-15
       * </pre>
       */
      public boolean hasInitDir() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 initDir = 5;</code>
       *
       * <pre>
       * 战斗单元初始化角度0-15
       * </pre>
       */
      public int getInitDir() {
        return initDir_;
      }
      /**
       * <code>required int32 initDir = 5;</code>
       *
       * <pre>
       * 战斗单元初始化角度0-15
       * </pre>
       */
      public Builder setInitDir(int value) {
        bitField0_ |= 0x00000010;
        initDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 initDir = 5;</code>
       *
       * <pre>
       * 战斗单元初始化角度0-15
       * </pre>
       */
      public Builder clearInitDir() {
        bitField0_ = (bitField0_ & ~0x00000010);
        initDir_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MissionUnit)
    }

    static {
      defaultInstance = new MissionUnit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MissionUnit)
  }

  public interface BFUnitCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 配置ID(普通兵种或者技能兵种的ID)
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 配置ID(普通兵种或者技能兵种的ID)
     * </pre>
     */
    int getId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 兵种类型, 参考UnitType
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 兵种类型, 参考UnitType
     * </pre>
     */
    int getType();

    // required .UnitSize size = 3;
    /**
     * <code>required .UnitSize size = 3;</code>
     *
     * <pre>
     * 战斗单元的占位大小
     * </pre>
     */
    boolean hasSize();
    /**
     * <code>required .UnitSize size = 3;</code>
     *
     * <pre>
     * 战斗单元的占位大小
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitSize getSize();
    /**
     * <code>required .UnitSize size = 3;</code>
     *
     * <pre>
     * 战斗单元的占位大小
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder getSizeOrBuilder();

    // required int32 posPrior = 4;
    /**
     * <code>required int32 posPrior = 4;</code>
     *
     * <pre>
     * 占位优先级
     * </pre>
     */
    boolean hasPosPrior();
    /**
     * <code>required int32 posPrior = 4;</code>
     *
     * <pre>
     * 占位优先级
     * </pre>
     */
    int getPosPrior();

    // required int32 viewRange = 5;
    /**
     * <code>required int32 viewRange = 5;</code>
     *
     * <pre>
     * 视野范围
     * </pre>
     */
    boolean hasViewRange();
    /**
     * <code>required int32 viewRange = 5;</code>
     *
     * <pre>
     * 视野范围
     * </pre>
     */
    int getViewRange();

    // required int32 trackRange = 6;
    /**
     * <code>required int32 trackRange = 6;</code>
     *
     * <pre>
     * 跟踪方位
     * </pre>
     */
    boolean hasTrackRange();
    /**
     * <code>required int32 trackRange = 6;</code>
     *
     * <pre>
     * 跟踪方位
     * </pre>
     */
    int getTrackRange();

    // required int32 idlePeriod = 10;
    /**
     * <code>required int32 idlePeriod = 10;</code>
     *
     * <pre>
     * 空闲等待
     * </pre>
     */
    boolean hasIdlePeriod();
    /**
     * <code>required int32 idlePeriod = 10;</code>
     *
     * <pre>
     * 空闲等待
     * </pre>
     */
    int getIdlePeriod();

    // required int32 movePeriod = 11;
    /**
     * <code>required int32 movePeriod = 11;</code>
     *
     * <pre>
     * 移动时间
     * </pre>
     */
    boolean hasMovePeriod();
    /**
     * <code>required int32 movePeriod = 11;</code>
     *
     * <pre>
     * 移动时间
     * </pre>
     */
    int getMovePeriod();

    // optional int32 turnPeriod = 12;
    /**
     * <code>optional int32 turnPeriod = 12;</code>
     *
     * <pre>
     * 转向时间
     * </pre>
     */
    boolean hasTurnPeriod();
    /**
     * <code>optional int32 turnPeriod = 12;</code>
     *
     * <pre>
     * 转向时间
     * </pre>
     */
    int getTurnPeriod();

    // optional int32 moveStep = 13;
    /**
     * <code>optional int32 moveStep = 13;</code>
     *
     * <pre>
     * 移动步长
     * </pre>
     */
    boolean hasMoveStep();
    /**
     * <code>optional int32 moveStep = 13;</code>
     *
     * <pre>
     * 移动步长
     * </pre>
     */
    int getMoveStep();

    // optional int32 freeFly = 14;
    /**
     * <code>optional int32 freeFly = 14;</code>
     *
     * <pre>
     * 自由飞行模式(直线移动模式)
     * </pre>
     */
    boolean hasFreeFly();
    /**
     * <code>optional int32 freeFly = 14;</code>
     *
     * <pre>
     * 自由飞行模式(直线移动模式)
     * </pre>
     */
    int getFreeFly();

    // repeated .SkillData skillDatas = 20;
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> 
        getSkillDatasList();
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index);
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    int getSkillDatasCount();
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
        getSkillDatasOrBuilderList();
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BFUnitCfg}
   *
   * <pre>
   * 战斗单元配置
   * </pre>
   */
  public static final class BFUnitCfg extends
      com.google.protobuf.GeneratedMessage
      implements BFUnitCfgOrBuilder {
    // Use BFUnitCfg.newBuilder() to construct.
    private BFUnitCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BFUnitCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BFUnitCfg defaultInstance;
    public static BFUnitCfg getDefaultInstance() {
      return defaultInstance;
    }

    public BFUnitCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BFUnitCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 26: {
              com.hawk.game.protocol.BattleCfg.UnitSize.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitSize.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              posPrior_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              viewRange_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              trackRange_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              idlePeriod_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              movePeriod_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              turnPeriod_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              moveStep_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              freeFly_ = input.readInt32();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                skillDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.SkillData>();
                mutable_bitField0_ |= 0x00000800;
              }
              skillDatas_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.SkillData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          skillDatas_ = java.util.Collections.unmodifiableList(skillDatas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFUnitCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFUnitCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BFUnitCfg.class, com.hawk.game.protocol.BattleCfg.BFUnitCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<BFUnitCfg> PARSER =
        new com.google.protobuf.AbstractParser<BFUnitCfg>() {
      public BFUnitCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BFUnitCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BFUnitCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 配置ID(普通兵种或者技能兵种的ID)
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 配置ID(普通兵种或者技能兵种的ID)
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 兵种类型, 参考UnitType
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * 兵种类型, 参考UnitType
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required .UnitSize size = 3;
    public static final int SIZE_FIELD_NUMBER = 3;
    private com.hawk.game.protocol.BattleCfg.UnitSize size_;
    /**
     * <code>required .UnitSize size = 3;</code>
     *
     * <pre>
     * 战斗单元的占位大小
     * </pre>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .UnitSize size = 3;</code>
     *
     * <pre>
     * 战斗单元的占位大小
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitSize getSize() {
      return size_;
    }
    /**
     * <code>required .UnitSize size = 3;</code>
     *
     * <pre>
     * 战斗单元的占位大小
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder getSizeOrBuilder() {
      return size_;
    }

    // required int32 posPrior = 4;
    public static final int POSPRIOR_FIELD_NUMBER = 4;
    private int posPrior_;
    /**
     * <code>required int32 posPrior = 4;</code>
     *
     * <pre>
     * 占位优先级
     * </pre>
     */
    public boolean hasPosPrior() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 posPrior = 4;</code>
     *
     * <pre>
     * 占位优先级
     * </pre>
     */
    public int getPosPrior() {
      return posPrior_;
    }

    // required int32 viewRange = 5;
    public static final int VIEWRANGE_FIELD_NUMBER = 5;
    private int viewRange_;
    /**
     * <code>required int32 viewRange = 5;</code>
     *
     * <pre>
     * 视野范围
     * </pre>
     */
    public boolean hasViewRange() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 viewRange = 5;</code>
     *
     * <pre>
     * 视野范围
     * </pre>
     */
    public int getViewRange() {
      return viewRange_;
    }

    // required int32 trackRange = 6;
    public static final int TRACKRANGE_FIELD_NUMBER = 6;
    private int trackRange_;
    /**
     * <code>required int32 trackRange = 6;</code>
     *
     * <pre>
     * 跟踪方位
     * </pre>
     */
    public boolean hasTrackRange() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 trackRange = 6;</code>
     *
     * <pre>
     * 跟踪方位
     * </pre>
     */
    public int getTrackRange() {
      return trackRange_;
    }

    // required int32 idlePeriod = 10;
    public static final int IDLEPERIOD_FIELD_NUMBER = 10;
    private int idlePeriod_;
    /**
     * <code>required int32 idlePeriod = 10;</code>
     *
     * <pre>
     * 空闲等待
     * </pre>
     */
    public boolean hasIdlePeriod() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 idlePeriod = 10;</code>
     *
     * <pre>
     * 空闲等待
     * </pre>
     */
    public int getIdlePeriod() {
      return idlePeriod_;
    }

    // required int32 movePeriod = 11;
    public static final int MOVEPERIOD_FIELD_NUMBER = 11;
    private int movePeriod_;
    /**
     * <code>required int32 movePeriod = 11;</code>
     *
     * <pre>
     * 移动时间
     * </pre>
     */
    public boolean hasMovePeriod() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 movePeriod = 11;</code>
     *
     * <pre>
     * 移动时间
     * </pre>
     */
    public int getMovePeriod() {
      return movePeriod_;
    }

    // optional int32 turnPeriod = 12;
    public static final int TURNPERIOD_FIELD_NUMBER = 12;
    private int turnPeriod_;
    /**
     * <code>optional int32 turnPeriod = 12;</code>
     *
     * <pre>
     * 转向时间
     * </pre>
     */
    public boolean hasTurnPeriod() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 turnPeriod = 12;</code>
     *
     * <pre>
     * 转向时间
     * </pre>
     */
    public int getTurnPeriod() {
      return turnPeriod_;
    }

    // optional int32 moveStep = 13;
    public static final int MOVESTEP_FIELD_NUMBER = 13;
    private int moveStep_;
    /**
     * <code>optional int32 moveStep = 13;</code>
     *
     * <pre>
     * 移动步长
     * </pre>
     */
    public boolean hasMoveStep() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 moveStep = 13;</code>
     *
     * <pre>
     * 移动步长
     * </pre>
     */
    public int getMoveStep() {
      return moveStep_;
    }

    // optional int32 freeFly = 14;
    public static final int FREEFLY_FIELD_NUMBER = 14;
    private int freeFly_;
    /**
     * <code>optional int32 freeFly = 14;</code>
     *
     * <pre>
     * 自由飞行模式(直线移动模式)
     * </pre>
     */
    public boolean hasFreeFly() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 freeFly = 14;</code>
     *
     * <pre>
     * 自由飞行模式(直线移动模式)
     * </pre>
     */
    public int getFreeFly() {
      return freeFly_;
    }

    // repeated .SkillData skillDatas = 20;
    public static final int SKILLDATAS_FIELD_NUMBER = 20;
    private java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> skillDatas_;
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> getSkillDatasList() {
      return skillDatas_;
    }
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
        getSkillDatasOrBuilderList() {
      return skillDatas_;
    }
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    public int getSkillDatasCount() {
      return skillDatas_.size();
    }
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index) {
      return skillDatas_.get(index);
    }
    /**
     * <code>repeated .SkillData skillDatas = 20;</code>
     *
     * <pre>
     * 兵种技能
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
        int index) {
      return skillDatas_.get(index);
    }

    private void initFields() {
      id_ = 0;
      type_ = 0;
      size_ = com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance();
      posPrior_ = 0;
      viewRange_ = 0;
      trackRange_ = 0;
      idlePeriod_ = 0;
      movePeriod_ = 0;
      turnPeriod_ = 0;
      moveStep_ = 0;
      freeFly_ = 0;
      skillDatas_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPosPrior()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasViewRange()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrackRange()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIdlePeriod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMovePeriod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSize().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSkillDatasCount(); i++) {
        if (!getSkillDatas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, posPrior_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, viewRange_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, trackRange_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, idlePeriod_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, movePeriod_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, turnPeriod_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, moveStep_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(14, freeFly_);
      }
      for (int i = 0; i < skillDatas_.size(); i++) {
        output.writeMessage(20, skillDatas_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, posPrior_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, viewRange_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, trackRange_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, idlePeriod_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, movePeriod_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, turnPeriod_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, moveStep_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, freeFly_);
      }
      for (int i = 0; i < skillDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, skillDatas_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFUnitCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BFUnitCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BFUnitCfg}
     *
     * <pre>
     * 战斗单元配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BFUnitCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFUnitCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFUnitCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BFUnitCfg.class, com.hawk.game.protocol.BattleCfg.BFUnitCfg.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BFUnitCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSizeFieldBuilder();
          getSkillDatasFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sizeBuilder_ == null) {
          size_ = com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance();
        } else {
          sizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        posPrior_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        viewRange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        trackRange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        idlePeriod_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        movePeriod_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        turnPeriod_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        moveStep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        freeFly_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (skillDatasBuilder_ == null) {
          skillDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          skillDatasBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFUnitCfg_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BFUnitCfg getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BFUnitCfg.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BFUnitCfg build() {
        com.hawk.game.protocol.BattleCfg.BFUnitCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BFUnitCfg buildPartial() {
        com.hawk.game.protocol.BattleCfg.BFUnitCfg result = new com.hawk.game.protocol.BattleCfg.BFUnitCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.posPrior_ = posPrior_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.viewRange_ = viewRange_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.trackRange_ = trackRange_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.idlePeriod_ = idlePeriod_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.movePeriod_ = movePeriod_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.turnPeriod_ = turnPeriod_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.moveStep_ = moveStep_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.freeFly_ = freeFly_;
        if (skillDatasBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            skillDatas_ = java.util.Collections.unmodifiableList(skillDatas_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.skillDatas_ = skillDatas_;
        } else {
          result.skillDatas_ = skillDatasBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BFUnitCfg) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BFUnitCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BFUnitCfg other) {
        if (other == com.hawk.game.protocol.BattleCfg.BFUnitCfg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasPosPrior()) {
          setPosPrior(other.getPosPrior());
        }
        if (other.hasViewRange()) {
          setViewRange(other.getViewRange());
        }
        if (other.hasTrackRange()) {
          setTrackRange(other.getTrackRange());
        }
        if (other.hasIdlePeriod()) {
          setIdlePeriod(other.getIdlePeriod());
        }
        if (other.hasMovePeriod()) {
          setMovePeriod(other.getMovePeriod());
        }
        if (other.hasTurnPeriod()) {
          setTurnPeriod(other.getTurnPeriod());
        }
        if (other.hasMoveStep()) {
          setMoveStep(other.getMoveStep());
        }
        if (other.hasFreeFly()) {
          setFreeFly(other.getFreeFly());
        }
        if (skillDatasBuilder_ == null) {
          if (!other.skillDatas_.isEmpty()) {
            if (skillDatas_.isEmpty()) {
              skillDatas_ = other.skillDatas_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureSkillDatasIsMutable();
              skillDatas_.addAll(other.skillDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.skillDatas_.isEmpty()) {
            if (skillDatasBuilder_.isEmpty()) {
              skillDatasBuilder_.dispose();
              skillDatasBuilder_ = null;
              skillDatas_ = other.skillDatas_;
              bitField0_ = (bitField0_ & ~0x00000800);
              skillDatasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSkillDatasFieldBuilder() : null;
            } else {
              skillDatasBuilder_.addAllMessages(other.skillDatas_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasPosPrior()) {
          
          return false;
        }
        if (!hasViewRange()) {
          
          return false;
        }
        if (!hasTrackRange()) {
          
          return false;
        }
        if (!hasIdlePeriod()) {
          
          return false;
        }
        if (!hasMovePeriod()) {
          
          return false;
        }
        if (!getSize().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getSkillDatasCount(); i++) {
          if (!getSkillDatas(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BFUnitCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BFUnitCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 配置ID(普通兵种或者技能兵种的ID)
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 配置ID(普通兵种或者技能兵种的ID)
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 配置ID(普通兵种或者技能兵种的ID)
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 配置ID(普通兵种或者技能兵种的ID)
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 兵种类型, 参考UnitType
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 兵种类型, 参考UnitType
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 兵种类型, 参考UnitType
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * 兵种类型, 参考UnitType
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required .UnitSize size = 3;
      private com.hawk.game.protocol.BattleCfg.UnitSize size_ = com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitSize, com.hawk.game.protocol.BattleCfg.UnitSize.Builder, com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder> sizeBuilder_;
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitSize getSize() {
        if (sizeBuilder_ == null) {
          return size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public Builder setSize(com.hawk.game.protocol.BattleCfg.UnitSize value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public Builder setSize(
          com.hawk.game.protocol.BattleCfg.UnitSize.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public Builder mergeSize(com.hawk.game.protocol.BattleCfg.UnitSize value) {
        if (sizeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              size_ != com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance()) {
            size_ =
              com.hawk.game.protocol.BattleCfg.UnitSize.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = com.hawk.game.protocol.BattleCfg.UnitSize.getDefaultInstance();
          onChanged();
        } else {
          sizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitSize.Builder getSizeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_;
        }
      }
      /**
       * <code>required .UnitSize size = 3;</code>
       *
       * <pre>
       * 战斗单元的占位大小
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitSize, com.hawk.game.protocol.BattleCfg.UnitSize.Builder, com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitSize, com.hawk.game.protocol.BattleCfg.UnitSize.Builder, com.hawk.game.protocol.BattleCfg.UnitSizeOrBuilder>(
                  size_,
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      // required int32 posPrior = 4;
      private int posPrior_ ;
      /**
       * <code>required int32 posPrior = 4;</code>
       *
       * <pre>
       * 占位优先级
       * </pre>
       */
      public boolean hasPosPrior() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 posPrior = 4;</code>
       *
       * <pre>
       * 占位优先级
       * </pre>
       */
      public int getPosPrior() {
        return posPrior_;
      }
      /**
       * <code>required int32 posPrior = 4;</code>
       *
       * <pre>
       * 占位优先级
       * </pre>
       */
      public Builder setPosPrior(int value) {
        bitField0_ |= 0x00000008;
        posPrior_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 posPrior = 4;</code>
       *
       * <pre>
       * 占位优先级
       * </pre>
       */
      public Builder clearPosPrior() {
        bitField0_ = (bitField0_ & ~0x00000008);
        posPrior_ = 0;
        onChanged();
        return this;
      }

      // required int32 viewRange = 5;
      private int viewRange_ ;
      /**
       * <code>required int32 viewRange = 5;</code>
       *
       * <pre>
       * 视野范围
       * </pre>
       */
      public boolean hasViewRange() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 viewRange = 5;</code>
       *
       * <pre>
       * 视野范围
       * </pre>
       */
      public int getViewRange() {
        return viewRange_;
      }
      /**
       * <code>required int32 viewRange = 5;</code>
       *
       * <pre>
       * 视野范围
       * </pre>
       */
      public Builder setViewRange(int value) {
        bitField0_ |= 0x00000010;
        viewRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 viewRange = 5;</code>
       *
       * <pre>
       * 视野范围
       * </pre>
       */
      public Builder clearViewRange() {
        bitField0_ = (bitField0_ & ~0x00000010);
        viewRange_ = 0;
        onChanged();
        return this;
      }

      // required int32 trackRange = 6;
      private int trackRange_ ;
      /**
       * <code>required int32 trackRange = 6;</code>
       *
       * <pre>
       * 跟踪方位
       * </pre>
       */
      public boolean hasTrackRange() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 trackRange = 6;</code>
       *
       * <pre>
       * 跟踪方位
       * </pre>
       */
      public int getTrackRange() {
        return trackRange_;
      }
      /**
       * <code>required int32 trackRange = 6;</code>
       *
       * <pre>
       * 跟踪方位
       * </pre>
       */
      public Builder setTrackRange(int value) {
        bitField0_ |= 0x00000020;
        trackRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 trackRange = 6;</code>
       *
       * <pre>
       * 跟踪方位
       * </pre>
       */
      public Builder clearTrackRange() {
        bitField0_ = (bitField0_ & ~0x00000020);
        trackRange_ = 0;
        onChanged();
        return this;
      }

      // required int32 idlePeriod = 10;
      private int idlePeriod_ ;
      /**
       * <code>required int32 idlePeriod = 10;</code>
       *
       * <pre>
       * 空闲等待
       * </pre>
       */
      public boolean hasIdlePeriod() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 idlePeriod = 10;</code>
       *
       * <pre>
       * 空闲等待
       * </pre>
       */
      public int getIdlePeriod() {
        return idlePeriod_;
      }
      /**
       * <code>required int32 idlePeriod = 10;</code>
       *
       * <pre>
       * 空闲等待
       * </pre>
       */
      public Builder setIdlePeriod(int value) {
        bitField0_ |= 0x00000040;
        idlePeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 idlePeriod = 10;</code>
       *
       * <pre>
       * 空闲等待
       * </pre>
       */
      public Builder clearIdlePeriod() {
        bitField0_ = (bitField0_ & ~0x00000040);
        idlePeriod_ = 0;
        onChanged();
        return this;
      }

      // required int32 movePeriod = 11;
      private int movePeriod_ ;
      /**
       * <code>required int32 movePeriod = 11;</code>
       *
       * <pre>
       * 移动时间
       * </pre>
       */
      public boolean hasMovePeriod() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 movePeriod = 11;</code>
       *
       * <pre>
       * 移动时间
       * </pre>
       */
      public int getMovePeriod() {
        return movePeriod_;
      }
      /**
       * <code>required int32 movePeriod = 11;</code>
       *
       * <pre>
       * 移动时间
       * </pre>
       */
      public Builder setMovePeriod(int value) {
        bitField0_ |= 0x00000080;
        movePeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 movePeriod = 11;</code>
       *
       * <pre>
       * 移动时间
       * </pre>
       */
      public Builder clearMovePeriod() {
        bitField0_ = (bitField0_ & ~0x00000080);
        movePeriod_ = 0;
        onChanged();
        return this;
      }

      // optional int32 turnPeriod = 12;
      private int turnPeriod_ ;
      /**
       * <code>optional int32 turnPeriod = 12;</code>
       *
       * <pre>
       * 转向时间
       * </pre>
       */
      public boolean hasTurnPeriod() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 turnPeriod = 12;</code>
       *
       * <pre>
       * 转向时间
       * </pre>
       */
      public int getTurnPeriod() {
        return turnPeriod_;
      }
      /**
       * <code>optional int32 turnPeriod = 12;</code>
       *
       * <pre>
       * 转向时间
       * </pre>
       */
      public Builder setTurnPeriod(int value) {
        bitField0_ |= 0x00000100;
        turnPeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 turnPeriod = 12;</code>
       *
       * <pre>
       * 转向时间
       * </pre>
       */
      public Builder clearTurnPeriod() {
        bitField0_ = (bitField0_ & ~0x00000100);
        turnPeriod_ = 0;
        onChanged();
        return this;
      }

      // optional int32 moveStep = 13;
      private int moveStep_ ;
      /**
       * <code>optional int32 moveStep = 13;</code>
       *
       * <pre>
       * 移动步长
       * </pre>
       */
      public boolean hasMoveStep() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 moveStep = 13;</code>
       *
       * <pre>
       * 移动步长
       * </pre>
       */
      public int getMoveStep() {
        return moveStep_;
      }
      /**
       * <code>optional int32 moveStep = 13;</code>
       *
       * <pre>
       * 移动步长
       * </pre>
       */
      public Builder setMoveStep(int value) {
        bitField0_ |= 0x00000200;
        moveStep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 moveStep = 13;</code>
       *
       * <pre>
       * 移动步长
       * </pre>
       */
      public Builder clearMoveStep() {
        bitField0_ = (bitField0_ & ~0x00000200);
        moveStep_ = 0;
        onChanged();
        return this;
      }

      // optional int32 freeFly = 14;
      private int freeFly_ ;
      /**
       * <code>optional int32 freeFly = 14;</code>
       *
       * <pre>
       * 自由飞行模式(直线移动模式)
       * </pre>
       */
      public boolean hasFreeFly() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 freeFly = 14;</code>
       *
       * <pre>
       * 自由飞行模式(直线移动模式)
       * </pre>
       */
      public int getFreeFly() {
        return freeFly_;
      }
      /**
       * <code>optional int32 freeFly = 14;</code>
       *
       * <pre>
       * 自由飞行模式(直线移动模式)
       * </pre>
       */
      public Builder setFreeFly(int value) {
        bitField0_ |= 0x00000400;
        freeFly_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 freeFly = 14;</code>
       *
       * <pre>
       * 自由飞行模式(直线移动模式)
       * </pre>
       */
      public Builder clearFreeFly() {
        bitField0_ = (bitField0_ & ~0x00000400);
        freeFly_ = 0;
        onChanged();
        return this;
      }

      // repeated .SkillData skillDatas = 20;
      private java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> skillDatas_ =
        java.util.Collections.emptyList();
      private void ensureSkillDatasIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          skillDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.SkillData>(skillDatas_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> skillDatasBuilder_;

      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> getSkillDatasList() {
        if (skillDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillDatas_);
        } else {
          return skillDatasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public int getSkillDatasCount() {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.size();
        } else {
          return skillDatasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index) {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.get(index);
        } else {
          return skillDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder setSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.set(index, value);
          onChanged();
        } else {
          skillDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder setSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder addSkillDatas(com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.add(value);
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder addSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.add(index, value);
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder addSkillDatas(
          com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.add(builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder addSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder addAllSkillDatas(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.SkillData> values) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          super.addAll(values, skillDatas_);
          onChanged();
        } else {
          skillDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder clearSkillDatas() {
        if (skillDatasBuilder_ == null) {
          skillDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          skillDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public Builder removeSkillDatas(int index) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.remove(index);
          onChanged();
        } else {
          skillDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder getSkillDatasBuilder(
          int index) {
        return getSkillDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
          int index) {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.get(index);  } else {
          return skillDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
           getSkillDatasOrBuilderList() {
        if (skillDatasBuilder_ != null) {
          return skillDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillDatas_);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder addSkillDatasBuilder() {
        return getSkillDatasFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder addSkillDatasBuilder(
          int index) {
        return getSkillDatasFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillData skillDatas = 20;</code>
       *
       * <pre>
       * 兵种技能
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData.Builder> 
           getSkillDatasBuilderList() {
        return getSkillDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
          getSkillDatasFieldBuilder() {
        if (skillDatasBuilder_ == null) {
          skillDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder>(
                  skillDatas_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          skillDatas_ = null;
        }
        return skillDatasBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BFUnitCfg)
    }

    static {
      defaultInstance = new BFUnitCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BFUnitCfg)
  }

  public interface BFMonsterCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物ID
     * </pre>
     */
    int getId();

    // required int32 itemId = 2;
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    int getItemId();

    // required .UnitAttr unitAttr = 3;
    /**
     * <code>required .UnitAttr unitAttr = 3;</code>
     *
     * <pre>
     * 战斗单元属性
     * </pre>
     */
    boolean hasUnitAttr();
    /**
     * <code>required .UnitAttr unitAttr = 3;</code>
     *
     * <pre>
     * 战斗单元属性
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitAttr getUnitAttr();
    /**
     * <code>required .UnitAttr unitAttr = 3;</code>
     *
     * <pre>
     * 战斗单元属性
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder getUnitAttrOrBuilder();

    // repeated .SkillData skillDatas = 4;
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> 
        getSkillDatasList();
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index);
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    int getSkillDatasCount();
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
        getSkillDatasOrBuilderList();
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BFMonsterCfg}
   *
   * <pre>
   * 怪物配置
   * </pre>
   */
  public static final class BFMonsterCfg extends
      com.google.protobuf.GeneratedMessage
      implements BFMonsterCfgOrBuilder {
    // Use BFMonsterCfg.newBuilder() to construct.
    private BFMonsterCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BFMonsterCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BFMonsterCfg defaultInstance;
    public static BFMonsterCfg getDefaultInstance() {
      return defaultInstance;
    }

    public BFMonsterCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BFMonsterCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readInt32();
              break;
            }
            case 26: {
              com.hawk.game.protocol.BattleCfg.UnitAttr.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = unitAttr_.toBuilder();
              }
              unitAttr_ = input.readMessage(com.hawk.game.protocol.BattleCfg.UnitAttr.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unitAttr_);
                unitAttr_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                skillDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.SkillData>();
                mutable_bitField0_ |= 0x00000008;
              }
              skillDatas_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.SkillData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          skillDatas_ = java.util.Collections.unmodifiableList(skillDatas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFMonsterCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFMonsterCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BFMonsterCfg.class, com.hawk.game.protocol.BattleCfg.BFMonsterCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<BFMonsterCfg> PARSER =
        new com.google.protobuf.AbstractParser<BFMonsterCfg>() {
      public BFMonsterCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BFMonsterCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BFMonsterCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 怪物ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 itemId = 2;
    public static final int ITEMID_FIELD_NUMBER = 2;
    private int itemId_;
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 itemId = 2;</code>
     *
     * <pre>
     * 战斗单元配置ID
     * </pre>
     */
    public int getItemId() {
      return itemId_;
    }

    // required .UnitAttr unitAttr = 3;
    public static final int UNITATTR_FIELD_NUMBER = 3;
    private com.hawk.game.protocol.BattleCfg.UnitAttr unitAttr_;
    /**
     * <code>required .UnitAttr unitAttr = 3;</code>
     *
     * <pre>
     * 战斗单元属性
     * </pre>
     */
    public boolean hasUnitAttr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .UnitAttr unitAttr = 3;</code>
     *
     * <pre>
     * 战斗单元属性
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitAttr getUnitAttr() {
      return unitAttr_;
    }
    /**
     * <code>required .UnitAttr unitAttr = 3;</code>
     *
     * <pre>
     * 战斗单元属性
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder getUnitAttrOrBuilder() {
      return unitAttr_;
    }

    // repeated .SkillData skillDatas = 4;
    public static final int SKILLDATAS_FIELD_NUMBER = 4;
    private java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> skillDatas_;
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> getSkillDatasList() {
      return skillDatas_;
    }
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
        getSkillDatasOrBuilderList() {
      return skillDatas_;
    }
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    public int getSkillDatasCount() {
      return skillDatas_.size();
    }
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index) {
      return skillDatas_.get(index);
    }
    /**
     * <code>repeated .SkillData skillDatas = 4;</code>
     *
     * <pre>
     * 英雄技能列表（怪物英雄开启的技能列表）
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
        int index) {
      return skillDatas_.get(index);
    }

    private void initFields() {
      id_ = 0;
      itemId_ = 0;
      unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
      skillDatas_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnitAttr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSkillDatasCount(); i++) {
        if (!getSkillDatas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, unitAttr_);
      }
      for (int i = 0; i < skillDatas_.size(); i++) {
        output.writeMessage(4, skillDatas_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, unitAttr_);
      }
      for (int i = 0; i < skillDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, skillDatas_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFMonsterCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BFMonsterCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BFMonsterCfg}
     *
     * <pre>
     * 怪物配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BFMonsterCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMonsterCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMonsterCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BFMonsterCfg.class, com.hawk.game.protocol.BattleCfg.BFMonsterCfg.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BFMonsterCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUnitAttrFieldBuilder();
          getSkillDatasFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (unitAttrBuilder_ == null) {
          unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
        } else {
          unitAttrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (skillDatasBuilder_ == null) {
          skillDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          skillDatasBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFMonsterCfg_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BFMonsterCfg getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BFMonsterCfg.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BFMonsterCfg build() {
        com.hawk.game.protocol.BattleCfg.BFMonsterCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BFMonsterCfg buildPartial() {
        com.hawk.game.protocol.BattleCfg.BFMonsterCfg result = new com.hawk.game.protocol.BattleCfg.BFMonsterCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (unitAttrBuilder_ == null) {
          result.unitAttr_ = unitAttr_;
        } else {
          result.unitAttr_ = unitAttrBuilder_.build();
        }
        if (skillDatasBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            skillDatas_ = java.util.Collections.unmodifiableList(skillDatas_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.skillDatas_ = skillDatas_;
        } else {
          result.skillDatas_ = skillDatasBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BFMonsterCfg) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BFMonsterCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BFMonsterCfg other) {
        if (other == com.hawk.game.protocol.BattleCfg.BFMonsterCfg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasUnitAttr()) {
          mergeUnitAttr(other.getUnitAttr());
        }
        if (skillDatasBuilder_ == null) {
          if (!other.skillDatas_.isEmpty()) {
            if (skillDatas_.isEmpty()) {
              skillDatas_ = other.skillDatas_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSkillDatasIsMutable();
              skillDatas_.addAll(other.skillDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.skillDatas_.isEmpty()) {
            if (skillDatasBuilder_.isEmpty()) {
              skillDatasBuilder_.dispose();
              skillDatasBuilder_ = null;
              skillDatas_ = other.skillDatas_;
              bitField0_ = (bitField0_ & ~0x00000008);
              skillDatasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSkillDatasFieldBuilder() : null;
            } else {
              skillDatasBuilder_.addAllMessages(other.skillDatas_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasItemId()) {
          
          return false;
        }
        if (!hasUnitAttr()) {
          
          return false;
        }
        for (int i = 0; i < getSkillDatasCount(); i++) {
          if (!getSkillDatas(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BFMonsterCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BFMonsterCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 怪物ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 itemId = 2;
      private int itemId_ ;
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public int getItemId() {
        return itemId_;
      }
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public Builder setItemId(int value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemId = 2;</code>
       *
       * <pre>
       * 战斗单元配置ID
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0;
        onChanged();
        return this;
      }

      // required .UnitAttr unitAttr = 3;
      private com.hawk.game.protocol.BattleCfg.UnitAttr unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitAttr, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder, com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder> unitAttrBuilder_;
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public boolean hasUnitAttr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitAttr getUnitAttr() {
        if (unitAttrBuilder_ == null) {
          return unitAttr_;
        } else {
          return unitAttrBuilder_.getMessage();
        }
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public Builder setUnitAttr(com.hawk.game.protocol.BattleCfg.UnitAttr value) {
        if (unitAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unitAttr_ = value;
          onChanged();
        } else {
          unitAttrBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public Builder setUnitAttr(
          com.hawk.game.protocol.BattleCfg.UnitAttr.Builder builderForValue) {
        if (unitAttrBuilder_ == null) {
          unitAttr_ = builderForValue.build();
          onChanged();
        } else {
          unitAttrBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public Builder mergeUnitAttr(com.hawk.game.protocol.BattleCfg.UnitAttr value) {
        if (unitAttrBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              unitAttr_ != com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance()) {
            unitAttr_ =
              com.hawk.game.protocol.BattleCfg.UnitAttr.newBuilder(unitAttr_).mergeFrom(value).buildPartial();
          } else {
            unitAttr_ = value;
          }
          onChanged();
        } else {
          unitAttrBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public Builder clearUnitAttr() {
        if (unitAttrBuilder_ == null) {
          unitAttr_ = com.hawk.game.protocol.BattleCfg.UnitAttr.getDefaultInstance();
          onChanged();
        } else {
          unitAttrBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitAttr.Builder getUnitAttrBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getUnitAttrFieldBuilder().getBuilder();
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder getUnitAttrOrBuilder() {
        if (unitAttrBuilder_ != null) {
          return unitAttrBuilder_.getMessageOrBuilder();
        } else {
          return unitAttr_;
        }
      }
      /**
       * <code>required .UnitAttr unitAttr = 3;</code>
       *
       * <pre>
       * 战斗单元属性
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.UnitAttr, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder, com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder> 
          getUnitAttrFieldBuilder() {
        if (unitAttrBuilder_ == null) {
          unitAttrBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.UnitAttr, com.hawk.game.protocol.BattleCfg.UnitAttr.Builder, com.hawk.game.protocol.BattleCfg.UnitAttrOrBuilder>(
                  unitAttr_,
                  getParentForChildren(),
                  isClean());
          unitAttr_ = null;
        }
        return unitAttrBuilder_;
      }

      // repeated .SkillData skillDatas = 4;
      private java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> skillDatas_ =
        java.util.Collections.emptyList();
      private void ensureSkillDatasIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          skillDatas_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.SkillData>(skillDatas_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> skillDatasBuilder_;

      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData> getSkillDatasList() {
        if (skillDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillDatas_);
        } else {
          return skillDatasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public int getSkillDatasCount() {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.size();
        } else {
          return skillDatasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData getSkillDatas(int index) {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.get(index);
        } else {
          return skillDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder setSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.set(index, value);
          onChanged();
        } else {
          skillDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder setSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder addSkillDatas(com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.add(value);
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder addSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData value) {
        if (skillDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillDatasIsMutable();
          skillDatas_.add(index, value);
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder addSkillDatas(
          com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.add(builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder addSkillDatas(
          int index, com.hawk.game.protocol.BattleCfg.SkillData.Builder builderForValue) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder addAllSkillDatas(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.SkillData> values) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          super.addAll(values, skillDatas_);
          onChanged();
        } else {
          skillDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder clearSkillDatas() {
        if (skillDatasBuilder_ == null) {
          skillDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          skillDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public Builder removeSkillDatas(int index) {
        if (skillDatasBuilder_ == null) {
          ensureSkillDatasIsMutable();
          skillDatas_.remove(index);
          onChanged();
        } else {
          skillDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder getSkillDatasBuilder(
          int index) {
        return getSkillDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder getSkillDatasOrBuilder(
          int index) {
        if (skillDatasBuilder_ == null) {
          return skillDatas_.get(index);  } else {
          return skillDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
           getSkillDatasOrBuilderList() {
        if (skillDatasBuilder_ != null) {
          return skillDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillDatas_);
        }
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder addSkillDatasBuilder() {
        return getSkillDatasFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillData.Builder addSkillDatasBuilder(
          int index) {
        return getSkillDatasFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.SkillData.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillData skillDatas = 4;</code>
       *
       * <pre>
       * 英雄技能列表（怪物英雄开启的技能列表）
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.SkillData.Builder> 
           getSkillDatasBuilderList() {
        return getSkillDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder> 
          getSkillDatasFieldBuilder() {
        if (skillDatasBuilder_ == null) {
          skillDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.SkillData, com.hawk.game.protocol.BattleCfg.SkillData.Builder, com.hawk.game.protocol.BattleCfg.SkillDataOrBuilder>(
                  skillDatas_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          skillDatas_ = null;
        }
        return skillDatasBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BFMonsterCfg)
    }

    static {
      defaultInstance = new BFMonsterCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BFMonsterCfg)
  }

  public interface BFSkillCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    int getId();

    // optional int32 type = 2;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 技能type
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 技能type
     * </pre>
     */
    int getType();

    // optional int32 triggerType = 3;
    /**
     * <code>optional int32 triggerType = 3;</code>
     *
     * <pre>
     * 触发类型 @see SkillTrigType
     * </pre>
     */
    boolean hasTriggerType();
    /**
     * <code>optional int32 triggerType = 3;</code>
     *
     * <pre>
     * 触发类型 @see SkillTrigType
     * </pre>
     */
    int getTriggerType();

    // optional int32 castCheckType = 4;
    /**
     * <code>optional int32 castCheckType = 4;</code>
     *
     * <pre>
     * 技能施放检查类型 @see CastCheckType
     * </pre>
     */
    boolean hasCastCheckType();
    /**
     * <code>optional int32 castCheckType = 4;</code>
     *
     * <pre>
     * 技能施放检查类型 @see CastCheckType
     * </pre>
     */
    int getCastCheckType();

    // optional int32 duration = 5;
    /**
     * <code>optional int32 duration = 5;</code>
     *
     * <pre>
     * 技能动画时间（不能干别的）
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional int32 duration = 5;</code>
     *
     * <pre>
     * 技能动画时间（不能干别的）
     * </pre>
     */
    int getDuration();

    // required int32 skillCd = 6;
    /**
     * <code>required int32 skillCd = 6;</code>
     *
     * <pre>
     * 技能冷却时间
     * </pre>
     */
    boolean hasSkillCd();
    /**
     * <code>required int32 skillCd = 6;</code>
     *
     * <pre>
     * 技能冷却时间
     * </pre>
     */
    int getSkillCd();

    // optional int32 cdTeam = 7;
    /**
     * <code>optional int32 cdTeam = 7;</code>
     *
     * <pre>
     * 冷却组
     * </pre>
     */
    boolean hasCdTeam();
    /**
     * <code>optional int32 cdTeam = 7;</code>
     *
     * <pre>
     * 冷却组
     * </pre>
     */
    int getCdTeam();

    // required int32 affectCamp = 10;
    /**
     * <code>required int32 affectCamp = 10;</code>
     *
     * <pre>
     * 影响的敌我阵营 @see SkillCampType
     * </pre>
     */
    boolean hasAffectCamp();
    /**
     * <code>required int32 affectCamp = 10;</code>
     *
     * <pre>
     * 影响的敌我阵营 @see SkillCampType
     * </pre>
     */
    int getAffectCamp();

    // required int32 attackDisMin = 11;
    /**
     * <code>required int32 attackDisMin = 11;</code>
     *
     * <pre>
     * 最小施放距离
     * </pre>
     */
    boolean hasAttackDisMin();
    /**
     * <code>required int32 attackDisMin = 11;</code>
     *
     * <pre>
     * 最小施放距离
     * </pre>
     */
    int getAttackDisMin();

    // required int32 attackDisLow = 12;
    /**
     * <code>required int32 attackDisLow = 12;</code>
     *
     * <pre>
     * 最大施放距离下限
     * </pre>
     */
    boolean hasAttackDisLow();
    /**
     * <code>required int32 attackDisLow = 12;</code>
     *
     * <pre>
     * 最大施放距离下限
     * </pre>
     */
    int getAttackDisLow();

    // required int32 attackDisUp = 13;
    /**
     * <code>required int32 attackDisUp = 13;</code>
     *
     * <pre>
     * 最大施放距离上限
     * </pre>
     */
    boolean hasAttackDisUp();
    /**
     * <code>required int32 attackDisUp = 13;</code>
     *
     * <pre>
     * 最大施放距离上限
     * </pre>
     */
    int getAttackDisUp();

    // optional int32 waitTime = 14;
    /**
     * <code>optional int32 waitTime = 14;</code>
     *
     * <pre>
     * 施放后等待生效时间
     * </pre>
     */
    boolean hasWaitTime();
    /**
     * <code>optional int32 waitTime = 14;</code>
     *
     * <pre>
     * 施放后等待生效时间
     * </pre>
     */
    int getWaitTime();

    // optional int32 lastTime = 15;
    /**
     * <code>optional int32 lastTime = 15;</code>
     *
     * <pre>
     * 技能效果持续时间（光环类技能）
     * </pre>
     */
    boolean hasLastTime();
    /**
     * <code>optional int32 lastTime = 15;</code>
     *
     * <pre>
     * 技能效果持续时间（光环类技能）
     * </pre>
     */
    int getLastTime();

    // optional int32 bulletSpeed = 16;
    /**
     * <code>optional int32 bulletSpeed = 16;</code>
     *
     * <pre>
     * 弹道速度
     * </pre>
     */
    boolean hasBulletSpeed();
    /**
     * <code>optional int32 bulletSpeed = 16;</code>
     *
     * <pre>
     * 弹道速度
     * </pre>
     */
    int getBulletSpeed();

    // required .SkillShape shape = 20;
    /**
     * <code>required .SkillShape shape = 20;</code>
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    boolean hasShape();
    /**
     * <code>required .SkillShape shape = 20;</code>
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillShape getShape();
    /**
     * <code>required .SkillShape shape = 20;</code>
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder getShapeOrBuilder();

    // repeated int32 enemyIds = 21;
    /**
     * <code>repeated int32 enemyIds = 21;</code>
     *
     * <pre>
     * 影响的ID列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getEnemyIdsList();
    /**
     * <code>repeated int32 enemyIds = 21;</code>
     *
     * <pre>
     * 影响的ID列表
     * </pre>
     */
    int getEnemyIdsCount();
    /**
     * <code>repeated int32 enemyIds = 21;</code>
     *
     * <pre>
     * 影响的ID列表
     * </pre>
     */
    int getEnemyIds(int index);

    // repeated int32 enemyTypes = 22;
    /**
     * <code>repeated int32 enemyTypes = 22;</code>
     *
     * <pre>
     * 影响的type列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getEnemyTypesList();
    /**
     * <code>repeated int32 enemyTypes = 22;</code>
     *
     * <pre>
     * 影响的type列表
     * </pre>
     */
    int getEnemyTypesCount();
    /**
     * <code>repeated int32 enemyTypes = 22;</code>
     *
     * <pre>
     * 影响的type列表
     * </pre>
     */
    int getEnemyTypes(int index);

    // repeated int32 buffIds = 23;
    /**
     * <code>repeated int32 buffIds = 23;</code>
     *
     * <pre>
     * 触发的buff列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getBuffIdsList();
    /**
     * <code>repeated int32 buffIds = 23;</code>
     *
     * <pre>
     * 触发的buff列表
     * </pre>
     */
    int getBuffIdsCount();
    /**
     * <code>repeated int32 buffIds = 23;</code>
     *
     * <pre>
     * 触发的buff列表
     * </pre>
     */
    int getBuffIds(int index);

    // required int32 damageCnt = 24;
    /**
     * <code>required int32 damageCnt = 24;</code>
     *
     * <pre>
     * Buff生效数
     * </pre>
     */
    boolean hasDamageCnt();
    /**
     * <code>required int32 damageCnt = 24;</code>
     *
     * <pre>
     * Buff生效数
     * </pre>
     */
    int getDamageCnt();

    // optional int32 damagePer = 25;
    /**
     * <code>optional int32 damagePer = 25;</code>
     *
     * <pre>
     * Buff效果衰减（次目标伤害万分比）
     * </pre>
     */
    boolean hasDamagePer();
    /**
     * <code>optional int32 damagePer = 25;</code>
     *
     * <pre>
     * Buff效果衰减（次目标伤害万分比）
     * </pre>
     */
    int getDamagePer();

    // optional int32 postSkill = 30;
    /**
     * <code>optional int32 postSkill = 30;</code>
     *
     * <pre>
     * 后置技能
     * </pre>
     */
    boolean hasPostSkill();
    /**
     * <code>optional int32 postSkill = 30;</code>
     *
     * <pre>
     * 后置技能
     * </pre>
     */
    int getPostSkill();

    // optional int32 postTime = 31;
    /**
     * <code>optional int32 postTime = 31;</code>
     *
     * <pre>
     * duration后间隔postTime施放后置技能
     * </pre>
     */
    boolean hasPostTime();
    /**
     * <code>optional int32 postTime = 31;</code>
     *
     * <pre>
     * duration后间隔postTime施放后置技能
     * </pre>
     */
    int getPostTime();
  }
  /**
   * Protobuf type {@code BFSkillCfg}
   *
   * <pre>
   * 技能配置
   * </pre>
   */
  public static final class BFSkillCfg extends
      com.google.protobuf.GeneratedMessage
      implements BFSkillCfgOrBuilder {
    // Use BFSkillCfg.newBuilder() to construct.
    private BFSkillCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BFSkillCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BFSkillCfg defaultInstance;
    public static BFSkillCfg getDefaultInstance() {
      return defaultInstance;
    }

    public BFSkillCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BFSkillCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              triggerType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              castCheckType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              duration_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              skillCd_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              cdTeam_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              affectCamp_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              attackDisMin_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              attackDisLow_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              attackDisUp_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              waitTime_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              lastTime_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              bulletSpeed_ = input.readInt32();
              break;
            }
            case 162: {
              com.hawk.game.protocol.BattleCfg.SkillShape.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = shape_.toBuilder();
              }
              shape_ = input.readMessage(com.hawk.game.protocol.BattleCfg.SkillShape.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shape_);
                shape_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                enemyIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              enemyIds_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                enemyIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                enemyIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                enemyTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              enemyTypes_.add(input.readInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                enemyTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                enemyTypes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 184: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                buffIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              buffIds_.add(input.readInt32());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                buffIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                buffIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 192: {
              bitField0_ |= 0x00008000;
              damageCnt_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00010000;
              damagePer_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00020000;
              postSkill_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00040000;
              postTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          enemyIds_ = java.util.Collections.unmodifiableList(enemyIds_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          enemyTypes_ = java.util.Collections.unmodifiableList(enemyTypes_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          buffIds_ = java.util.Collections.unmodifiableList(buffIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFSkillCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFSkillCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BFSkillCfg.class, com.hawk.game.protocol.BattleCfg.BFSkillCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<BFSkillCfg> PARSER =
        new com.google.protobuf.AbstractParser<BFSkillCfg>() {
      public BFSkillCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BFSkillCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BFSkillCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 技能ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 技能type
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 技能type
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 triggerType = 3;
    public static final int TRIGGERTYPE_FIELD_NUMBER = 3;
    private int triggerType_;
    /**
     * <code>optional int32 triggerType = 3;</code>
     *
     * <pre>
     * 触发类型 @see SkillTrigType
     * </pre>
     */
    public boolean hasTriggerType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 triggerType = 3;</code>
     *
     * <pre>
     * 触发类型 @see SkillTrigType
     * </pre>
     */
    public int getTriggerType() {
      return triggerType_;
    }

    // optional int32 castCheckType = 4;
    public static final int CASTCHECKTYPE_FIELD_NUMBER = 4;
    private int castCheckType_;
    /**
     * <code>optional int32 castCheckType = 4;</code>
     *
     * <pre>
     * 技能施放检查类型 @see CastCheckType
     * </pre>
     */
    public boolean hasCastCheckType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 castCheckType = 4;</code>
     *
     * <pre>
     * 技能施放检查类型 @see CastCheckType
     * </pre>
     */
    public int getCastCheckType() {
      return castCheckType_;
    }

    // optional int32 duration = 5;
    public static final int DURATION_FIELD_NUMBER = 5;
    private int duration_;
    /**
     * <code>optional int32 duration = 5;</code>
     *
     * <pre>
     * 技能动画时间（不能干别的）
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 duration = 5;</code>
     *
     * <pre>
     * 技能动画时间（不能干别的）
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    // required int32 skillCd = 6;
    public static final int SKILLCD_FIELD_NUMBER = 6;
    private int skillCd_;
    /**
     * <code>required int32 skillCd = 6;</code>
     *
     * <pre>
     * 技能冷却时间
     * </pre>
     */
    public boolean hasSkillCd() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 skillCd = 6;</code>
     *
     * <pre>
     * 技能冷却时间
     * </pre>
     */
    public int getSkillCd() {
      return skillCd_;
    }

    // optional int32 cdTeam = 7;
    public static final int CDTEAM_FIELD_NUMBER = 7;
    private int cdTeam_;
    /**
     * <code>optional int32 cdTeam = 7;</code>
     *
     * <pre>
     * 冷却组
     * </pre>
     */
    public boolean hasCdTeam() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 cdTeam = 7;</code>
     *
     * <pre>
     * 冷却组
     * </pre>
     */
    public int getCdTeam() {
      return cdTeam_;
    }

    // required int32 affectCamp = 10;
    public static final int AFFECTCAMP_FIELD_NUMBER = 10;
    private int affectCamp_;
    /**
     * <code>required int32 affectCamp = 10;</code>
     *
     * <pre>
     * 影响的敌我阵营 @see SkillCampType
     * </pre>
     */
    public boolean hasAffectCamp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 affectCamp = 10;</code>
     *
     * <pre>
     * 影响的敌我阵营 @see SkillCampType
     * </pre>
     */
    public int getAffectCamp() {
      return affectCamp_;
    }

    // required int32 attackDisMin = 11;
    public static final int ATTACKDISMIN_FIELD_NUMBER = 11;
    private int attackDisMin_;
    /**
     * <code>required int32 attackDisMin = 11;</code>
     *
     * <pre>
     * 最小施放距离
     * </pre>
     */
    public boolean hasAttackDisMin() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 attackDisMin = 11;</code>
     *
     * <pre>
     * 最小施放距离
     * </pre>
     */
    public int getAttackDisMin() {
      return attackDisMin_;
    }

    // required int32 attackDisLow = 12;
    public static final int ATTACKDISLOW_FIELD_NUMBER = 12;
    private int attackDisLow_;
    /**
     * <code>required int32 attackDisLow = 12;</code>
     *
     * <pre>
     * 最大施放距离下限
     * </pre>
     */
    public boolean hasAttackDisLow() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 attackDisLow = 12;</code>
     *
     * <pre>
     * 最大施放距离下限
     * </pre>
     */
    public int getAttackDisLow() {
      return attackDisLow_;
    }

    // required int32 attackDisUp = 13;
    public static final int ATTACKDISUP_FIELD_NUMBER = 13;
    private int attackDisUp_;
    /**
     * <code>required int32 attackDisUp = 13;</code>
     *
     * <pre>
     * 最大施放距离上限
     * </pre>
     */
    public boolean hasAttackDisUp() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 attackDisUp = 13;</code>
     *
     * <pre>
     * 最大施放距离上限
     * </pre>
     */
    public int getAttackDisUp() {
      return attackDisUp_;
    }

    // optional int32 waitTime = 14;
    public static final int WAITTIME_FIELD_NUMBER = 14;
    private int waitTime_;
    /**
     * <code>optional int32 waitTime = 14;</code>
     *
     * <pre>
     * 施放后等待生效时间
     * </pre>
     */
    public boolean hasWaitTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 waitTime = 14;</code>
     *
     * <pre>
     * 施放后等待生效时间
     * </pre>
     */
    public int getWaitTime() {
      return waitTime_;
    }

    // optional int32 lastTime = 15;
    public static final int LASTTIME_FIELD_NUMBER = 15;
    private int lastTime_;
    /**
     * <code>optional int32 lastTime = 15;</code>
     *
     * <pre>
     * 技能效果持续时间（光环类技能）
     * </pre>
     */
    public boolean hasLastTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 lastTime = 15;</code>
     *
     * <pre>
     * 技能效果持续时间（光环类技能）
     * </pre>
     */
    public int getLastTime() {
      return lastTime_;
    }

    // optional int32 bulletSpeed = 16;
    public static final int BULLETSPEED_FIELD_NUMBER = 16;
    private int bulletSpeed_;
    /**
     * <code>optional int32 bulletSpeed = 16;</code>
     *
     * <pre>
     * 弹道速度
     * </pre>
     */
    public boolean hasBulletSpeed() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 bulletSpeed = 16;</code>
     *
     * <pre>
     * 弹道速度
     * </pre>
     */
    public int getBulletSpeed() {
      return bulletSpeed_;
    }

    // required .SkillShape shape = 20;
    public static final int SHAPE_FIELD_NUMBER = 20;
    private com.hawk.game.protocol.BattleCfg.SkillShape shape_;
    /**
     * <code>required .SkillShape shape = 20;</code>
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    public boolean hasShape() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required .SkillShape shape = 20;</code>
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillShape getShape() {
      return shape_;
    }
    /**
     * <code>required .SkillShape shape = 20;</code>
     *
     * <pre>
     * 技能形状
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder getShapeOrBuilder() {
      return shape_;
    }

    // repeated int32 enemyIds = 21;
    public static final int ENEMYIDS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> enemyIds_;
    /**
     * <code>repeated int32 enemyIds = 21;</code>
     *
     * <pre>
     * 影响的ID列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEnemyIdsList() {
      return enemyIds_;
    }
    /**
     * <code>repeated int32 enemyIds = 21;</code>
     *
     * <pre>
     * 影响的ID列表
     * </pre>
     */
    public int getEnemyIdsCount() {
      return enemyIds_.size();
    }
    /**
     * <code>repeated int32 enemyIds = 21;</code>
     *
     * <pre>
     * 影响的ID列表
     * </pre>
     */
    public int getEnemyIds(int index) {
      return enemyIds_.get(index);
    }

    // repeated int32 enemyTypes = 22;
    public static final int ENEMYTYPES_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Integer> enemyTypes_;
    /**
     * <code>repeated int32 enemyTypes = 22;</code>
     *
     * <pre>
     * 影响的type列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getEnemyTypesList() {
      return enemyTypes_;
    }
    /**
     * <code>repeated int32 enemyTypes = 22;</code>
     *
     * <pre>
     * 影响的type列表
     * </pre>
     */
    public int getEnemyTypesCount() {
      return enemyTypes_.size();
    }
    /**
     * <code>repeated int32 enemyTypes = 22;</code>
     *
     * <pre>
     * 影响的type列表
     * </pre>
     */
    public int getEnemyTypes(int index) {
      return enemyTypes_.get(index);
    }

    // repeated int32 buffIds = 23;
    public static final int BUFFIDS_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Integer> buffIds_;
    /**
     * <code>repeated int32 buffIds = 23;</code>
     *
     * <pre>
     * 触发的buff列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBuffIdsList() {
      return buffIds_;
    }
    /**
     * <code>repeated int32 buffIds = 23;</code>
     *
     * <pre>
     * 触发的buff列表
     * </pre>
     */
    public int getBuffIdsCount() {
      return buffIds_.size();
    }
    /**
     * <code>repeated int32 buffIds = 23;</code>
     *
     * <pre>
     * 触发的buff列表
     * </pre>
     */
    public int getBuffIds(int index) {
      return buffIds_.get(index);
    }

    // required int32 damageCnt = 24;
    public static final int DAMAGECNT_FIELD_NUMBER = 24;
    private int damageCnt_;
    /**
     * <code>required int32 damageCnt = 24;</code>
     *
     * <pre>
     * Buff生效数
     * </pre>
     */
    public boolean hasDamageCnt() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 damageCnt = 24;</code>
     *
     * <pre>
     * Buff生效数
     * </pre>
     */
    public int getDamageCnt() {
      return damageCnt_;
    }

    // optional int32 damagePer = 25;
    public static final int DAMAGEPER_FIELD_NUMBER = 25;
    private int damagePer_;
    /**
     * <code>optional int32 damagePer = 25;</code>
     *
     * <pre>
     * Buff效果衰减（次目标伤害万分比）
     * </pre>
     */
    public boolean hasDamagePer() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 damagePer = 25;</code>
     *
     * <pre>
     * Buff效果衰减（次目标伤害万分比）
     * </pre>
     */
    public int getDamagePer() {
      return damagePer_;
    }

    // optional int32 postSkill = 30;
    public static final int POSTSKILL_FIELD_NUMBER = 30;
    private int postSkill_;
    /**
     * <code>optional int32 postSkill = 30;</code>
     *
     * <pre>
     * 后置技能
     * </pre>
     */
    public boolean hasPostSkill() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 postSkill = 30;</code>
     *
     * <pre>
     * 后置技能
     * </pre>
     */
    public int getPostSkill() {
      return postSkill_;
    }

    // optional int32 postTime = 31;
    public static final int POSTTIME_FIELD_NUMBER = 31;
    private int postTime_;
    /**
     * <code>optional int32 postTime = 31;</code>
     *
     * <pre>
     * duration后间隔postTime施放后置技能
     * </pre>
     */
    public boolean hasPostTime() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 postTime = 31;</code>
     *
     * <pre>
     * duration后间隔postTime施放后置技能
     * </pre>
     */
    public int getPostTime() {
      return postTime_;
    }

    private void initFields() {
      id_ = 0;
      type_ = 0;
      triggerType_ = 0;
      castCheckType_ = 0;
      duration_ = 0;
      skillCd_ = 0;
      cdTeam_ = 0;
      affectCamp_ = 0;
      attackDisMin_ = 0;
      attackDisLow_ = 0;
      attackDisUp_ = 0;
      waitTime_ = 0;
      lastTime_ = 0;
      bulletSpeed_ = 0;
      shape_ = com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance();
      enemyIds_ = java.util.Collections.emptyList();
      enemyTypes_ = java.util.Collections.emptyList();
      buffIds_ = java.util.Collections.emptyList();
      damageCnt_ = 0;
      damagePer_ = 0;
      postSkill_ = 0;
      postTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSkillCd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAffectCamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttackDisMin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttackDisLow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttackDisUp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShape()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDamageCnt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getShape().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, triggerType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, castCheckType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, duration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, skillCd_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, cdTeam_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, affectCamp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, attackDisMin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, attackDisLow_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, attackDisUp_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(14, waitTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(15, lastTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(16, bulletSpeed_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(20, shape_);
      }
      for (int i = 0; i < enemyIds_.size(); i++) {
        output.writeInt32(21, enemyIds_.get(i));
      }
      for (int i = 0; i < enemyTypes_.size(); i++) {
        output.writeInt32(22, enemyTypes_.get(i));
      }
      for (int i = 0; i < buffIds_.size(); i++) {
        output.writeInt32(23, buffIds_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(24, damageCnt_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(25, damagePer_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(30, postSkill_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(31, postTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, triggerType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, castCheckType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, duration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, skillCd_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cdTeam_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, affectCamp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, attackDisMin_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, attackDisLow_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, attackDisUp_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, waitTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, lastTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, bulletSpeed_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, shape_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enemyIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(enemyIds_.get(i));
        }
        size += dataSize;
        size += 2 * getEnemyIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enemyTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(enemyTypes_.get(i));
        }
        size += dataSize;
        size += 2 * getEnemyTypesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < buffIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(buffIds_.get(i));
        }
        size += dataSize;
        size += 2 * getBuffIdsList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, damageCnt_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, damagePer_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, postSkill_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, postTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFSkillCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BFSkillCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BFSkillCfg}
     *
     * <pre>
     * 技能配置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BFSkillCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFSkillCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFSkillCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BFSkillCfg.class, com.hawk.game.protocol.BattleCfg.BFSkillCfg.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BFSkillCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getShapeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        triggerType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        castCheckType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        skillCd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cdTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        affectCamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        attackDisMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        attackDisLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        attackDisUp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        waitTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        lastTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        bulletSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (shapeBuilder_ == null) {
          shape_ = com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance();
        } else {
          shapeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        enemyIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        enemyTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        buffIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        damageCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        damagePer_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        postSkill_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        postTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFSkillCfg_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BFSkillCfg getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BFSkillCfg.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BFSkillCfg build() {
        com.hawk.game.protocol.BattleCfg.BFSkillCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BFSkillCfg buildPartial() {
        com.hawk.game.protocol.BattleCfg.BFSkillCfg result = new com.hawk.game.protocol.BattleCfg.BFSkillCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.triggerType_ = triggerType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.castCheckType_ = castCheckType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.skillCd_ = skillCd_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.cdTeam_ = cdTeam_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.affectCamp_ = affectCamp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.attackDisMin_ = attackDisMin_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.attackDisLow_ = attackDisLow_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.attackDisUp_ = attackDisUp_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.waitTime_ = waitTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.lastTime_ = lastTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.bulletSpeed_ = bulletSpeed_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (shapeBuilder_ == null) {
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          enemyIds_ = java.util.Collections.unmodifiableList(enemyIds_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.enemyIds_ = enemyIds_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          enemyTypes_ = java.util.Collections.unmodifiableList(enemyTypes_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.enemyTypes_ = enemyTypes_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          buffIds_ = java.util.Collections.unmodifiableList(buffIds_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.buffIds_ = buffIds_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.damageCnt_ = damageCnt_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.damagePer_ = damagePer_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.postSkill_ = postSkill_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.postTime_ = postTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BFSkillCfg) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BFSkillCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BFSkillCfg other) {
        if (other == com.hawk.game.protocol.BattleCfg.BFSkillCfg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTriggerType()) {
          setTriggerType(other.getTriggerType());
        }
        if (other.hasCastCheckType()) {
          setCastCheckType(other.getCastCheckType());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasSkillCd()) {
          setSkillCd(other.getSkillCd());
        }
        if (other.hasCdTeam()) {
          setCdTeam(other.getCdTeam());
        }
        if (other.hasAffectCamp()) {
          setAffectCamp(other.getAffectCamp());
        }
        if (other.hasAttackDisMin()) {
          setAttackDisMin(other.getAttackDisMin());
        }
        if (other.hasAttackDisLow()) {
          setAttackDisLow(other.getAttackDisLow());
        }
        if (other.hasAttackDisUp()) {
          setAttackDisUp(other.getAttackDisUp());
        }
        if (other.hasWaitTime()) {
          setWaitTime(other.getWaitTime());
        }
        if (other.hasLastTime()) {
          setLastTime(other.getLastTime());
        }
        if (other.hasBulletSpeed()) {
          setBulletSpeed(other.getBulletSpeed());
        }
        if (other.hasShape()) {
          mergeShape(other.getShape());
        }
        if (!other.enemyIds_.isEmpty()) {
          if (enemyIds_.isEmpty()) {
            enemyIds_ = other.enemyIds_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureEnemyIdsIsMutable();
            enemyIds_.addAll(other.enemyIds_);
          }
          onChanged();
        }
        if (!other.enemyTypes_.isEmpty()) {
          if (enemyTypes_.isEmpty()) {
            enemyTypes_ = other.enemyTypes_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureEnemyTypesIsMutable();
            enemyTypes_.addAll(other.enemyTypes_);
          }
          onChanged();
        }
        if (!other.buffIds_.isEmpty()) {
          if (buffIds_.isEmpty()) {
            buffIds_ = other.buffIds_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureBuffIdsIsMutable();
            buffIds_.addAll(other.buffIds_);
          }
          onChanged();
        }
        if (other.hasDamageCnt()) {
          setDamageCnt(other.getDamageCnt());
        }
        if (other.hasDamagePer()) {
          setDamagePer(other.getDamagePer());
        }
        if (other.hasPostSkill()) {
          setPostSkill(other.getPostSkill());
        }
        if (other.hasPostTime()) {
          setPostTime(other.getPostTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasSkillCd()) {
          
          return false;
        }
        if (!hasAffectCamp()) {
          
          return false;
        }
        if (!hasAttackDisMin()) {
          
          return false;
        }
        if (!hasAttackDisLow()) {
          
          return false;
        }
        if (!hasAttackDisUp()) {
          
          return false;
        }
        if (!hasShape()) {
          
          return false;
        }
        if (!hasDamageCnt()) {
          
          return false;
        }
        if (!getShape().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BFSkillCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BFSkillCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 技能ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 2;
      private int type_ ;
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 技能type
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 技能type
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 技能type
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 技能type
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 triggerType = 3;
      private int triggerType_ ;
      /**
       * <code>optional int32 triggerType = 3;</code>
       *
       * <pre>
       * 触发类型 @see SkillTrigType
       * </pre>
       */
      public boolean hasTriggerType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 triggerType = 3;</code>
       *
       * <pre>
       * 触发类型 @see SkillTrigType
       * </pre>
       */
      public int getTriggerType() {
        return triggerType_;
      }
      /**
       * <code>optional int32 triggerType = 3;</code>
       *
       * <pre>
       * 触发类型 @see SkillTrigType
       * </pre>
       */
      public Builder setTriggerType(int value) {
        bitField0_ |= 0x00000004;
        triggerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 triggerType = 3;</code>
       *
       * <pre>
       * 触发类型 @see SkillTrigType
       * </pre>
       */
      public Builder clearTriggerType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        triggerType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 castCheckType = 4;
      private int castCheckType_ ;
      /**
       * <code>optional int32 castCheckType = 4;</code>
       *
       * <pre>
       * 技能施放检查类型 @see CastCheckType
       * </pre>
       */
      public boolean hasCastCheckType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 castCheckType = 4;</code>
       *
       * <pre>
       * 技能施放检查类型 @see CastCheckType
       * </pre>
       */
      public int getCastCheckType() {
        return castCheckType_;
      }
      /**
       * <code>optional int32 castCheckType = 4;</code>
       *
       * <pre>
       * 技能施放检查类型 @see CastCheckType
       * </pre>
       */
      public Builder setCastCheckType(int value) {
        bitField0_ |= 0x00000008;
        castCheckType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 castCheckType = 4;</code>
       *
       * <pre>
       * 技能施放检查类型 @see CastCheckType
       * </pre>
       */
      public Builder clearCastCheckType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        castCheckType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 duration = 5;
      private int duration_ ;
      /**
       * <code>optional int32 duration = 5;</code>
       *
       * <pre>
       * 技能动画时间（不能干别的）
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 duration = 5;</code>
       *
       * <pre>
       * 技能动画时间（不能干别的）
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional int32 duration = 5;</code>
       *
       * <pre>
       * 技能动画时间（不能干别的）
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000010;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 duration = 5;</code>
       *
       * <pre>
       * 技能动画时间（不能干别的）
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        duration_ = 0;
        onChanged();
        return this;
      }

      // required int32 skillCd = 6;
      private int skillCd_ ;
      /**
       * <code>required int32 skillCd = 6;</code>
       *
       * <pre>
       * 技能冷却时间
       * </pre>
       */
      public boolean hasSkillCd() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 skillCd = 6;</code>
       *
       * <pre>
       * 技能冷却时间
       * </pre>
       */
      public int getSkillCd() {
        return skillCd_;
      }
      /**
       * <code>required int32 skillCd = 6;</code>
       *
       * <pre>
       * 技能冷却时间
       * </pre>
       */
      public Builder setSkillCd(int value) {
        bitField0_ |= 0x00000020;
        skillCd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 skillCd = 6;</code>
       *
       * <pre>
       * 技能冷却时间
       * </pre>
       */
      public Builder clearSkillCd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        skillCd_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cdTeam = 7;
      private int cdTeam_ ;
      /**
       * <code>optional int32 cdTeam = 7;</code>
       *
       * <pre>
       * 冷却组
       * </pre>
       */
      public boolean hasCdTeam() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 cdTeam = 7;</code>
       *
       * <pre>
       * 冷却组
       * </pre>
       */
      public int getCdTeam() {
        return cdTeam_;
      }
      /**
       * <code>optional int32 cdTeam = 7;</code>
       *
       * <pre>
       * 冷却组
       * </pre>
       */
      public Builder setCdTeam(int value) {
        bitField0_ |= 0x00000040;
        cdTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cdTeam = 7;</code>
       *
       * <pre>
       * 冷却组
       * </pre>
       */
      public Builder clearCdTeam() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cdTeam_ = 0;
        onChanged();
        return this;
      }

      // required int32 affectCamp = 10;
      private int affectCamp_ ;
      /**
       * <code>required int32 affectCamp = 10;</code>
       *
       * <pre>
       * 影响的敌我阵营 @see SkillCampType
       * </pre>
       */
      public boolean hasAffectCamp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 affectCamp = 10;</code>
       *
       * <pre>
       * 影响的敌我阵营 @see SkillCampType
       * </pre>
       */
      public int getAffectCamp() {
        return affectCamp_;
      }
      /**
       * <code>required int32 affectCamp = 10;</code>
       *
       * <pre>
       * 影响的敌我阵营 @see SkillCampType
       * </pre>
       */
      public Builder setAffectCamp(int value) {
        bitField0_ |= 0x00000080;
        affectCamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 affectCamp = 10;</code>
       *
       * <pre>
       * 影响的敌我阵营 @see SkillCampType
       * </pre>
       */
      public Builder clearAffectCamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        affectCamp_ = 0;
        onChanged();
        return this;
      }

      // required int32 attackDisMin = 11;
      private int attackDisMin_ ;
      /**
       * <code>required int32 attackDisMin = 11;</code>
       *
       * <pre>
       * 最小施放距离
       * </pre>
       */
      public boolean hasAttackDisMin() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 attackDisMin = 11;</code>
       *
       * <pre>
       * 最小施放距离
       * </pre>
       */
      public int getAttackDisMin() {
        return attackDisMin_;
      }
      /**
       * <code>required int32 attackDisMin = 11;</code>
       *
       * <pre>
       * 最小施放距离
       * </pre>
       */
      public Builder setAttackDisMin(int value) {
        bitField0_ |= 0x00000100;
        attackDisMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 attackDisMin = 11;</code>
       *
       * <pre>
       * 最小施放距离
       * </pre>
       */
      public Builder clearAttackDisMin() {
        bitField0_ = (bitField0_ & ~0x00000100);
        attackDisMin_ = 0;
        onChanged();
        return this;
      }

      // required int32 attackDisLow = 12;
      private int attackDisLow_ ;
      /**
       * <code>required int32 attackDisLow = 12;</code>
       *
       * <pre>
       * 最大施放距离下限
       * </pre>
       */
      public boolean hasAttackDisLow() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 attackDisLow = 12;</code>
       *
       * <pre>
       * 最大施放距离下限
       * </pre>
       */
      public int getAttackDisLow() {
        return attackDisLow_;
      }
      /**
       * <code>required int32 attackDisLow = 12;</code>
       *
       * <pre>
       * 最大施放距离下限
       * </pre>
       */
      public Builder setAttackDisLow(int value) {
        bitField0_ |= 0x00000200;
        attackDisLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 attackDisLow = 12;</code>
       *
       * <pre>
       * 最大施放距离下限
       * </pre>
       */
      public Builder clearAttackDisLow() {
        bitField0_ = (bitField0_ & ~0x00000200);
        attackDisLow_ = 0;
        onChanged();
        return this;
      }

      // required int32 attackDisUp = 13;
      private int attackDisUp_ ;
      /**
       * <code>required int32 attackDisUp = 13;</code>
       *
       * <pre>
       * 最大施放距离上限
       * </pre>
       */
      public boolean hasAttackDisUp() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 attackDisUp = 13;</code>
       *
       * <pre>
       * 最大施放距离上限
       * </pre>
       */
      public int getAttackDisUp() {
        return attackDisUp_;
      }
      /**
       * <code>required int32 attackDisUp = 13;</code>
       *
       * <pre>
       * 最大施放距离上限
       * </pre>
       */
      public Builder setAttackDisUp(int value) {
        bitField0_ |= 0x00000400;
        attackDisUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 attackDisUp = 13;</code>
       *
       * <pre>
       * 最大施放距离上限
       * </pre>
       */
      public Builder clearAttackDisUp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        attackDisUp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 waitTime = 14;
      private int waitTime_ ;
      /**
       * <code>optional int32 waitTime = 14;</code>
       *
       * <pre>
       * 施放后等待生效时间
       * </pre>
       */
      public boolean hasWaitTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 waitTime = 14;</code>
       *
       * <pre>
       * 施放后等待生效时间
       * </pre>
       */
      public int getWaitTime() {
        return waitTime_;
      }
      /**
       * <code>optional int32 waitTime = 14;</code>
       *
       * <pre>
       * 施放后等待生效时间
       * </pre>
       */
      public Builder setWaitTime(int value) {
        bitField0_ |= 0x00000800;
        waitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waitTime = 14;</code>
       *
       * <pre>
       * 施放后等待生效时间
       * </pre>
       */
      public Builder clearWaitTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        waitTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lastTime = 15;
      private int lastTime_ ;
      /**
       * <code>optional int32 lastTime = 15;</code>
       *
       * <pre>
       * 技能效果持续时间（光环类技能）
       * </pre>
       */
      public boolean hasLastTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 lastTime = 15;</code>
       *
       * <pre>
       * 技能效果持续时间（光环类技能）
       * </pre>
       */
      public int getLastTime() {
        return lastTime_;
      }
      /**
       * <code>optional int32 lastTime = 15;</code>
       *
       * <pre>
       * 技能效果持续时间（光环类技能）
       * </pre>
       */
      public Builder setLastTime(int value) {
        bitField0_ |= 0x00001000;
        lastTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lastTime = 15;</code>
       *
       * <pre>
       * 技能效果持续时间（光环类技能）
       * </pre>
       */
      public Builder clearLastTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        lastTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bulletSpeed = 16;
      private int bulletSpeed_ ;
      /**
       * <code>optional int32 bulletSpeed = 16;</code>
       *
       * <pre>
       * 弹道速度
       * </pre>
       */
      public boolean hasBulletSpeed() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 bulletSpeed = 16;</code>
       *
       * <pre>
       * 弹道速度
       * </pre>
       */
      public int getBulletSpeed() {
        return bulletSpeed_;
      }
      /**
       * <code>optional int32 bulletSpeed = 16;</code>
       *
       * <pre>
       * 弹道速度
       * </pre>
       */
      public Builder setBulletSpeed(int value) {
        bitField0_ |= 0x00002000;
        bulletSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bulletSpeed = 16;</code>
       *
       * <pre>
       * 弹道速度
       * </pre>
       */
      public Builder clearBulletSpeed() {
        bitField0_ = (bitField0_ & ~0x00002000);
        bulletSpeed_ = 0;
        onChanged();
        return this;
      }

      // required .SkillShape shape = 20;
      private com.hawk.game.protocol.BattleCfg.SkillShape shape_ = com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillShape, com.hawk.game.protocol.BattleCfg.SkillShape.Builder, com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder> shapeBuilder_;
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public boolean hasShape() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillShape getShape() {
        if (shapeBuilder_ == null) {
          return shape_;
        } else {
          return shapeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public Builder setShape(com.hawk.game.protocol.BattleCfg.SkillShape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shape_ = value;
          onChanged();
        } else {
          shapeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public Builder setShape(
          com.hawk.game.protocol.BattleCfg.SkillShape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          shape_ = builderForValue.build();
          onChanged();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public Builder mergeShape(com.hawk.game.protocol.BattleCfg.SkillShape value) {
        if (shapeBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              shape_ != com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance()) {
            shape_ =
              com.hawk.game.protocol.BattleCfg.SkillShape.newBuilder(shape_).mergeFrom(value).buildPartial();
          } else {
            shape_ = value;
          }
          onChanged();
        } else {
          shapeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = com.hawk.game.protocol.BattleCfg.SkillShape.getDefaultInstance();
          onChanged();
        } else {
          shapeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillShape.Builder getShapeBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder getShapeOrBuilder() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          return shape_;
        }
      }
      /**
       * <code>required .SkillShape shape = 20;</code>
       *
       * <pre>
       * 技能形状
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hawk.game.protocol.BattleCfg.SkillShape, com.hawk.game.protocol.BattleCfg.SkillShape.Builder, com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hawk.game.protocol.BattleCfg.SkillShape, com.hawk.game.protocol.BattleCfg.SkillShape.Builder, com.hawk.game.protocol.BattleCfg.SkillShapeOrBuilder>(
                  shape_,
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      // repeated int32 enemyIds = 21;
      private java.util.List<java.lang.Integer> enemyIds_ = java.util.Collections.emptyList();
      private void ensureEnemyIdsIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          enemyIds_ = new java.util.ArrayList<java.lang.Integer>(enemyIds_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEnemyIdsList() {
        return java.util.Collections.unmodifiableList(enemyIds_);
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public int getEnemyIdsCount() {
        return enemyIds_.size();
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public int getEnemyIds(int index) {
        return enemyIds_.get(index);
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public Builder setEnemyIds(
          int index, int value) {
        ensureEnemyIdsIsMutable();
        enemyIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public Builder addEnemyIds(int value) {
        ensureEnemyIdsIsMutable();
        enemyIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public Builder addAllEnemyIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEnemyIdsIsMutable();
        super.addAll(values, enemyIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enemyIds = 21;</code>
       *
       * <pre>
       * 影响的ID列表
       * </pre>
       */
      public Builder clearEnemyIds() {
        enemyIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 enemyTypes = 22;
      private java.util.List<java.lang.Integer> enemyTypes_ = java.util.Collections.emptyList();
      private void ensureEnemyTypesIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          enemyTypes_ = new java.util.ArrayList<java.lang.Integer>(enemyTypes_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getEnemyTypesList() {
        return java.util.Collections.unmodifiableList(enemyTypes_);
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public int getEnemyTypesCount() {
        return enemyTypes_.size();
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public int getEnemyTypes(int index) {
        return enemyTypes_.get(index);
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public Builder setEnemyTypes(
          int index, int value) {
        ensureEnemyTypesIsMutable();
        enemyTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public Builder addEnemyTypes(int value) {
        ensureEnemyTypesIsMutable();
        enemyTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public Builder addAllEnemyTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEnemyTypesIsMutable();
        super.addAll(values, enemyTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 enemyTypes = 22;</code>
       *
       * <pre>
       * 影响的type列表
       * </pre>
       */
      public Builder clearEnemyTypes() {
        enemyTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 buffIds = 23;
      private java.util.List<java.lang.Integer> buffIds_ = java.util.Collections.emptyList();
      private void ensureBuffIdsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          buffIds_ = new java.util.ArrayList<java.lang.Integer>(buffIds_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBuffIdsList() {
        return java.util.Collections.unmodifiableList(buffIds_);
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public int getBuffIdsCount() {
        return buffIds_.size();
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public int getBuffIds(int index) {
        return buffIds_.get(index);
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public Builder setBuffIds(
          int index, int value) {
        ensureBuffIdsIsMutable();
        buffIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public Builder addBuffIds(int value) {
        ensureBuffIdsIsMutable();
        buffIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public Builder addAllBuffIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBuffIdsIsMutable();
        super.addAll(values, buffIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buffIds = 23;</code>
       *
       * <pre>
       * 触发的buff列表
       * </pre>
       */
      public Builder clearBuffIds() {
        buffIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // required int32 damageCnt = 24;
      private int damageCnt_ ;
      /**
       * <code>required int32 damageCnt = 24;</code>
       *
       * <pre>
       * Buff生效数
       * </pre>
       */
      public boolean hasDamageCnt() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 damageCnt = 24;</code>
       *
       * <pre>
       * Buff生效数
       * </pre>
       */
      public int getDamageCnt() {
        return damageCnt_;
      }
      /**
       * <code>required int32 damageCnt = 24;</code>
       *
       * <pre>
       * Buff生效数
       * </pre>
       */
      public Builder setDamageCnt(int value) {
        bitField0_ |= 0x00040000;
        damageCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 damageCnt = 24;</code>
       *
       * <pre>
       * Buff生效数
       * </pre>
       */
      public Builder clearDamageCnt() {
        bitField0_ = (bitField0_ & ~0x00040000);
        damageCnt_ = 0;
        onChanged();
        return this;
      }

      // optional int32 damagePer = 25;
      private int damagePer_ ;
      /**
       * <code>optional int32 damagePer = 25;</code>
       *
       * <pre>
       * Buff效果衰减（次目标伤害万分比）
       * </pre>
       */
      public boolean hasDamagePer() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 damagePer = 25;</code>
       *
       * <pre>
       * Buff效果衰减（次目标伤害万分比）
       * </pre>
       */
      public int getDamagePer() {
        return damagePer_;
      }
      /**
       * <code>optional int32 damagePer = 25;</code>
       *
       * <pre>
       * Buff效果衰减（次目标伤害万分比）
       * </pre>
       */
      public Builder setDamagePer(int value) {
        bitField0_ |= 0x00080000;
        damagePer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 damagePer = 25;</code>
       *
       * <pre>
       * Buff效果衰减（次目标伤害万分比）
       * </pre>
       */
      public Builder clearDamagePer() {
        bitField0_ = (bitField0_ & ~0x00080000);
        damagePer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 postSkill = 30;
      private int postSkill_ ;
      /**
       * <code>optional int32 postSkill = 30;</code>
       *
       * <pre>
       * 后置技能
       * </pre>
       */
      public boolean hasPostSkill() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 postSkill = 30;</code>
       *
       * <pre>
       * 后置技能
       * </pre>
       */
      public int getPostSkill() {
        return postSkill_;
      }
      /**
       * <code>optional int32 postSkill = 30;</code>
       *
       * <pre>
       * 后置技能
       * </pre>
       */
      public Builder setPostSkill(int value) {
        bitField0_ |= 0x00100000;
        postSkill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 postSkill = 30;</code>
       *
       * <pre>
       * 后置技能
       * </pre>
       */
      public Builder clearPostSkill() {
        bitField0_ = (bitField0_ & ~0x00100000);
        postSkill_ = 0;
        onChanged();
        return this;
      }

      // optional int32 postTime = 31;
      private int postTime_ ;
      /**
       * <code>optional int32 postTime = 31;</code>
       *
       * <pre>
       * duration后间隔postTime施放后置技能
       * </pre>
       */
      public boolean hasPostTime() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 postTime = 31;</code>
       *
       * <pre>
       * duration后间隔postTime施放后置技能
       * </pre>
       */
      public int getPostTime() {
        return postTime_;
      }
      /**
       * <code>optional int32 postTime = 31;</code>
       *
       * <pre>
       * duration后间隔postTime施放后置技能
       * </pre>
       */
      public Builder setPostTime(int value) {
        bitField0_ |= 0x00200000;
        postTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 postTime = 31;</code>
       *
       * <pre>
       * duration后间隔postTime施放后置技能
       * </pre>
       */
      public Builder clearPostTime() {
        bitField0_ = (bitField0_ & ~0x00200000);
        postTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BFSkillCfg)
    }

    static {
      defaultInstance = new BFSkillCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BFSkillCfg)
  }

  public interface BFBuffCfgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * buff配置ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * buff配置ID
     * </pre>
     */
    int getId();

    // required int32 type = 2;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * buff类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * buff类型
     * </pre>
     */
    int getType();

    // required int32 valueType = 3;
    /**
     * <code>required int32 valueType = 3;</code>
     *
     * <pre>
     * buff数值类型 @see ValueType
     * </pre>
     */
    boolean hasValueType();
    /**
     * <code>required int32 valueType = 3;</code>
     *
     * <pre>
     * buff数值类型 @see ValueType
     * </pre>
     */
    int getValueType();

    // required int32 duration = 4;
    /**
     * <code>required int32 duration = 4;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>required int32 duration = 4;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    int getDuration();

    // optional int32 createUnitId = 10;
    /**
     * <code>optional int32 createUnitId = 10;</code>
     *
     * <pre>
     * 创建战斗单元ID
     * </pre>
     */
    boolean hasCreateUnitId();
    /**
     * <code>optional int32 createUnitId = 10;</code>
     *
     * <pre>
     * 创建战斗单元ID
     * </pre>
     */
    int getCreateUnitId();

    // optional int32 createUnitCnt = 11;
    /**
     * <code>optional int32 createUnitCnt = 11;</code>
     *
     * <pre>
     * 创建战斗单元数量
     * </pre>
     */
    boolean hasCreateUnitCnt();
    /**
     * <code>optional int32 createUnitCnt = 11;</code>
     *
     * <pre>
     * 创建战斗单元数量
     * </pre>
     */
    int getCreateUnitCnt();

    // repeated .BuffDmgCalc dmgCalc = 20;
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    java.util.List<com.hawk.game.protocol.BattleCfg.BuffDmgCalc> 
        getDmgCalcList();
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.BuffDmgCalc getDmgCalc(int index);
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    int getDmgCalcCount();
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    java.util.List<? extends com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder> 
        getDmgCalcOrBuilderList();
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder getDmgCalcOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code BFBuffCfg}
   *
   * <pre>
   * buff配置表
   * </pre>
   */
  public static final class BFBuffCfg extends
      com.google.protobuf.GeneratedMessage
      implements BFBuffCfgOrBuilder {
    // Use BFBuffCfg.newBuilder() to construct.
    private BFBuffCfg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BFBuffCfg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BFBuffCfg defaultInstance;
    public static BFBuffCfg getDefaultInstance() {
      return defaultInstance;
    }

    public BFBuffCfg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BFBuffCfg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              valueType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              duration_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              createUnitId_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              createUnitCnt_ = input.readInt32();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                dmgCalc_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.BuffDmgCalc>();
                mutable_bitField0_ |= 0x00000040;
              }
              dmgCalc_.add(input.readMessage(com.hawk.game.protocol.BattleCfg.BuffDmgCalc.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          dmgCalc_ = java.util.Collections.unmodifiableList(dmgCalc_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFBuffCfg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BFBuffCfg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BFBuffCfg.class, com.hawk.game.protocol.BattleCfg.BFBuffCfg.Builder.class);
    }

    public static com.google.protobuf.Parser<BFBuffCfg> PARSER =
        new com.google.protobuf.AbstractParser<BFBuffCfg>() {
      public BFBuffCfg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BFBuffCfg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BFBuffCfg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * buff配置ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * buff配置ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * buff类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 type = 2;</code>
     *
     * <pre>
     * buff类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 valueType = 3;
    public static final int VALUETYPE_FIELD_NUMBER = 3;
    private int valueType_;
    /**
     * <code>required int32 valueType = 3;</code>
     *
     * <pre>
     * buff数值类型 @see ValueType
     * </pre>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 valueType = 3;</code>
     *
     * <pre>
     * buff数值类型 @see ValueType
     * </pre>
     */
    public int getValueType() {
      return valueType_;
    }

    // required int32 duration = 4;
    public static final int DURATION_FIELD_NUMBER = 4;
    private int duration_;
    /**
     * <code>required int32 duration = 4;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 duration = 4;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    // optional int32 createUnitId = 10;
    public static final int CREATEUNITID_FIELD_NUMBER = 10;
    private int createUnitId_;
    /**
     * <code>optional int32 createUnitId = 10;</code>
     *
     * <pre>
     * 创建战斗单元ID
     * </pre>
     */
    public boolean hasCreateUnitId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 createUnitId = 10;</code>
     *
     * <pre>
     * 创建战斗单元ID
     * </pre>
     */
    public int getCreateUnitId() {
      return createUnitId_;
    }

    // optional int32 createUnitCnt = 11;
    public static final int CREATEUNITCNT_FIELD_NUMBER = 11;
    private int createUnitCnt_;
    /**
     * <code>optional int32 createUnitCnt = 11;</code>
     *
     * <pre>
     * 创建战斗单元数量
     * </pre>
     */
    public boolean hasCreateUnitCnt() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 createUnitCnt = 11;</code>
     *
     * <pre>
     * 创建战斗单元数量
     * </pre>
     */
    public int getCreateUnitCnt() {
      return createUnitCnt_;
    }

    // repeated .BuffDmgCalc dmgCalc = 20;
    public static final int DMGCALC_FIELD_NUMBER = 20;
    private java.util.List<com.hawk.game.protocol.BattleCfg.BuffDmgCalc> dmgCalc_;
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    public java.util.List<com.hawk.game.protocol.BattleCfg.BuffDmgCalc> getDmgCalcList() {
      return dmgCalc_;
    }
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    public java.util.List<? extends com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder> 
        getDmgCalcOrBuilderList() {
      return dmgCalc_;
    }
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    public int getDmgCalcCount() {
      return dmgCalc_.size();
    }
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.BuffDmgCalc getDmgCalc(int index) {
      return dmgCalc_.get(index);
    }
    /**
     * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
     *
     * <pre>
     * 不同等级计算公式 @see BuffDmgCalc
     * </pre>
     */
    public com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder getDmgCalcOrBuilder(
        int index) {
      return dmgCalc_.get(index);
    }

    private void initFields() {
      id_ = 0;
      type_ = 0;
      valueType_ = 0;
      duration_ = 0;
      createUnitId_ = 0;
      createUnitCnt_ = 0;
      dmgCalc_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDuration()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDmgCalcCount(); i++) {
        if (!getDmgCalc(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, valueType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, duration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(10, createUnitId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(11, createUnitCnt_);
      }
      for (int i = 0; i < dmgCalc_.size(); i++) {
        output.writeMessage(20, dmgCalc_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, valueType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, duration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, createUnitId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, createUnitCnt_);
      }
      for (int i = 0; i < dmgCalc_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, dmgCalc_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BFBuffCfg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BFBuffCfg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BFBuffCfg}
     *
     * <pre>
     * buff配置表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BFBuffCfgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFBuffCfg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFBuffCfg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BFBuffCfg.class, com.hawk.game.protocol.BattleCfg.BFBuffCfg.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BFBuffCfg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDmgCalcFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        createUnitId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        createUnitCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (dmgCalcBuilder_ == null) {
          dmgCalc_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          dmgCalcBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BFBuffCfg_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BFBuffCfg getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BFBuffCfg.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BFBuffCfg build() {
        com.hawk.game.protocol.BattleCfg.BFBuffCfg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BFBuffCfg buildPartial() {
        com.hawk.game.protocol.BattleCfg.BFBuffCfg result = new com.hawk.game.protocol.BattleCfg.BFBuffCfg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.createUnitId_ = createUnitId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.createUnitCnt_ = createUnitCnt_;
        if (dmgCalcBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            dmgCalc_ = java.util.Collections.unmodifiableList(dmgCalc_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.dmgCalc_ = dmgCalc_;
        } else {
          result.dmgCalc_ = dmgCalcBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BFBuffCfg) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BFBuffCfg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BFBuffCfg other) {
        if (other == com.hawk.game.protocol.BattleCfg.BFBuffCfg.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasCreateUnitId()) {
          setCreateUnitId(other.getCreateUnitId());
        }
        if (other.hasCreateUnitCnt()) {
          setCreateUnitCnt(other.getCreateUnitCnt());
        }
        if (dmgCalcBuilder_ == null) {
          if (!other.dmgCalc_.isEmpty()) {
            if (dmgCalc_.isEmpty()) {
              dmgCalc_ = other.dmgCalc_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDmgCalcIsMutable();
              dmgCalc_.addAll(other.dmgCalc_);
            }
            onChanged();
          }
        } else {
          if (!other.dmgCalc_.isEmpty()) {
            if (dmgCalcBuilder_.isEmpty()) {
              dmgCalcBuilder_.dispose();
              dmgCalcBuilder_ = null;
              dmgCalc_ = other.dmgCalc_;
              bitField0_ = (bitField0_ & ~0x00000040);
              dmgCalcBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDmgCalcFieldBuilder() : null;
            } else {
              dmgCalcBuilder_.addAllMessages(other.dmgCalc_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasValueType()) {
          
          return false;
        }
        if (!hasDuration()) {
          
          return false;
        }
        for (int i = 0; i < getDmgCalcCount(); i++) {
          if (!getDmgCalc(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BFBuffCfg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BFBuffCfg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * buff配置ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * buff配置ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * buff配置ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * buff配置ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required int32 type = 2;
      private int type_ ;
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * buff类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * buff类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * buff类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 2;</code>
       *
       * <pre>
       * buff类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // required int32 valueType = 3;
      private int valueType_ ;
      /**
       * <code>required int32 valueType = 3;</code>
       *
       * <pre>
       * buff数值类型 @see ValueType
       * </pre>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 valueType = 3;</code>
       *
       * <pre>
       * buff数值类型 @see ValueType
       * </pre>
       */
      public int getValueType() {
        return valueType_;
      }
      /**
       * <code>required int32 valueType = 3;</code>
       *
       * <pre>
       * buff数值类型 @see ValueType
       * </pre>
       */
      public Builder setValueType(int value) {
        bitField0_ |= 0x00000004;
        valueType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 valueType = 3;</code>
       *
       * <pre>
       * buff数值类型 @see ValueType
       * </pre>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        valueType_ = 0;
        onChanged();
        return this;
      }

      // required int32 duration = 4;
      private int duration_ ;
      /**
       * <code>required int32 duration = 4;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 duration = 4;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>required int32 duration = 4;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000008;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 duration = 4;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0;
        onChanged();
        return this;
      }

      // optional int32 createUnitId = 10;
      private int createUnitId_ ;
      /**
       * <code>optional int32 createUnitId = 10;</code>
       *
       * <pre>
       * 创建战斗单元ID
       * </pre>
       */
      public boolean hasCreateUnitId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 createUnitId = 10;</code>
       *
       * <pre>
       * 创建战斗单元ID
       * </pre>
       */
      public int getCreateUnitId() {
        return createUnitId_;
      }
      /**
       * <code>optional int32 createUnitId = 10;</code>
       *
       * <pre>
       * 创建战斗单元ID
       * </pre>
       */
      public Builder setCreateUnitId(int value) {
        bitField0_ |= 0x00000010;
        createUnitId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 createUnitId = 10;</code>
       *
       * <pre>
       * 创建战斗单元ID
       * </pre>
       */
      public Builder clearCreateUnitId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        createUnitId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 createUnitCnt = 11;
      private int createUnitCnt_ ;
      /**
       * <code>optional int32 createUnitCnt = 11;</code>
       *
       * <pre>
       * 创建战斗单元数量
       * </pre>
       */
      public boolean hasCreateUnitCnt() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 createUnitCnt = 11;</code>
       *
       * <pre>
       * 创建战斗单元数量
       * </pre>
       */
      public int getCreateUnitCnt() {
        return createUnitCnt_;
      }
      /**
       * <code>optional int32 createUnitCnt = 11;</code>
       *
       * <pre>
       * 创建战斗单元数量
       * </pre>
       */
      public Builder setCreateUnitCnt(int value) {
        bitField0_ |= 0x00000020;
        createUnitCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 createUnitCnt = 11;</code>
       *
       * <pre>
       * 创建战斗单元数量
       * </pre>
       */
      public Builder clearCreateUnitCnt() {
        bitField0_ = (bitField0_ & ~0x00000020);
        createUnitCnt_ = 0;
        onChanged();
        return this;
      }

      // repeated .BuffDmgCalc dmgCalc = 20;
      private java.util.List<com.hawk.game.protocol.BattleCfg.BuffDmgCalc> dmgCalc_ =
        java.util.Collections.emptyList();
      private void ensureDmgCalcIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          dmgCalc_ = new java.util.ArrayList<com.hawk.game.protocol.BattleCfg.BuffDmgCalc>(dmgCalc_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.BuffDmgCalc, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder, com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder> dmgCalcBuilder_;

      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.BuffDmgCalc> getDmgCalcList() {
        if (dmgCalcBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dmgCalc_);
        } else {
          return dmgCalcBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public int getDmgCalcCount() {
        if (dmgCalcBuilder_ == null) {
          return dmgCalc_.size();
        } else {
          return dmgCalcBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc getDmgCalc(int index) {
        if (dmgCalcBuilder_ == null) {
          return dmgCalc_.get(index);
        } else {
          return dmgCalcBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder setDmgCalc(
          int index, com.hawk.game.protocol.BattleCfg.BuffDmgCalc value) {
        if (dmgCalcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDmgCalcIsMutable();
          dmgCalc_.set(index, value);
          onChanged();
        } else {
          dmgCalcBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder setDmgCalc(
          int index, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder builderForValue) {
        if (dmgCalcBuilder_ == null) {
          ensureDmgCalcIsMutable();
          dmgCalc_.set(index, builderForValue.build());
          onChanged();
        } else {
          dmgCalcBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder addDmgCalc(com.hawk.game.protocol.BattleCfg.BuffDmgCalc value) {
        if (dmgCalcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDmgCalcIsMutable();
          dmgCalc_.add(value);
          onChanged();
        } else {
          dmgCalcBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder addDmgCalc(
          int index, com.hawk.game.protocol.BattleCfg.BuffDmgCalc value) {
        if (dmgCalcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDmgCalcIsMutable();
          dmgCalc_.add(index, value);
          onChanged();
        } else {
          dmgCalcBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder addDmgCalc(
          com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder builderForValue) {
        if (dmgCalcBuilder_ == null) {
          ensureDmgCalcIsMutable();
          dmgCalc_.add(builderForValue.build());
          onChanged();
        } else {
          dmgCalcBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder addDmgCalc(
          int index, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder builderForValue) {
        if (dmgCalcBuilder_ == null) {
          ensureDmgCalcIsMutable();
          dmgCalc_.add(index, builderForValue.build());
          onChanged();
        } else {
          dmgCalcBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder addAllDmgCalc(
          java.lang.Iterable<? extends com.hawk.game.protocol.BattleCfg.BuffDmgCalc> values) {
        if (dmgCalcBuilder_ == null) {
          ensureDmgCalcIsMutable();
          super.addAll(values, dmgCalc_);
          onChanged();
        } else {
          dmgCalcBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder clearDmgCalc() {
        if (dmgCalcBuilder_ == null) {
          dmgCalc_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          dmgCalcBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public Builder removeDmgCalc(int index) {
        if (dmgCalcBuilder_ == null) {
          ensureDmgCalcIsMutable();
          dmgCalc_.remove(index);
          onChanged();
        } else {
          dmgCalcBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder getDmgCalcBuilder(
          int index) {
        return getDmgCalcFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder getDmgCalcOrBuilder(
          int index) {
        if (dmgCalcBuilder_ == null) {
          return dmgCalc_.get(index);  } else {
          return dmgCalcBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public java.util.List<? extends com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder> 
           getDmgCalcOrBuilderList() {
        if (dmgCalcBuilder_ != null) {
          return dmgCalcBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dmgCalc_);
        }
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder addDmgCalcBuilder() {
        return getDmgCalcFieldBuilder().addBuilder(
            com.hawk.game.protocol.BattleCfg.BuffDmgCalc.getDefaultInstance());
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder addDmgCalcBuilder(
          int index) {
        return getDmgCalcFieldBuilder().addBuilder(
            index, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.getDefaultInstance());
      }
      /**
       * <code>repeated .BuffDmgCalc dmgCalc = 20;</code>
       *
       * <pre>
       * 不同等级计算公式 @see BuffDmgCalc
       * </pre>
       */
      public java.util.List<com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder> 
           getDmgCalcBuilderList() {
        return getDmgCalcFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hawk.game.protocol.BattleCfg.BuffDmgCalc, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder, com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder> 
          getDmgCalcFieldBuilder() {
        if (dmgCalcBuilder_ == null) {
          dmgCalcBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hawk.game.protocol.BattleCfg.BuffDmgCalc, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder, com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder>(
                  dmgCalc_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          dmgCalc_ = null;
        }
        return dmgCalcBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BFBuffCfg)
    }

    static {
      defaultInstance = new BFBuffCfg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BFBuffCfg)
  }

  public interface BuffDmgCalcOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 level = 1;
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    int getLevel();

    // required float dmgParam1 = 2;
    /**
     * <code>required float dmgParam1 = 2;</code>
     *
     * <pre>
     * 伤害类的参数1
     * </pre>
     */
    boolean hasDmgParam1();
    /**
     * <code>required float dmgParam1 = 2;</code>
     *
     * <pre>
     * 伤害类的参数1
     * </pre>
     */
    float getDmgParam1();

    // required float dmgParam2 = 3;
    /**
     * <code>required float dmgParam2 = 3;</code>
     *
     * <pre>
     * 伤害类的参数2
     * </pre>
     */
    boolean hasDmgParam2();
    /**
     * <code>required float dmgParam2 = 3;</code>
     *
     * <pre>
     * 伤害类的参数2
     * </pre>
     */
    float getDmgParam2();

    // required float dmgParam3 = 4;
    /**
     * <code>required float dmgParam3 = 4;</code>
     *
     * <pre>
     * 伤害类的参数3
     * </pre>
     */
    boolean hasDmgParam3();
    /**
     * <code>required float dmgParam3 = 4;</code>
     *
     * <pre>
     * 伤害类的参数3
     * </pre>
     */
    float getDmgParam3();
  }
  /**
   * Protobuf type {@code BuffDmgCalc}
   *
   * <pre>
   * buff配置表
   * </pre>
   */
  public static final class BuffDmgCalc extends
      com.google.protobuf.GeneratedMessage
      implements BuffDmgCalcOrBuilder {
    // Use BuffDmgCalc.newBuilder() to construct.
    private BuffDmgCalc(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BuffDmgCalc(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BuffDmgCalc defaultInstance;
    public static BuffDmgCalc getDefaultInstance() {
      return defaultInstance;
    }

    public BuffDmgCalc getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BuffDmgCalc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              level_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              dmgParam1_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              dmgParam2_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              dmgParam3_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BuffDmgCalc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hawk.game.protocol.BattleCfg.internal_static_BuffDmgCalc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hawk.game.protocol.BattleCfg.BuffDmgCalc.class, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder.class);
    }

    public static com.google.protobuf.Parser<BuffDmgCalc> PARSER =
        new com.google.protobuf.AbstractParser<BuffDmgCalc>() {
      public BuffDmgCalc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuffDmgCalc(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuffDmgCalc> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 level = 1;
    public static final int LEVEL_FIELD_NUMBER = 1;
    private int level_;
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required float dmgParam1 = 2;
    public static final int DMGPARAM1_FIELD_NUMBER = 2;
    private float dmgParam1_;
    /**
     * <code>required float dmgParam1 = 2;</code>
     *
     * <pre>
     * 伤害类的参数1
     * </pre>
     */
    public boolean hasDmgParam1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float dmgParam1 = 2;</code>
     *
     * <pre>
     * 伤害类的参数1
     * </pre>
     */
    public float getDmgParam1() {
      return dmgParam1_;
    }

    // required float dmgParam2 = 3;
    public static final int DMGPARAM2_FIELD_NUMBER = 3;
    private float dmgParam2_;
    /**
     * <code>required float dmgParam2 = 3;</code>
     *
     * <pre>
     * 伤害类的参数2
     * </pre>
     */
    public boolean hasDmgParam2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float dmgParam2 = 3;</code>
     *
     * <pre>
     * 伤害类的参数2
     * </pre>
     */
    public float getDmgParam2() {
      return dmgParam2_;
    }

    // required float dmgParam3 = 4;
    public static final int DMGPARAM3_FIELD_NUMBER = 4;
    private float dmgParam3_;
    /**
     * <code>required float dmgParam3 = 4;</code>
     *
     * <pre>
     * 伤害类的参数3
     * </pre>
     */
    public boolean hasDmgParam3() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float dmgParam3 = 4;</code>
     *
     * <pre>
     * 伤害类的参数3
     * </pre>
     */
    public float getDmgParam3() {
      return dmgParam3_;
    }

    private void initFields() {
      level_ = 0;
      dmgParam1_ = 0F;
      dmgParam2_ = 0F;
      dmgParam3_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDmgParam1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDmgParam2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDmgParam3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, dmgParam1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, dmgParam2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, dmgParam3_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, dmgParam1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, dmgParam2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, dmgParam3_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hawk.game.protocol.BattleCfg.BuffDmgCalc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hawk.game.protocol.BattleCfg.BuffDmgCalc prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BuffDmgCalc}
     *
     * <pre>
     * buff配置表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hawk.game.protocol.BattleCfg.BuffDmgCalcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BuffDmgCalc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BuffDmgCalc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hawk.game.protocol.BattleCfg.BuffDmgCalc.class, com.hawk.game.protocol.BattleCfg.BuffDmgCalc.Builder.class);
      }

      // Construct using com.hawk.game.protocol.BattleCfg.BuffDmgCalc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dmgParam1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        dmgParam2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        dmgParam3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hawk.game.protocol.BattleCfg.internal_static_BuffDmgCalc_descriptor;
      }

      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc getDefaultInstanceForType() {
        return com.hawk.game.protocol.BattleCfg.BuffDmgCalc.getDefaultInstance();
      }

      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc build() {
        com.hawk.game.protocol.BattleCfg.BuffDmgCalc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hawk.game.protocol.BattleCfg.BuffDmgCalc buildPartial() {
        com.hawk.game.protocol.BattleCfg.BuffDmgCalc result = new com.hawk.game.protocol.BattleCfg.BuffDmgCalc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dmgParam1_ = dmgParam1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dmgParam2_ = dmgParam2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dmgParam3_ = dmgParam3_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hawk.game.protocol.BattleCfg.BuffDmgCalc) {
          return mergeFrom((com.hawk.game.protocol.BattleCfg.BuffDmgCalc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hawk.game.protocol.BattleCfg.BuffDmgCalc other) {
        if (other == com.hawk.game.protocol.BattleCfg.BuffDmgCalc.getDefaultInstance()) return this;
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasDmgParam1()) {
          setDmgParam1(other.getDmgParam1());
        }
        if (other.hasDmgParam2()) {
          setDmgParam2(other.getDmgParam2());
        }
        if (other.hasDmgParam3()) {
          setDmgParam3(other.getDmgParam3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasDmgParam1()) {
          
          return false;
        }
        if (!hasDmgParam2()) {
          
          return false;
        }
        if (!hasDmgParam3()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hawk.game.protocol.BattleCfg.BuffDmgCalc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hawk.game.protocol.BattleCfg.BuffDmgCalc) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 level = 1;
      private int level_ ;
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000001;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * 等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        onChanged();
        return this;
      }

      // required float dmgParam1 = 2;
      private float dmgParam1_ ;
      /**
       * <code>required float dmgParam1 = 2;</code>
       *
       * <pre>
       * 伤害类的参数1
       * </pre>
       */
      public boolean hasDmgParam1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float dmgParam1 = 2;</code>
       *
       * <pre>
       * 伤害类的参数1
       * </pre>
       */
      public float getDmgParam1() {
        return dmgParam1_;
      }
      /**
       * <code>required float dmgParam1 = 2;</code>
       *
       * <pre>
       * 伤害类的参数1
       * </pre>
       */
      public Builder setDmgParam1(float value) {
        bitField0_ |= 0x00000002;
        dmgParam1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float dmgParam1 = 2;</code>
       *
       * <pre>
       * 伤害类的参数1
       * </pre>
       */
      public Builder clearDmgParam1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dmgParam1_ = 0F;
        onChanged();
        return this;
      }

      // required float dmgParam2 = 3;
      private float dmgParam2_ ;
      /**
       * <code>required float dmgParam2 = 3;</code>
       *
       * <pre>
       * 伤害类的参数2
       * </pre>
       */
      public boolean hasDmgParam2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float dmgParam2 = 3;</code>
       *
       * <pre>
       * 伤害类的参数2
       * </pre>
       */
      public float getDmgParam2() {
        return dmgParam2_;
      }
      /**
       * <code>required float dmgParam2 = 3;</code>
       *
       * <pre>
       * 伤害类的参数2
       * </pre>
       */
      public Builder setDmgParam2(float value) {
        bitField0_ |= 0x00000004;
        dmgParam2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float dmgParam2 = 3;</code>
       *
       * <pre>
       * 伤害类的参数2
       * </pre>
       */
      public Builder clearDmgParam2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dmgParam2_ = 0F;
        onChanged();
        return this;
      }

      // required float dmgParam3 = 4;
      private float dmgParam3_ ;
      /**
       * <code>required float dmgParam3 = 4;</code>
       *
       * <pre>
       * 伤害类的参数3
       * </pre>
       */
      public boolean hasDmgParam3() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float dmgParam3 = 4;</code>
       *
       * <pre>
       * 伤害类的参数3
       * </pre>
       */
      public float getDmgParam3() {
        return dmgParam3_;
      }
      /**
       * <code>required float dmgParam3 = 4;</code>
       *
       * <pre>
       * 伤害类的参数3
       * </pre>
       */
      public Builder setDmgParam3(float value) {
        bitField0_ |= 0x00000008;
        dmgParam3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float dmgParam3 = 4;</code>
       *
       * <pre>
       * 伤害类的参数3
       * </pre>
       */
      public Builder clearDmgParam3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dmgParam3_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BuffDmgCalc)
    }

    static {
      defaultInstance = new BuffDmgCalc(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BuffDmgCalc)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillShape_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillShape_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UnitSize_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnitSize_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UnitPos_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnitPos_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UnitAttr_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnitAttr_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UnitData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UnitData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KillData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KillData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BFMapCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BFMapCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BFMissionCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BFMissionCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeployRange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeployRange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MissionUnit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MissionUnit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BFUnitCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BFUnitCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BFMonsterCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BFMonsterCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BFSkillCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BFSkillCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BFBuffCfg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BFBuffCfg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BuffDmgCalc_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BuffDmgCalc_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017BattleCfg.proto\"\\\n\nSkillShape\022\021\n\tshape" +
      "Type\030\001 \002(\005\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 \001(" +
      "\005\022\r\n\005range\030\004 \001(\005\022\r\n\005angle\030\005 \001(\005\")\n\010UnitS" +
      "ize\022\r\n\005width\030\001 \002(\005\022\016\n\006height\030\002 \002(\005\"\037\n\007Un" +
      "itPos\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\"\216\001\n\010UnitAttr" +
      "\022\016\n\006unitHp\030\001 \001(\005\022\022\n\nunitAttack\030\002 \001(\005\022\023\n\013" +
      "unitDefence\030\003 \001(\005\022\017\n\007unitHit\030\004 \001(\005\022\020\n\010un" +
      "itMiss\030\005 \001(\005\022\020\n\010unitCrit\030\006 \001(\005\022\024\n\014unitAn" +
      "tiCrit\030\007 \001(\005\"\240\002\n\010UnitData\022\n\n\002id\030\001 \002(\005\022\016\n" +
      "\006itemId\030\002 \002(\005\022\r\n\005count\030\003 \002(\005\022\n\n\002hp\030\004 \001(\005",
      "\022\021\n\tmonsterId\030\005 \001(\005\022\033\n\010unitAttr\030\006 \001(\0132\t." +
      "UnitAttr\022\r\n\005level\030\007 \001(\005\022\021\n\ttroopType\030\010 \001" +
      "(\005\022\017\n\007groupId\030\t \001(\005\022\023\n\013extendState\030\n \001(\005" +
      "\022\020\n\010playerId\030\013 \001(\t\022\025\n\003pos\030\014 \001(\0132\010.UnitPo" +
      "s\022\036\n\nskillDatas\030\r \003(\0132\n.SkillData\022\034\n\tkil" +
      "lDatas\030\016 \003(\0132\t.KillData\"%\n\010KillData\022\n\n\002i" +
      "d\030\001 \002(\005\022\r\n\005count\030\002 \002(\005\"&\n\tSkillData\022\n\n\002i" +
      "d\030\001 \002(\005\022\r\n\005level\030\002 \002(\005\"\225\002\n\010BFMapCfg\022\n\n\002i" +
      "d\030\001 \002(\005\022\r\n\005width\030\002 \002(\005\022\016\n\006height\030\003 \002(\005\022\021" +
      "\n\ttileWidth\030\004 \002(\005\022\022\n\ntileHeight\030\005 \002(\005\022\030\n",
      "\006atkPos\030\n \002(\0132\010.UnitPos\022\030\n\006defPos\030\013 \002(\0132" +
      "\010.UnitPos\022\030\n\006warPos\030\014 \001(\0132\010.UnitPos\022\021\n\th" +
      "overTime\030\r \001(\005\022\023\n\013maxFindStep\030\016 \001(\005\022\025\n\rc" +
      "rawlFindMode\030\017 \001(\005\022\r\n\005datas\030\024 \003(\005\022\033\n\tnav" +
      "meshes\030\025 \003(\0132\010.UnitPos\"\213\002\n\014BFMissionCfg\022" +
      "\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\r\n\005mapId\030\003 \002(\005" +
      "\022\021\n\ttimeLimit\030\004 \002(\005\022\023\n\013atkWarningY\030\006 \002(\005" +
      "\022\023\n\013defWarningY\030\007 \002(\005\022\026\n\016atkTargetItems\030" +
      "\013 \003(\005\022\026\n\016defTargetItems\030\014 \003(\005\022\036\n\010atkUnit" +
      "s\030\r \003(\0132\014.MissionUnit\022\036\n\010defUnits\030\016 \003(\0132",
      "\014.MissionUnit\022%\n\017deployRangeList\030\017 \003(\0132\014" +
      ".DeployRange\"O\n\013DeployRange\022\020\n\010reserved\030" +
      "\001 \002(\005\022\026\n\004rmin\030\002 \002(\0132\010.UnitPos\022\026\n\004rmax\030\003 " +
      "\002(\0132\010.UnitPos\"a\n\013MissionUnit\022\n\n\002id\030\001 \002(\005" +
      "\022\r\n\005objId\030\002 \002(\005\022\017\n\007groupId\030\003 \002(\005\022\025\n\003pos\030" +
      "\004 \002(\0132\010.UnitPos\022\017\n\007initDir\030\005 \002(\005\"\366\001\n\tBFU" +
      "nitCfg\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\027\n\004size" +
      "\030\003 \002(\0132\t.UnitSize\022\020\n\010posPrior\030\004 \002(\005\022\021\n\tv" +
      "iewRange\030\005 \002(\005\022\022\n\ntrackRange\030\006 \002(\005\022\022\n\nid" +
      "lePeriod\030\n \002(\005\022\022\n\nmovePeriod\030\013 \002(\005\022\022\n\ntu",
      "rnPeriod\030\014 \001(\005\022\020\n\010moveStep\030\r \001(\005\022\017\n\007free" +
      "Fly\030\016 \001(\005\022\036\n\nskillDatas\030\024 \003(\0132\n.SkillDat" +
      "a\"g\n\014BFMonsterCfg\022\n\n\002id\030\001 \002(\005\022\016\n\006itemId\030" +
      "\002 \002(\005\022\033\n\010unitAttr\030\003 \002(\0132\t.UnitAttr\022\036\n\nsk" +
      "illDatas\030\004 \003(\0132\n.SkillData\"\261\003\n\nBFSkillCf" +
      "g\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \001(\005\022\023\n\013triggerTy" +
      "pe\030\003 \001(\005\022\025\n\rcastCheckType\030\004 \001(\005\022\020\n\010durat" +
      "ion\030\005 \001(\005\022\017\n\007skillCd\030\006 \002(\005\022\016\n\006cdTeam\030\007 \001" +
      "(\005\022\022\n\naffectCamp\030\n \002(\005\022\024\n\014attackDisMin\030\013" +
      " \002(\005\022\024\n\014attackDisLow\030\014 \002(\005\022\023\n\013attackDisU",
      "p\030\r \002(\005\022\020\n\010waitTime\030\016 \001(\005\022\020\n\010lastTime\030\017 " +
      "\001(\005\022\023\n\013bulletSpeed\030\020 \001(\005\022\032\n\005shape\030\024 \002(\0132" +
      "\013.SkillShape\022\020\n\010enemyIds\030\025 \003(\005\022\022\n\nenemyT" +
      "ypes\030\026 \003(\005\022\017\n\007buffIds\030\027 \003(\005\022\021\n\tdamageCnt" +
      "\030\030 \002(\005\022\021\n\tdamagePer\030\031 \001(\005\022\021\n\tpostSkill\030\036" +
      " \001(\005\022\020\n\010postTime\030\037 \001(\005\"\226\001\n\tBFBuffCfg\022\n\n\002" +
      "id\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\021\n\tvalueType\030\003 \002(" +
      "\005\022\020\n\010duration\030\004 \002(\005\022\024\n\014createUnitId\030\n \001(" +
      "\005\022\025\n\rcreateUnitCnt\030\013 \001(\005\022\035\n\007dmgCalc\030\024 \003(" +
      "\0132\014.BuffDmgCalc\"U\n\013BuffDmgCalc\022\r\n\005level\030",
      "\001 \002(\005\022\021\n\tdmgParam1\030\002 \002(\002\022\021\n\tdmgParam2\030\003 " +
      "\002(\002\022\021\n\tdmgParam3\030\004 \002(\002*\256\003\n\007BFConst\022\023\n\rMA" +
      "X_TICK_TIME\020\300\317$\022\027\n\022TROOP_UNIT_TYPE_ID\020\350\007" +
      "\022\021\n\rMAX_TICK_RATE\020\005\022\023\n\017FRONT_DIR_COUNT\020\010" +
      "\022\025\n\020ATTACK_CRIT_RATE\020\230u\022\026\n\022BATTLE_TICK_P" +
      "ERIOD\0202\022\025\n\020BUFF_TICK_PERIOD\020\350\007\022\026\n\021SKILL_" +
      "TICK_PERIOD\020\350\007\022\020\n\013DEAD_PERIOD\020\310\001\022\025\n\020DISA" +
      "PPEAR_PERIOD\020\210\'\022\026\n\021HERO_ENTER_CD_PER\020\210\'\022" +
      "\022\n\016HERO_PUBLIC_CD\020\000\022\023\n\016USA_SOLDIER_ID\020\375U" +
      "\022\025\n\020USA_SOLDIER_ID_2\020\200V\022\025\n\020USA_SOLDIER_I",
      "D_3\020\202V\022\023\n\016SITDOWN_PERIOD\020\364\003\022\023\n\017MODEL_COU" +
      "NT_ONE\020\001\022\023\n\017MODEL_COUNT_PVE\020d\022\024\n\017MODEL_C" +
      "OUNT_PVP\020\350\007\032\002\020\001*e\n\tBFCfgType\022\013\n\007CFG_MAP\020" +
      "\001\022\017\n\013CFG_MISSION\020\002\022\017\n\013CFG_MONSTER\020\003\022\014\n\010C" +
      "FG_UNIT\020\004\022\r\n\tCFG_SKILL\020\005\022\014\n\010CFG_BUFF\020\006*/" +
      "\n\013MissionType\022\017\n\013MISSION_ATK\020\001\022\017\n\013MISSIO" +
      "N_DEF\020\002*0\n\tValueType\022\021\n\rVALUE_PERCENT\020\001\022" +
      "\020\n\014VALUE_NUMBER\020\002*\206\002\n\010UnitType\022\022\n\016UNIT_H" +
      "ERO_FOOT\020\001\022\022\n\016UNIT_HERO_TANK\020\002\022\023\n\017UNIT_H" +
      "ERO_PLANE\020\003\022\r\n\tUNIT_FOOT\020\013\022\r\n\tUNIT_TANK\020",
      "\014\022\016\n\nUNIT_PLANE\020\r\022\021\n\rUNIT_AIR_FOOT\020\016\022\017\n\013" +
      "UNIT_PTROOP\020\017\022\020\n\014UNIT_MISSILE\020\025\022\017\n\013UNIT_" +
      "BOMBER\020\026\022\021\n\rUNIT_BUILDING\020\036\022\020\n\014UNIT_DEFE" +
      "NCE\020(\022\021\n\rUNIT_ORNAMENT\0202\022\020\n\014UNIT_VIRTUAL" +
      "\020<*_\n\rSkillTrigType\022\017\n\013TRIG_MANUAL\020\001\022\r\n\t" +
      "TRIG_POST\020\002\022\r\n\tTRIG_DEAD\020\003\022\016\n\nTRIG_ENTER" +
      "\020\004\022\017\n\013TRIG_ATTACK\020\005*i\n\rSkillCampType\022\024\n\020" +
      "SKILL_CAMP_ENEMY\020\001\022\026\n\022SKILL_CAMP_OWNSIDE" +
      "\020\002\022\025\n\021SKILL_CAMP_FRIEND\020\003\022\023\n\017SKILL_CAMP_" +
      "SELF\020\004*\232\001\n\rCastCheckType\022\025\n\021CHECK_X_UNIT",
      "_SELF\020\001\022\024\n\020CHECK_X_POS_SELF\020\002\022\025\n\021CHECK_Y" +
      "_UNIT_SELF\020\003\022\027\n\023CHECK_Y_UNIT_TARGET\020\004\022\024\n" +
      "\020CHECK_Y_POS_SELF\020\005\022\026\n\022CHECK_Y_POS_TARGE" +
      "T\020\006*D\n\022ModifyUnitAttrType\022\r\n\tUAT_TROOP\020\001" +
      "\022\r\n\tUAT_GROUP\020\002\022\020\n\014UAT_UNITLIST\020\003*\316\002\n\021Tr" +
      "iggerActionType\022\021\n\rA_SetUnitMove\020\001\022\023\n\017A_" +
      "SetUnitAttack\020\002\022\022\n\016A_SetUnitState\020\003\022\025\n\021A" +
      "_SetTriggerState\020\004\022\022\n\016A_SetGameState\020\005\022\023" +
      "\n\017A_SetUnitRevive\020\006\022\025\n\021A_SetUnitProgress" +
      "\020\007\022\021\n\rA_SendUIEvent\020\010\022\027\n\023A_SetUnitGroupS",
      "tate\020\t\022\022\n\016A_SetUnitTroop\020\n\022\020\n\014A_CreateUn" +
      "it\020\013\022\025\n\021A_ModifyUnitGroup\020\014\022\024\n\020A_ModifyU" +
      "nitAttr\020\r\022\021\n\rA_SetVariable\020\016\022\024\n\020A_Modify" +
      "Variable\020\017*~\n\016SkillShapeType\022\024\n\020SKILL_SH" +
      "APE_NULL\020\000\022\026\n\022SKILL_SHAPE_CIRCLE\020\001\022\024\n\020SK" +
      "ILL_SHAPE_RECT\020\002\022\023\n\017SKILL_SHAPE_FAN\020\003\022\023\n" +
      "\017SKILL_SHAPE_ALL\020\t*9\n\tSkillType\022\025\n\021SKILL" +
      "_TYPE_ATTACK\020\000\022\025\n\021SKILL_TYPE_COMMON\020\001*\241\002" +
      "\n\010BuffType\022\016\n\tBUFF_HURT\020\350\007\022\014\n\007BUFF_HP\020\351\007" +
      "\022\020\n\013BUFF_ATTACK\020\354\007\022\021\n\014BUFF_DEFANCE\020\355\007\022\016\n",
      "\tBUFF_CIRT\020\356\007\022\022\n\rBUFF_ANTICIRT\020\357\007\022\r\n\010BUF" +
      "F_HIT\020\360\007\022\016\n\tBUFF_MISS\020\361\007\022\026\n\021BUFF_ATTACKP" +
      "ERIOD\020\362\007\022\024\n\017BUFF_MOVEPERIOD\020\363\007\022\023\n\016BUFF_I" +
      "NVISIBLE\020\374\007\022\020\n\013BUFF_SHIELD\020\375\007\022\017\n\nBUFF_TA" +
      "UNT\020\376\007\022\020\n\013BUFF_CREATE\020\206\010\022\027\n\022BUFF_CREATE_" +
      "EXTEND\020\207\010*G\n\nDamageType\022\016\n\nDMG_NORMAL\020\001\022" +
      "\014\n\010DMG_MISS\020\002\022\014\n\010DMG_CRIT\020\003\022\r\n\tDMG_SKILL" +
      "\020\004B\030\n\026com.hawk.game.protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SkillShape_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SkillShape_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SkillShape_descriptor,
              new java.lang.String[] { "ShapeType", "Width", "Height", "Range", "Angle", });
          internal_static_UnitSize_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_UnitSize_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UnitSize_descriptor,
              new java.lang.String[] { "Width", "Height", });
          internal_static_UnitPos_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_UnitPos_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UnitPos_descriptor,
              new java.lang.String[] { "X", "Y", });
          internal_static_UnitAttr_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_UnitAttr_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UnitAttr_descriptor,
              new java.lang.String[] { "UnitHp", "UnitAttack", "UnitDefence", "UnitHit", "UnitMiss", "UnitCrit", "UnitAntiCrit", });
          internal_static_UnitData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_UnitData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UnitData_descriptor,
              new java.lang.String[] { "Id", "ItemId", "Count", "Hp", "MonsterId", "UnitAttr", "Level", "TroopType", "GroupId", "ExtendState", "PlayerId", "Pos", "SkillDatas", "KillDatas", });
          internal_static_KillData_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_KillData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_KillData_descriptor,
              new java.lang.String[] { "Id", "Count", });
          internal_static_SkillData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_SkillData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SkillData_descriptor,
              new java.lang.String[] { "Id", "Level", });
          internal_static_BFMapCfg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_BFMapCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BFMapCfg_descriptor,
              new java.lang.String[] { "Id", "Width", "Height", "TileWidth", "TileHeight", "AtkPos", "DefPos", "WarPos", "HoverTime", "MaxFindStep", "CrawlFindMode", "Datas", "Navmeshes", });
          internal_static_BFMissionCfg_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_BFMissionCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BFMissionCfg_descriptor,
              new java.lang.String[] { "Id", "Type", "MapId", "TimeLimit", "AtkWarningY", "DefWarningY", "AtkTargetItems", "DefTargetItems", "AtkUnits", "DefUnits", "DeployRangeList", });
          internal_static_DeployRange_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_DeployRange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeployRange_descriptor,
              new java.lang.String[] { "Reserved", "Rmin", "Rmax", });
          internal_static_MissionUnit_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_MissionUnit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MissionUnit_descriptor,
              new java.lang.String[] { "Id", "ObjId", "GroupId", "Pos", "InitDir", });
          internal_static_BFUnitCfg_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_BFUnitCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BFUnitCfg_descriptor,
              new java.lang.String[] { "Id", "Type", "Size", "PosPrior", "ViewRange", "TrackRange", "IdlePeriod", "MovePeriod", "TurnPeriod", "MoveStep", "FreeFly", "SkillDatas", });
          internal_static_BFMonsterCfg_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_BFMonsterCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BFMonsterCfg_descriptor,
              new java.lang.String[] { "Id", "ItemId", "UnitAttr", "SkillDatas", });
          internal_static_BFSkillCfg_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_BFSkillCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BFSkillCfg_descriptor,
              new java.lang.String[] { "Id", "Type", "TriggerType", "CastCheckType", "Duration", "SkillCd", "CdTeam", "AffectCamp", "AttackDisMin", "AttackDisLow", "AttackDisUp", "WaitTime", "LastTime", "BulletSpeed", "Shape", "EnemyIds", "EnemyTypes", "BuffIds", "DamageCnt", "DamagePer", "PostSkill", "PostTime", });
          internal_static_BFBuffCfg_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_BFBuffCfg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BFBuffCfg_descriptor,
              new java.lang.String[] { "Id", "Type", "ValueType", "Duration", "CreateUnitId", "CreateUnitCnt", "DmgCalc", });
          internal_static_BuffDmgCalc_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_BuffDmgCalc_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BuffDmgCalc_descriptor,
              new java.lang.String[] { "Level", "DmgParam1", "DmgParam2", "DmgParam3", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
